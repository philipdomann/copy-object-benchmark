# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 65423.471 ops/ms
# Warmup Iteration   2: 95068.592 ops/ms
# Warmup Iteration   3: 98166.714 ops/ms
# Warmup Iteration   4: 87922.446 ops/ms
# Warmup Iteration   5: 92605.117 ops/ms
# Warmup Iteration   6: 89745.798 ops/ms
# Warmup Iteration   7: 92866.820 ops/ms
# Warmup Iteration   8: 94808.878 ops/ms
# Warmup Iteration   9: 99632.366 ops/ms
# Warmup Iteration  10: 101921.094 ops/ms
# Warmup Iteration  11: 102071.478 ops/ms
# Warmup Iteration  12: 93508.342 ops/ms
# Warmup Iteration  13: 92991.368 ops/ms
# Warmup Iteration  14: 92372.195 ops/ms
# Warmup Iteration  15: 92672.788 ops/ms
# Warmup Iteration  16: 99742.767 ops/ms
# Warmup Iteration  17: 96132.248 ops/ms
# Warmup Iteration  18: 101702.464 ops/ms
# Warmup Iteration  19: 87353.772 ops/ms
# Warmup Iteration  20: 101017.578 ops/ms
Iteration   1: 93321.585 ops/ms
Iteration   2: 100596.382 ops/ms
Iteration   3: 93263.371 ops/ms
Iteration   4: 98496.019 ops/ms
Iteration   5: 93506.021 ops/ms
Iteration   6: 92960.678 ops/ms
Iteration   7: 101165.908 ops/ms
Iteration   8: 92220.483 ops/ms
Iteration   9: 102437.560 ops/ms
Iteration  10: 101741.560 ops/ms
Iteration  11: 101408.298 ops/ms
Iteration  12: 101729.385 ops/ms
Iteration  13: 101067.958 ops/ms
Iteration  14: 91901.328 ops/ms
Iteration  15: 91029.300 ops/ms
Iteration  16: 88734.023 ops/ms
Iteration  17: 97031.885 ops/ms
Iteration  18: 98330.314 ops/ms
Iteration  19: 92072.746 ops/ms
Iteration  20: 97024.427 ops/ms

Result : 96501.962 ?(95%) 2073.205 ?(99%) 2833.941 ops/ms
  Statistics: (min, avg, max) = (88734.023, 96501.962, 102437.560), stdev = 4429.840
  Confidence intervals: 95% [94428.757, 98575.166], 99% [93668.020, 99335.903]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 65055.428 ops/ms
# Warmup Iteration   2: 92433.919 ops/ms
# Warmup Iteration   3: 96903.085 ops/ms
# Warmup Iteration   4: 98880.735 ops/ms
# Warmup Iteration   5: 81267.412 ops/ms
# Warmup Iteration   6: 99643.766 ops/ms
# Warmup Iteration   7: 101602.179 ops/ms
# Warmup Iteration   8: 95744.318 ops/ms
# Warmup Iteration   9: 99778.012 ops/ms
# Warmup Iteration  10: 102985.189 ops/ms
# Warmup Iteration  11: 102580.246 ops/ms
# Warmup Iteration  12: 98607.860 ops/ms
# Warmup Iteration  13: 98253.263 ops/ms
# Warmup Iteration  14: 100656.461 ops/ms
# Warmup Iteration  15: 102109.170 ops/ms
# Warmup Iteration  16: 105135.697 ops/ms
# Warmup Iteration  17: 101634.754 ops/ms
# Warmup Iteration  18: 92653.226 ops/ms
# Warmup Iteration  19: 92034.231 ops/ms
# Warmup Iteration  20: 98911.680 ops/ms
Iteration   1: 103869.962 ops/ms
Iteration   2: 105053.512 ops/ms
Iteration   3: 105167.869 ops/ms
Iteration   4: 103939.854 ops/ms
Iteration   5: 103952.769 ops/ms
Iteration   6: 97692.550 ops/ms
Iteration   7: 103204.969 ops/ms
Iteration   8: 95412.518 ops/ms
Iteration   9: 92920.271 ops/ms
Iteration  10: 93987.952 ops/ms
Iteration  11: 87769.502 ops/ms
Iteration  12: 93827.890 ops/ms
Iteration  13: 95459.346 ops/ms
Iteration  14: 97433.498 ops/ms
Iteration  15: 98114.128 ops/ms
Iteration  16: 104696.721 ops/ms
Iteration  17: 104580.271 ops/ms
Iteration  18: 104562.718 ops/ms
Iteration  19: 104806.678 ops/ms
Iteration  20: 104735.169 ops/ms

Result : 100059.407 ?(95%) 2515.795 ?(99%) 3438.935 ops/ms
  Statistics: (min, avg, max) = (87769.502, 100059.407, 105167.869), stdev = 5375.527
  Confidence intervals: 95% [97543.612, 102575.203], 99% [96620.473, 103498.342]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67079.417 ops/ms
# Warmup Iteration   2: 95903.226 ops/ms
# Warmup Iteration   3: 99340.386 ops/ms
# Warmup Iteration   4: 99408.831 ops/ms
# Warmup Iteration   5: 100093.810 ops/ms
# Warmup Iteration   6: 99700.746 ops/ms
# Warmup Iteration   7: 99805.137 ops/ms
# Warmup Iteration   8: 98890.415 ops/ms
# Warmup Iteration   9: 100992.598 ops/ms
# Warmup Iteration  10: 104662.713 ops/ms
# Warmup Iteration  11: 104412.334 ops/ms
# Warmup Iteration  12: 104780.696 ops/ms
# Warmup Iteration  13: 105167.374 ops/ms
# Warmup Iteration  14: 104706.269 ops/ms
# Warmup Iteration  15: 104871.019 ops/ms
# Warmup Iteration  16: 104978.876 ops/ms
# Warmup Iteration  17: 104576.132 ops/ms
# Warmup Iteration  18: 104645.822 ops/ms
# Warmup Iteration  19: 104235.091 ops/ms
# Warmup Iteration  20: 105057.516 ops/ms
Iteration   1: 103976.447 ops/ms
Iteration   2: 104764.596 ops/ms
Iteration   3: 105053.324 ops/ms
Iteration   4: 104697.531 ops/ms
Iteration   5: 104437.031 ops/ms
Iteration   6: 104573.566 ops/ms
Iteration   7: 104677.356 ops/ms
Iteration   8: 104968.844 ops/ms
Iteration   9: 104881.267 ops/ms
Iteration  10: 105106.401 ops/ms
Iteration  11: 104218.450 ops/ms
Iteration  12: 104373.687 ops/ms
Iteration  13: 105170.084 ops/ms
Iteration  14: 104480.092 ops/ms
Iteration  15: 104923.819 ops/ms
Iteration  16: 105002.417 ops/ms
Iteration  17: 104796.312 ops/ms
Iteration  18: 104656.622 ops/ms
Iteration  19: 104989.829 ops/ms
Iteration  20: 105111.541 ops/ms

Result : 104742.961 ?(95%) 151.286 ?(99%) 206.798 ops/ms
  Statistics: (min, avg, max) = (103976.447, 104742.961, 105170.084), stdev = 323.254
  Confidence intervals: 95% [104591.675, 104894.246], 99% [104536.163, 104949.759]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67897.724 ops/ms
# Warmup Iteration   2: 96798.197 ops/ms
# Warmup Iteration   3: 100179.573 ops/ms
# Warmup Iteration   4: 99477.902 ops/ms
# Warmup Iteration   5: 99018.972 ops/ms
# Warmup Iteration   6: 99866.907 ops/ms
# Warmup Iteration   7: 100129.235 ops/ms
# Warmup Iteration   8: 99599.112 ops/ms
# Warmup Iteration   9: 101525.551 ops/ms
# Warmup Iteration  10: 104518.926 ops/ms
# Warmup Iteration  11: 104731.564 ops/ms
# Warmup Iteration  12: 104326.594 ops/ms
# Warmup Iteration  13: 104660.252 ops/ms
# Warmup Iteration  14: 103982.644 ops/ms
# Warmup Iteration  15: 104823.742 ops/ms
# Warmup Iteration  16: 104743.283 ops/ms
# Warmup Iteration  17: 104866.447 ops/ms
# Warmup Iteration  18: 103037.234 ops/ms
# Warmup Iteration  19: 104844.979 ops/ms
# Warmup Iteration  20: 104723.697 ops/ms
Iteration   1: 104489.904 ops/ms
Iteration   2: 104410.007 ops/ms
Iteration   3: 104687.445 ops/ms
Iteration   4: 104974.687 ops/ms
Iteration   5: 105089.208 ops/ms
Iteration   6: 105020.249 ops/ms
Iteration   7: 104588.578 ops/ms
Iteration   8: 105246.606 ops/ms
Iteration   9: 104750.101 ops/ms
Iteration  10: 104918.108 ops/ms
Iteration  11: 105108.016 ops/ms
Iteration  12: 104745.560 ops/ms
Iteration  13: 104843.526 ops/ms
Iteration  14: 104962.409 ops/ms
Iteration  15: 104473.845 ops/ms
Iteration  16: 104664.655 ops/ms
Iteration  17: 104804.377 ops/ms
Iteration  18: 104906.580 ops/ms
Iteration  19: 104900.161 ops/ms
Iteration  20: 104658.534 ops/ms

Result : 104812.128 ?(95%) 105.935 ?(99%) 144.806 ops/ms
  Statistics: (min, avg, max) = (104410.007, 104812.128, 105246.606), stdev = 226.352
  Confidence intervals: 95% [104706.193, 104918.063], 99% [104667.321, 104956.934]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67641.872 ops/ms
# Warmup Iteration   2: 96930.309 ops/ms
# Warmup Iteration   3: 99128.237 ops/ms
# Warmup Iteration   4: 99583.496 ops/ms
# Warmup Iteration   5: 99572.208 ops/ms
# Warmup Iteration   6: 99626.616 ops/ms
# Warmup Iteration   7: 100258.137 ops/ms
# Warmup Iteration   8: 100044.669 ops/ms
# Warmup Iteration   9: 101610.874 ops/ms
# Warmup Iteration  10: 104786.006 ops/ms
# Warmup Iteration  11: 104290.532 ops/ms
# Warmup Iteration  12: 104611.692 ops/ms
# Warmup Iteration  13: 104718.849 ops/ms
# Warmup Iteration  14: 104774.730 ops/ms
# Warmup Iteration  15: 104392.130 ops/ms
# Warmup Iteration  16: 104463.360 ops/ms
# Warmup Iteration  17: 105208.180 ops/ms
# Warmup Iteration  18: 104919.759 ops/ms
# Warmup Iteration  19: 105032.041 ops/ms
# Warmup Iteration  20: 104965.386 ops/ms
Iteration   1: 104852.629 ops/ms
Iteration   2: 104695.160 ops/ms
Iteration   3: 104360.255 ops/ms
Iteration   4: 104543.290 ops/ms
Iteration   5: 105156.461 ops/ms
Iteration   6: 104654.406 ops/ms
Iteration   7: 105056.061 ops/ms
Iteration   8: 104910.987 ops/ms
Iteration   9: 104627.030 ops/ms
Iteration  10: 104522.590 ops/ms
Iteration  11: 104792.093 ops/ms
Iteration  12: 105101.438 ops/ms
Iteration  13: 104512.062 ops/ms
Iteration  14: 104870.572 ops/ms
Iteration  15: 104824.789 ops/ms
Iteration  16: 105085.267 ops/ms
Iteration  17: 105044.547 ops/ms
Iteration  18: 104912.500 ops/ms
Iteration  19: 105119.076 ops/ms
Iteration  20: 105046.503 ops/ms

Result : 104834.386 ?(95%) 111.490 ?(99%) 152.400 ops/ms
  Statistics: (min, avg, max) = (104360.255, 104834.386, 105156.461), stdev = 238.223
  Confidence intervals: 95% [104722.895, 104945.876], 99% [104681.985, 104986.786]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.076 ops/ms
# Warmup Iteration   2: 36.590 ops/ms
# Warmup Iteration   3: 44.437 ops/ms
# Warmup Iteration   4: 48.812 ops/ms
# Warmup Iteration   5: 50.136 ops/ms
# Warmup Iteration   6: 50.350 ops/ms
# Warmup Iteration   7: 50.404 ops/ms
# Warmup Iteration   8: 50.638 ops/ms
# Warmup Iteration   9: 50.863 ops/ms
# Warmup Iteration  10: 51.003 ops/ms
# Warmup Iteration  11: 51.089 ops/ms
# Warmup Iteration  12: 50.760 ops/ms
# Warmup Iteration  13: 50.900 ops/ms
# Warmup Iteration  14: 50.842 ops/ms
# Warmup Iteration  15: 51.125 ops/ms
# Warmup Iteration  16: 51.071 ops/ms
# Warmup Iteration  17: 51.180 ops/ms
# Warmup Iteration  18: 51.242 ops/ms
# Warmup Iteration  19: 50.979 ops/ms
# Warmup Iteration  20: 50.807 ops/ms
Iteration   1: 50.995 ops/ms
Iteration   2: 51.133 ops/ms
Iteration   3: 51.146 ops/ms
Iteration   4: 51.004 ops/ms
Iteration   5: 51.267 ops/ms
Iteration   6: 51.014 ops/ms
Iteration   7: 51.061 ops/ms
Iteration   8: 51.261 ops/ms
Iteration   9: 51.190 ops/ms
Iteration  10: 51.049 ops/ms
Iteration  11: 50.917 ops/ms
Iteration  12: 51.058 ops/ms
Iteration  13: 51.250 ops/ms
Iteration  14: 51.057 ops/ms
Iteration  15: 51.228 ops/ms
Iteration  16: 51.235 ops/ms
Iteration  17: 51.112 ops/ms
Iteration  18: 51.177 ops/ms
Iteration  19: 51.015 ops/ms
Iteration  20: 50.997 ops/ms

Result : 51.108 ?(95%) 0.050 ?(99%) 0.068 ops/ms
  Statistics: (min, avg, max) = (50.917, 51.108, 51.267), stdev = 0.106
  Confidence intervals: 95% [51.059, 51.158], 99% [51.041, 51.176]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.232 ops/ms
# Warmup Iteration   2: 37.024 ops/ms
# Warmup Iteration   3: 45.015 ops/ms
# Warmup Iteration   4: 48.897 ops/ms
# Warmup Iteration   5: 50.130 ops/ms
# Warmup Iteration   6: 50.684 ops/ms
# Warmup Iteration   7: 50.838 ops/ms
# Warmup Iteration   8: 50.639 ops/ms
# Warmup Iteration   9: 50.981 ops/ms
# Warmup Iteration  10: 51.169 ops/ms
# Warmup Iteration  11: 51.156 ops/ms
# Warmup Iteration  12: 51.177 ops/ms
# Warmup Iteration  13: 50.939 ops/ms
# Warmup Iteration  14: 51.270 ops/ms
# Warmup Iteration  15: 51.013 ops/ms
# Warmup Iteration  16: 51.027 ops/ms
# Warmup Iteration  17: 51.091 ops/ms
# Warmup Iteration  18: 51.297 ops/ms
# Warmup Iteration  19: 51.158 ops/ms
# Warmup Iteration  20: 51.330 ops/ms
Iteration   1: 51.044 ops/ms
Iteration   2: 51.213 ops/ms
Iteration   3: 51.176 ops/ms
Iteration   4: 51.295 ops/ms
Iteration   5: 51.356 ops/ms
Iteration   6: 51.091 ops/ms
Iteration   7: 51.378 ops/ms
Iteration   8: 51.127 ops/ms
Iteration   9: 51.303 ops/ms
Iteration  10: 51.064 ops/ms
Iteration  11: 51.358 ops/ms
Iteration  12: 51.363 ops/ms
Iteration  13: 51.325 ops/ms
Iteration  14: 51.321 ops/ms
Iteration  15: 51.100 ops/ms
Iteration  16: 51.041 ops/ms
Iteration  17: 51.123 ops/ms
Iteration  18: 51.350 ops/ms
Iteration  19: 51.357 ops/ms
Iteration  20: 51.284 ops/ms

Result : 51.233 ?(95%) 0.058 ?(99%) 0.079 ops/ms
  Statistics: (min, avg, max) = (51.041, 51.233, 51.378), stdev = 0.124
  Confidence intervals: 95% [51.175, 51.291], 99% [51.154, 51.313]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.122 ops/ms
# Warmup Iteration   2: 36.836 ops/ms
# Warmup Iteration   3: 44.272 ops/ms
# Warmup Iteration   4: 47.997 ops/ms
# Warmup Iteration   5: 48.858 ops/ms
# Warmup Iteration   6: 49.707 ops/ms
# Warmup Iteration   7: 49.513 ops/ms
# Warmup Iteration   8: 49.575 ops/ms
# Warmup Iteration   9: 49.883 ops/ms
# Warmup Iteration  10: 50.189 ops/ms
# Warmup Iteration  11: 50.677 ops/ms
# Warmup Iteration  12: 50.812 ops/ms
# Warmup Iteration  13: 50.971 ops/ms
# Warmup Iteration  14: 51.025 ops/ms
# Warmup Iteration  15: 50.835 ops/ms
# Warmup Iteration  16: 51.048 ops/ms
# Warmup Iteration  17: 50.529 ops/ms
# Warmup Iteration  18: 50.987 ops/ms
# Warmup Iteration  19: 51.011 ops/ms
# Warmup Iteration  20: 50.790 ops/ms
Iteration   1: 51.121 ops/ms
Iteration   2: 50.956 ops/ms
Iteration   3: 50.608 ops/ms
Iteration   4: 50.969 ops/ms
Iteration   5: 50.952 ops/ms
Iteration   6: 50.970 ops/ms
Iteration   7: 50.838 ops/ms
Iteration   8: 51.126 ops/ms
Iteration   9: 50.770 ops/ms
Iteration  10: 50.977 ops/ms
Iteration  11: 50.071 ops/ms
Iteration  12: 51.029 ops/ms
Iteration  13: 50.162 ops/ms
Iteration  14: 51.163 ops/ms
Iteration  15: 51.070 ops/ms
Iteration  16: 50.998 ops/ms
Iteration  17: 50.776 ops/ms
Iteration  18: 50.957 ops/ms
Iteration  19: 49.605 ops/ms
Iteration  20: 47.114 ops/ms

Result : 50.612 ?(95%) 0.429 ?(99%) 0.586 ops/ms
  Statistics: (min, avg, max) = (47.114, 50.612, 51.163), stdev = 0.916
  Confidence intervals: 95% [50.183, 51.040], 99% [50.025, 51.198]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 12.926 ops/ms
# Warmup Iteration   2: 36.672 ops/ms
# Warmup Iteration   3: 45.192 ops/ms
# Warmup Iteration   4: 49.706 ops/ms
# Warmup Iteration   5: 50.667 ops/ms
# Warmup Iteration   6: 51.585 ops/ms
# Warmup Iteration   7: 51.829 ops/ms
# Warmup Iteration   8: 51.875 ops/ms
# Warmup Iteration   9: 51.424 ops/ms
# Warmup Iteration  10: 52.012 ops/ms
# Warmup Iteration  11: 51.978 ops/ms
# Warmup Iteration  12: 52.029 ops/ms
# Warmup Iteration  13: 52.151 ops/ms
# Warmup Iteration  14: 51.794 ops/ms
# Warmup Iteration  15: 51.833 ops/ms
# Warmup Iteration  16: 51.934 ops/ms
# Warmup Iteration  17: 51.995 ops/ms
# Warmup Iteration  18: 51.512 ops/ms
# Warmup Iteration  19: 51.356 ops/ms
# Warmup Iteration  20: 51.315 ops/ms
Iteration   1: 51.356 ops/ms
Iteration   2: 51.376 ops/ms
Iteration   3: 51.175 ops/ms
Iteration   4: 51.584 ops/ms
Iteration   5: 51.453 ops/ms
Iteration   6: 51.575 ops/ms
Iteration   7: 51.444 ops/ms
Iteration   8: 51.480 ops/ms
Iteration   9: 51.328 ops/ms
Iteration  10: 51.514 ops/ms
Iteration  11: 51.672 ops/ms
Iteration  12: 51.427 ops/ms
Iteration  13: 51.361 ops/ms
Iteration  14: 51.397 ops/ms
Iteration  15: 51.656 ops/ms
Iteration  16: 51.481 ops/ms
Iteration  17: 51.665 ops/ms
Iteration  18: 51.487 ops/ms
Iteration  19: 51.630 ops/ms
Iteration  20: 51.274 ops/ms

Result : 51.467 ?(95%) 0.064 ?(99%) 0.087 ops/ms
  Statistics: (min, avg, max) = (51.175, 51.467, 51.672), stdev = 0.136
  Confidence intervals: 95% [51.403, 51.531], 99% [51.380, 51.554]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.171 ops/ms
# Warmup Iteration   2: 36.986 ops/ms
# Warmup Iteration   3: 44.585 ops/ms
# Warmup Iteration   4: 48.710 ops/ms
# Warmup Iteration   5: 49.934 ops/ms
# Warmup Iteration   6: 50.306 ops/ms
# Warmup Iteration   7: 50.517 ops/ms
# Warmup Iteration   8: 50.013 ops/ms
# Warmup Iteration   9: 50.096 ops/ms
# Warmup Iteration  10: 50.613 ops/ms
# Warmup Iteration  11: 49.847 ops/ms
# Warmup Iteration  12: 49.445 ops/ms
# Warmup Iteration  13: 49.649 ops/ms
# Warmup Iteration  14: 50.390 ops/ms
# Warmup Iteration  15: 49.813 ops/ms
# Warmup Iteration  16: 50.868 ops/ms
# Warmup Iteration  17: 50.325 ops/ms
# Warmup Iteration  18: 50.059 ops/ms
# Warmup Iteration  19: 50.369 ops/ms
# Warmup Iteration  20: 50.912 ops/ms
Iteration   1: 51.027 ops/ms
Iteration   2: 50.541 ops/ms
Iteration   3: 50.934 ops/ms
Iteration   4: 51.003 ops/ms
Iteration   5: 49.929 ops/ms
Iteration   6: 50.778 ops/ms
Iteration   7: 50.621 ops/ms
Iteration   8: 50.943 ops/ms
Iteration   9: 50.997 ops/ms
Iteration  10: 50.943 ops/ms
Iteration  11: 50.868 ops/ms
Iteration  12: 50.911 ops/ms
Iteration  13: 49.338 ops/ms
Iteration  14: 51.069 ops/ms
Iteration  15: 50.790 ops/ms
Iteration  16: 50.866 ops/ms
Iteration  17: 50.986 ops/ms
Iteration  18: 50.886 ops/ms
Iteration  19: 50.885 ops/ms
Iteration  20: 50.912 ops/ms

Result : 50.761 ?(95%) 0.195 ?(99%) 0.267 ops/ms
  Statistics: (min, avg, max) = (49.338, 50.761, 51.069), stdev = 0.418
  Confidence intervals: 95% [50.566, 50.957], 99% [50.494, 51.028]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.928 ops/ms
# Warmup Iteration   2: 39.931 ops/ms
# Warmup Iteration   3: 47.528 ops/ms
# Warmup Iteration   4: 51.325 ops/ms
# Warmup Iteration   5: 52.459 ops/ms
# Warmup Iteration   6: 52.715 ops/ms
# Warmup Iteration   7: 52.848 ops/ms
# Warmup Iteration   8: 52.863 ops/ms
# Warmup Iteration   9: 52.936 ops/ms
# Warmup Iteration  10: 53.219 ops/ms
# Warmup Iteration  11: 53.384 ops/ms
# Warmup Iteration  12: 53.405 ops/ms
# Warmup Iteration  13: 53.099 ops/ms
# Warmup Iteration  14: 53.423 ops/ms
# Warmup Iteration  15: 53.447 ops/ms
# Warmup Iteration  16: 53.259 ops/ms
# Warmup Iteration  17: 53.334 ops/ms
# Warmup Iteration  18: 53.237 ops/ms
# Warmup Iteration  19: 53.409 ops/ms
# Warmup Iteration  20: 53.203 ops/ms
Iteration   1: 53.381 ops/ms
Iteration   2: 53.167 ops/ms
Iteration   3: 53.437 ops/ms
Iteration   4: 53.355 ops/ms
Iteration   5: 53.448 ops/ms
Iteration   6: 53.193 ops/ms
Iteration   7: 53.397 ops/ms
Iteration   8: 53.390 ops/ms
Iteration   9: 53.379 ops/ms
Iteration  10: 53.169 ops/ms
Iteration  11: 53.391 ops/ms
Iteration  12: 53.385 ops/ms
Iteration  13: 53.240 ops/ms
Iteration  14: 53.301 ops/ms
Iteration  15: 53.240 ops/ms
Iteration  16: 53.520 ops/ms
Iteration  17: 53.285 ops/ms
Iteration  18: 53.428 ops/ms
Iteration  19: 53.172 ops/ms
Iteration  20: 53.455 ops/ms

Result : 53.337 ?(95%) 0.051 ?(99%) 0.069 ops/ms
  Statistics: (min, avg, max) = (53.167, 53.337, 53.520), stdev = 0.108
  Confidence intervals: 95% [53.286, 53.387], 99% [53.268, 53.406]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.687 ops/ms
# Warmup Iteration   2: 39.827 ops/ms
# Warmup Iteration   3: 47.479 ops/ms
# Warmup Iteration   4: 51.419 ops/ms
# Warmup Iteration   5: 52.786 ops/ms
# Warmup Iteration   6: 53.217 ops/ms
# Warmup Iteration   7: 53.308 ops/ms
# Warmup Iteration   8: 53.097 ops/ms
# Warmup Iteration   9: 53.381 ops/ms
# Warmup Iteration  10: 53.676 ops/ms
# Warmup Iteration  11: 53.606 ops/ms
# Warmup Iteration  12: 53.726 ops/ms
# Warmup Iteration  13: 53.746 ops/ms
# Warmup Iteration  14: 53.804 ops/ms
# Warmup Iteration  15: 53.824 ops/ms
# Warmup Iteration  16: 53.615 ops/ms
# Warmup Iteration  17: 53.634 ops/ms
# Warmup Iteration  18: 53.905 ops/ms
# Warmup Iteration  19: 53.662 ops/ms
# Warmup Iteration  20: 53.863 ops/ms
Iteration   1: 53.830 ops/ms
Iteration   2: 53.644 ops/ms
Iteration   3: 53.720 ops/ms
Iteration   4: 53.943 ops/ms
Iteration   5: 53.658 ops/ms
Iteration   6: 53.569 ops/ms
Iteration   7: 53.875 ops/ms
Iteration   8: 53.866 ops/ms
Iteration   9: 53.870 ops/ms
Iteration  10: 53.860 ops/ms
Iteration  11: 53.932 ops/ms
Iteration  12: 53.851 ops/ms
Iteration  13: 53.889 ops/ms
Iteration  14: 53.844 ops/ms
Iteration  15: 53.667 ops/ms
Iteration  16: 53.662 ops/ms
Iteration  17: 53.581 ops/ms
Iteration  18: 53.572 ops/ms
Iteration  19: 53.668 ops/ms
Iteration  20: 53.508 ops/ms

Result : 53.750 ?(95%) 0.065 ?(99%) 0.089 ops/ms
  Statistics: (min, avg, max) = (53.508, 53.750, 53.943), stdev = 0.139
  Confidence intervals: 95% [53.686, 53.815], 99% [53.662, 53.839]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.823 ops/ms
# Warmup Iteration   2: 39.550 ops/ms
# Warmup Iteration   3: 46.836 ops/ms
# Warmup Iteration   4: 50.788 ops/ms
# Warmup Iteration   5: 51.898 ops/ms
# Warmup Iteration   6: 52.232 ops/ms
# Warmup Iteration   7: 52.394 ops/ms
# Warmup Iteration   8: 52.069 ops/ms
# Warmup Iteration   9: 52.645 ops/ms
# Warmup Iteration  10: 52.783 ops/ms
# Warmup Iteration  11: 52.680 ops/ms
# Warmup Iteration  12: 52.702 ops/ms
# Warmup Iteration  13: 52.820 ops/ms
# Warmup Iteration  14: 52.587 ops/ms
# Warmup Iteration  15: 52.535 ops/ms
# Warmup Iteration  16: 52.841 ops/ms
# Warmup Iteration  17: 52.999 ops/ms
# Warmup Iteration  18: 52.985 ops/ms
# Warmup Iteration  19: 53.054 ops/ms
# Warmup Iteration  20: 53.005 ops/ms
Iteration   1: 53.061 ops/ms
Iteration   2: 53.067 ops/ms
Iteration   3: 52.833 ops/ms
Iteration   4: 52.841 ops/ms
Iteration   5: 52.746 ops/ms
Iteration   6: 53.037 ops/ms
Iteration   7: 52.995 ops/ms
Iteration   8: 52.678 ops/ms
Iteration   9: 53.094 ops/ms
Iteration  10: 53.092 ops/ms
Iteration  11: 52.851 ops/ms
Iteration  12: 53.131 ops/ms
Iteration  13: 53.117 ops/ms
Iteration  14: 52.893 ops/ms
Iteration  15: 53.033 ops/ms
Iteration  16: 53.094 ops/ms
Iteration  17: 52.886 ops/ms
Iteration  18: 53.107 ops/ms
Iteration  19: 53.028 ops/ms
Iteration  20: 53.058 ops/ms

Result : 52.982 ?(95%) 0.063 ?(99%) 0.086 ops/ms
  Statistics: (min, avg, max) = (52.678, 52.982, 53.131), stdev = 0.135
  Confidence intervals: 95% [52.919, 53.045], 99% [52.896, 53.068]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.494 ops/ms
# Warmup Iteration   2: 39.033 ops/ms
# Warmup Iteration   3: 46.167 ops/ms
# Warmup Iteration   4: 49.935 ops/ms
# Warmup Iteration   5: 51.047 ops/ms
# Warmup Iteration   6: 51.508 ops/ms
# Warmup Iteration   7: 51.637 ops/ms
# Warmup Iteration   8: 51.533 ops/ms
# Warmup Iteration   9: 51.673 ops/ms
# Warmup Iteration  10: 51.861 ops/ms
# Warmup Iteration  11: 51.832 ops/ms
# Warmup Iteration  12: 51.977 ops/ms
# Warmup Iteration  13: 51.837 ops/ms
# Warmup Iteration  14: 52.105 ops/ms
# Warmup Iteration  15: 51.849 ops/ms
# Warmup Iteration  16: 51.850 ops/ms
# Warmup Iteration  17: 51.805 ops/ms
# Warmup Iteration  18: 52.158 ops/ms
# Warmup Iteration  19: 51.892 ops/ms
# Warmup Iteration  20: 51.558 ops/ms
Iteration   1: 51.919 ops/ms
Iteration   2: 51.904 ops/ms
Iteration   3: 52.127 ops/ms
Iteration   4: 52.159 ops/ms
Iteration   5: 52.180 ops/ms
Iteration   6: 51.903 ops/ms
Iteration   7: 51.848 ops/ms
Iteration   8: 52.045 ops/ms
Iteration   9: 51.902 ops/ms
Iteration  10: 51.976 ops/ms
Iteration  11: 52.130 ops/ms
Iteration  12: 52.100 ops/ms
Iteration  13: 52.134 ops/ms
Iteration  14: 51.870 ops/ms
Iteration  15: 52.132 ops/ms
Iteration  16: 52.174 ops/ms
Iteration  17: 51.803 ops/ms
Iteration  18: 52.144 ops/ms
Iteration  19: 52.069 ops/ms
Iteration  20: 52.104 ops/ms

Result : 52.031 ?(95%) 0.059 ?(99%) 0.080 ops/ms
  Statistics: (min, avg, max) = (51.803, 52.031, 52.180), stdev = 0.125
  Confidence intervals: 95% [51.972, 52.090], 99% [51.951, 52.111]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.916 ops/ms
# Warmup Iteration   2: 39.964 ops/ms
# Warmup Iteration   3: 47.556 ops/ms
# Warmup Iteration   4: 51.371 ops/ms
# Warmup Iteration   5: 51.935 ops/ms
# Warmup Iteration   6: 49.577 ops/ms
# Warmup Iteration   7: 50.637 ops/ms
# Warmup Iteration   8: 52.842 ops/ms
# Warmup Iteration   9: 53.273 ops/ms
# Warmup Iteration  10: 53.365 ops/ms
# Warmup Iteration  11: 53.376 ops/ms
# Warmup Iteration  12: 53.592 ops/ms
# Warmup Iteration  13: 53.400 ops/ms
# Warmup Iteration  14: 53.485 ops/ms
# Warmup Iteration  15: 53.450 ops/ms
# Warmup Iteration  16: 53.428 ops/ms
# Warmup Iteration  17: 53.666 ops/ms
# Warmup Iteration  18: 53.585 ops/ms
# Warmup Iteration  19: 53.739 ops/ms
# Warmup Iteration  20: 53.763 ops/ms
Iteration   1: 53.705 ops/ms
Iteration   2: 53.375 ops/ms
Iteration   3: 53.535 ops/ms
Iteration   4: 53.385 ops/ms
Iteration   5: 53.719 ops/ms
Iteration   6: 53.777 ops/ms
Iteration   7: 53.423 ops/ms
Iteration   8: 53.597 ops/ms
Iteration   9: 53.442 ops/ms
Iteration  10: 53.716 ops/ms
Iteration  11: 53.407 ops/ms
Iteration  12: 53.650 ops/ms
Iteration  13: 53.711 ops/ms
Iteration  14: 53.497 ops/ms
Iteration  15: 53.557 ops/ms
Iteration  16: 53.492 ops/ms
Iteration  17: 53.693 ops/ms
Iteration  18: 53.420 ops/ms
Iteration  19: 53.491 ops/ms
Iteration  20: 53.705 ops/ms

Result : 53.565 ?(95%) 0.063 ?(99%) 0.086 ops/ms
  Statistics: (min, avg, max) = (53.375, 53.565, 53.777), stdev = 0.134
  Confidence intervals: 95% [53.502, 53.628], 99% [53.479, 53.651]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.345 ops/ms
# Warmup Iteration   2: 65.229 ops/ms
# Warmup Iteration   3: 77.879 ops/ms
# Warmup Iteration   4: 84.225 ops/ms
# Warmup Iteration   5: 86.021 ops/ms
# Warmup Iteration   6: 86.435 ops/ms
# Warmup Iteration   7: 86.896 ops/ms
# Warmup Iteration   8: 87.112 ops/ms
# Warmup Iteration   9: 87.498 ops/ms
# Warmup Iteration  10: 87.443 ops/ms
# Warmup Iteration  11: 87.778 ops/ms
# Warmup Iteration  12: 87.569 ops/ms
# Warmup Iteration  13: 87.783 ops/ms
# Warmup Iteration  14: 86.855 ops/ms
# Warmup Iteration  15: 87.416 ops/ms
# Warmup Iteration  16: 87.541 ops/ms
# Warmup Iteration  17: 87.015 ops/ms
# Warmup Iteration  18: 87.985 ops/ms
# Warmup Iteration  19: 87.190 ops/ms
# Warmup Iteration  20: 87.780 ops/ms
Iteration   1: 87.411 ops/ms
Iteration   2: 87.368 ops/ms
Iteration   3: 87.417 ops/ms
Iteration   4: 87.299 ops/ms
Iteration   5: 87.351 ops/ms
Iteration   6: 87.681 ops/ms
Iteration   7: 87.846 ops/ms
Iteration   8: 86.763 ops/ms
Iteration   9: 87.642 ops/ms
Iteration  10: 87.844 ops/ms
Iteration  11: 87.207 ops/ms
Iteration  12: 87.777 ops/ms
Iteration  13: 87.715 ops/ms
Iteration  14: 87.772 ops/ms
Iteration  15: 87.418 ops/ms
Iteration  16: 87.594 ops/ms
Iteration  17: 87.719 ops/ms
Iteration  18: 87.333 ops/ms
Iteration  19: 87.607 ops/ms
Iteration  20: 87.537 ops/ms

Result : 87.515 ?(95%) 0.123 ?(99%) 0.168 ops/ms
  Statistics: (min, avg, max) = (86.763, 87.515, 87.846), stdev = 0.263
  Confidence intervals: 95% [87.392, 87.638], 99% [87.347, 87.683]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.343 ops/ms
# Warmup Iteration   2: 64.785 ops/ms
# Warmup Iteration   3: 77.693 ops/ms
# Warmup Iteration   4: 82.637 ops/ms
# Warmup Iteration   5: 83.307 ops/ms
# Warmup Iteration   6: 84.020 ops/ms
# Warmup Iteration   7: 84.653 ops/ms
# Warmup Iteration   8: 84.831 ops/ms
# Warmup Iteration   9: 85.069 ops/ms
# Warmup Iteration  10: 85.394 ops/ms
# Warmup Iteration  11: 85.520 ops/ms
# Warmup Iteration  12: 85.699 ops/ms
# Warmup Iteration  13: 85.681 ops/ms
# Warmup Iteration  14: 85.559 ops/ms
# Warmup Iteration  15: 85.596 ops/ms
# Warmup Iteration  16: 85.205 ops/ms
# Warmup Iteration  17: 85.209 ops/ms
# Warmup Iteration  18: 85.488 ops/ms
# Warmup Iteration  19: 85.138 ops/ms
# Warmup Iteration  20: 85.565 ops/ms
Iteration   1: 85.200 ops/ms
Iteration   2: 85.443 ops/ms
Iteration   3: 85.618 ops/ms
Iteration   4: 85.622 ops/ms
Iteration   5: 85.496 ops/ms
Iteration   6: 85.573 ops/ms
Iteration   7: 85.590 ops/ms
Iteration   8: 85.307 ops/ms
Iteration   9: 85.277 ops/ms
Iteration  10: 85.523 ops/ms
Iteration  11: 85.282 ops/ms
Iteration  12: 85.647 ops/ms
Iteration  13: 85.242 ops/ms
Iteration  14: 85.345 ops/ms
Iteration  15: 85.501 ops/ms
Iteration  16: 85.448 ops/ms
Iteration  17: 85.294 ops/ms
Iteration  18: 85.628 ops/ms
Iteration  19: 85.652 ops/ms
Iteration  20: 85.299 ops/ms

Result : 85.449 ?(95%) 0.072 ?(99%) 0.099 ops/ms
  Statistics: (min, avg, max) = (85.201, 85.449, 85.652), stdev = 0.155
  Confidence intervals: 95% [85.377, 85.522], 99% [85.350, 85.548]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.698 ops/ms
# Warmup Iteration   2: 65.272 ops/ms
# Warmup Iteration   3: 77.663 ops/ms
# Warmup Iteration   4: 83.299 ops/ms
# Warmup Iteration   5: 84.800 ops/ms
# Warmup Iteration   6: 85.234 ops/ms
# Warmup Iteration   7: 85.164 ops/ms
# Warmup Iteration   8: 85.360 ops/ms
# Warmup Iteration   9: 85.292 ops/ms
# Warmup Iteration  10: 85.656 ops/ms
# Warmup Iteration  11: 85.785 ops/ms
# Warmup Iteration  12: 86.038 ops/ms
# Warmup Iteration  13: 85.688 ops/ms
# Warmup Iteration  14: 86.091 ops/ms
# Warmup Iteration  15: 85.652 ops/ms
# Warmup Iteration  16: 85.795 ops/ms
# Warmup Iteration  17: 85.852 ops/ms
# Warmup Iteration  18: 85.798 ops/ms
# Warmup Iteration  19: 85.729 ops/ms
# Warmup Iteration  20: 86.170 ops/ms
Iteration   1: 86.088 ops/ms
Iteration   2: 85.702 ops/ms
Iteration   3: 85.895 ops/ms
Iteration   4: 85.977 ops/ms
Iteration   5: 86.081 ops/ms
Iteration   6: 85.934 ops/ms
Iteration   7: 85.265 ops/ms
Iteration   8: 86.080 ops/ms
Iteration   9: 85.927 ops/ms
Iteration  10: 86.156 ops/ms
Iteration  11: 85.675 ops/ms
Iteration  12: 85.875 ops/ms
Iteration  13: 85.762 ops/ms
Iteration  14: 85.746 ops/ms
Iteration  15: 85.876 ops/ms
Iteration  16: 86.033 ops/ms
Iteration  17: 85.867 ops/ms
Iteration  18: 86.097 ops/ms
Iteration  19: 85.725 ops/ms
Iteration  20: 85.691 ops/ms

Result : 85.873 ?(95%) 0.098 ?(99%) 0.134 ops/ms
  Statistics: (min, avg, max) = (85.265, 85.873, 86.156), stdev = 0.209
  Confidence intervals: 95% [85.775, 85.970], 99% [85.739, 86.006]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.659 ops/ms
# Warmup Iteration   2: 66.185 ops/ms
# Warmup Iteration   3: 79.401 ops/ms
# Warmup Iteration   4: 84.810 ops/ms
# Warmup Iteration   5: 81.252 ops/ms
# Warmup Iteration   6: 85.801 ops/ms
# Warmup Iteration   7: 86.545 ops/ms
# Warmup Iteration   8: 86.745 ops/ms
# Warmup Iteration   9: 87.270 ops/ms
# Warmup Iteration  10: 87.488 ops/ms
# Warmup Iteration  11: 87.745 ops/ms
# Warmup Iteration  12: 87.836 ops/ms
# Warmup Iteration  13: 88.013 ops/ms
# Warmup Iteration  14: 88.032 ops/ms
# Warmup Iteration  15: 87.880 ops/ms
# Warmup Iteration  16: 87.755 ops/ms
# Warmup Iteration  17: 87.458 ops/ms
# Warmup Iteration  18: 87.838 ops/ms
# Warmup Iteration  19: 87.963 ops/ms
# Warmup Iteration  20: 87.993 ops/ms
Iteration   1: 87.771 ops/ms
Iteration   2: 88.059 ops/ms
Iteration   3: 87.720 ops/ms
Iteration   4: 87.941 ops/ms
Iteration   5: 88.025 ops/ms
Iteration   6: 88.040 ops/ms
Iteration   7: 87.717 ops/ms
Iteration   8: 87.752 ops/ms
Iteration   9: 88.053 ops/ms
Iteration  10: 87.780 ops/ms
Iteration  11: 87.766 ops/ms
Iteration  12: 87.732 ops/ms
Iteration  13: 87.923 ops/ms
Iteration  14: 87.944 ops/ms
Iteration  15: 87.624 ops/ms
Iteration  16: 88.053 ops/ms
Iteration  17: 87.693 ops/ms
Iteration  18: 88.088 ops/ms
Iteration  19: 87.953 ops/ms
Iteration  20: 87.712 ops/ms

Result : 87.867 ?(95%) 0.072 ?(99%) 0.098 ops/ms
  Statistics: (min, avg, max) = (87.624, 87.867, 88.088), stdev = 0.154
  Confidence intervals: 95% [87.795, 87.939], 99% [87.769, 87.965]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.309 ops/ms
# Warmup Iteration   2: 64.488 ops/ms
# Warmup Iteration   3: 77.204 ops/ms
# Warmup Iteration   4: 82.562 ops/ms
# Warmup Iteration   5: 83.797 ops/ms
# Warmup Iteration   6: 84.436 ops/ms
# Warmup Iteration   7: 84.579 ops/ms
# Warmup Iteration   8: 84.337 ops/ms
# Warmup Iteration   9: 84.420 ops/ms
# Warmup Iteration  10: 84.830 ops/ms
# Warmup Iteration  11: 85.265 ops/ms
# Warmup Iteration  12: 85.306 ops/ms
# Warmup Iteration  13: 85.314 ops/ms
# Warmup Iteration  14: 85.330 ops/ms
# Warmup Iteration  15: 85.382 ops/ms
# Warmup Iteration  16: 85.364 ops/ms
# Warmup Iteration  17: 85.336 ops/ms
# Warmup Iteration  18: 84.969 ops/ms
# Warmup Iteration  19: 85.184 ops/ms
# Warmup Iteration  20: 85.194 ops/ms
Iteration   1: 85.210 ops/ms
Iteration   2: 85.296 ops/ms
Iteration   3: 84.954 ops/ms
Iteration   4: 85.518 ops/ms
Iteration   5: 85.112 ops/ms
Iteration   6: 85.304 ops/ms
Iteration   7: 84.612 ops/ms
Iteration   8: 85.469 ops/ms
Iteration   9: 85.440 ops/ms
Iteration  10: 85.373 ops/ms
Iteration  11: 85.410 ops/ms
Iteration  12: 85.145 ops/ms
Iteration  13: 85.030 ops/ms
Iteration  14: 85.180 ops/ms
Iteration  15: 85.199 ops/ms
Iteration  16: 85.218 ops/ms
Iteration  17: 85.172 ops/ms
Iteration  18: 85.067 ops/ms
Iteration  19: 85.480 ops/ms
Iteration  20: 85.003 ops/ms

Result : 85.210 ?(95%) 0.102 ?(99%) 0.140 ops/ms
  Statistics: (min, avg, max) = (84.612, 85.210, 85.518), stdev = 0.218
  Confidence intervals: 95% [85.107, 85.312], 99% [85.070, 85.349]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37832.908 ops/ms
# Warmup Iteration   2: 50508.649 ops/ms
# Warmup Iteration   3: 55187.108 ops/ms
# Warmup Iteration   4: 55033.011 ops/ms
# Warmup Iteration   5: 54801.098 ops/ms
# Warmup Iteration   6: 54834.827 ops/ms
# Warmup Iteration   7: 55008.827 ops/ms
# Warmup Iteration   8: 54960.927 ops/ms
# Warmup Iteration   9: 55817.480 ops/ms
# Warmup Iteration  10: 56287.139 ops/ms
# Warmup Iteration  11: 55607.592 ops/ms
# Warmup Iteration  12: 52932.776 ops/ms
# Warmup Iteration  13: 52537.605 ops/ms
# Warmup Iteration  14: 56092.615 ops/ms
# Warmup Iteration  15: 56405.885 ops/ms
# Warmup Iteration  16: 56474.908 ops/ms
# Warmup Iteration  17: 55958.523 ops/ms
# Warmup Iteration  18: 56267.109 ops/ms
# Warmup Iteration  19: 56428.376 ops/ms
# Warmup Iteration  20: 55998.604 ops/ms
Iteration   1: 56369.053 ops/ms
Iteration   2: 56075.844 ops/ms
Iteration   3: 56420.194 ops/ms
Iteration   4: 56399.683 ops/ms
Iteration   5: 56374.088 ops/ms
Iteration   6: 56274.662 ops/ms
Iteration   7: 56389.297 ops/ms
Iteration   8: 56404.509 ops/ms
Iteration   9: 56262.506 ops/ms
Iteration  10: 56423.065 ops/ms
Iteration  11: 56437.949 ops/ms
Iteration  12: 56122.064 ops/ms
Iteration  13: 56409.870 ops/ms
Iteration  14: 56415.079 ops/ms
Iteration  15: 56395.948 ops/ms
Iteration  16: 56288.094 ops/ms
Iteration  17: 56410.162 ops/ms
Iteration  18: 56237.278 ops/ms
Iteration  19: 56429.459 ops/ms
Iteration  20: 56427.625 ops/ms

Result : 56348.321 ?(95%) 49.056 ?(99%) 67.056 ops/ms
  Statistics: (min, avg, max) = (56075.844, 56348.321, 56437.949), stdev = 104.818
  Confidence intervals: 95% [56299.266, 56397.377], 99% [56281.265, 56415.377]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38322.484 ops/ms
# Warmup Iteration   2: 50350.466 ops/ms
# Warmup Iteration   3: 55056.281 ops/ms
# Warmup Iteration   4: 54933.407 ops/ms
# Warmup Iteration   5: 54741.199 ops/ms
# Warmup Iteration   6: 55078.786 ops/ms
# Warmup Iteration   7: 55084.617 ops/ms
# Warmup Iteration   8: 55100.056 ops/ms
# Warmup Iteration   9: 55676.104 ops/ms
# Warmup Iteration  10: 56425.381 ops/ms
# Warmup Iteration  11: 56367.869 ops/ms
# Warmup Iteration  12: 56355.564 ops/ms
# Warmup Iteration  13: 56174.554 ops/ms
# Warmup Iteration  14: 56491.930 ops/ms
# Warmup Iteration  15: 56382.634 ops/ms
# Warmup Iteration  16: 56123.974 ops/ms
# Warmup Iteration  17: 56387.751 ops/ms
# Warmup Iteration  18: 56234.033 ops/ms
# Warmup Iteration  19: 56434.212 ops/ms
# Warmup Iteration  20: 56356.328 ops/ms
Iteration   1: 56245.018 ops/ms
Iteration   2: 56317.582 ops/ms
Iteration   3: 56398.362 ops/ms
Iteration   4: 56129.266 ops/ms
Iteration   5: 56500.964 ops/ms
Iteration   6: 56424.332 ops/ms
Iteration   7: 56334.924 ops/ms
Iteration   8: 56333.106 ops/ms
Iteration   9: 56521.010 ops/ms
Iteration  10: 56154.609 ops/ms
Iteration  11: 56350.176 ops/ms
Iteration  12: 56148.353 ops/ms
Iteration  13: 56351.825 ops/ms
Iteration  14: 56437.376 ops/ms
Iteration  15: 56505.779 ops/ms
Iteration  16: 56485.529 ops/ms
Iteration  17: 56434.982 ops/ms
Iteration  18: 55765.111 ops/ms
Iteration  19: 56322.931 ops/ms
Iteration  20: 56180.130 ops/ms

Result : 56317.068 ?(95%) 83.688 ?(99%) 114.396 ops/ms
  Statistics: (min, avg, max) = (55765.111, 56317.068, 56521.010), stdev = 178.817
  Confidence intervals: 95% [56233.380, 56400.756], 99% [56202.672, 56431.464]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38411.306 ops/ms
# Warmup Iteration   2: 50387.426 ops/ms
# Warmup Iteration   3: 55164.156 ops/ms
# Warmup Iteration   4: 54752.819 ops/ms
# Warmup Iteration   5: 54814.256 ops/ms
# Warmup Iteration   6: 55051.518 ops/ms
# Warmup Iteration   7: 55079.944 ops/ms
# Warmup Iteration   8: 55203.992 ops/ms
# Warmup Iteration   9: 55618.227 ops/ms
# Warmup Iteration  10: 56377.211 ops/ms
# Warmup Iteration  11: 56367.567 ops/ms
# Warmup Iteration  12: 56362.294 ops/ms
# Warmup Iteration  13: 56307.418 ops/ms
# Warmup Iteration  14: 55733.551 ops/ms
# Warmup Iteration  15: 56481.507 ops/ms
# Warmup Iteration  16: 56586.042 ops/ms
# Warmup Iteration  17: 56483.603 ops/ms
# Warmup Iteration  18: 56416.077 ops/ms
# Warmup Iteration  19: 56187.408 ops/ms
# Warmup Iteration  20: 56062.025 ops/ms
Iteration   1: 56143.773 ops/ms
Iteration   2: 55372.763 ops/ms
Iteration   3: 56341.194 ops/ms
Iteration   4: 56184.371 ops/ms
Iteration   5: 55475.820 ops/ms
Iteration   6: 56526.521 ops/ms
Iteration   7: 56456.974 ops/ms
Iteration   8: 56018.015 ops/ms
Iteration   9: 56497.235 ops/ms
Iteration  10: 56293.482 ops/ms
Iteration  11: 56443.848 ops/ms
Iteration  12: 56470.723 ops/ms
Iteration  13: 56397.174 ops/ms
Iteration  14: 56386.352 ops/ms
Iteration  15: 56530.857 ops/ms
Iteration  16: 56379.652 ops/ms
Iteration  17: 56278.821 ops/ms
Iteration  18: 56565.160 ops/ms
Iteration  19: 56207.971 ops/ms
Iteration  20: 56425.809 ops/ms

Result : 56269.826 ?(95%) 150.934 ?(99%) 206.318 ops/ms
  Statistics: (min, avg, max) = (55372.763, 56269.826, 56565.160), stdev = 322.503
  Confidence intervals: 95% [56118.892, 56420.760], 99% [56063.508, 56476.143]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37246.859 ops/ms
# Warmup Iteration   2: 51390.188 ops/ms
# Warmup Iteration   3: 53314.961 ops/ms
# Warmup Iteration   4: 53562.046 ops/ms
# Warmup Iteration   5: 53471.628 ops/ms
# Warmup Iteration   6: 53490.094 ops/ms
# Warmup Iteration   7: 53310.584 ops/ms
# Warmup Iteration   8: 53584.401 ops/ms
# Warmup Iteration   9: 54169.072 ops/ms
# Warmup Iteration  10: 54710.705 ops/ms
# Warmup Iteration  11: 54731.334 ops/ms
# Warmup Iteration  12: 54772.810 ops/ms
# Warmup Iteration  13: 54640.571 ops/ms
# Warmup Iteration  14: 54779.178 ops/ms
# Warmup Iteration  15: 54664.218 ops/ms
# Warmup Iteration  16: 54866.527 ops/ms
# Warmup Iteration  17: 54907.129 ops/ms
# Warmup Iteration  18: 54715.388 ops/ms
# Warmup Iteration  19: 54880.042 ops/ms
# Warmup Iteration  20: 54695.730 ops/ms
Iteration   1: 54530.115 ops/ms
Iteration   2: 54625.295 ops/ms
Iteration   3: 54884.963 ops/ms
Iteration   4: 54369.314 ops/ms
Iteration   5: 54810.812 ops/ms
Iteration   6: 54770.342 ops/ms
Iteration   7: 54608.402 ops/ms
Iteration   8: 54732.337 ops/ms
Iteration   9: 54713.127 ops/ms
Iteration  10: 54663.776 ops/ms
Iteration  11: 54736.198 ops/ms
Iteration  12: 54435.230 ops/ms
Iteration  13: 54827.778 ops/ms
Iteration  14: 54732.619 ops/ms
Iteration  15: 54794.483 ops/ms
Iteration  16: 54727.465 ops/ms
Iteration  17: 54773.589 ops/ms
Iteration  18: 54704.715 ops/ms
Iteration  19: 54675.082 ops/ms
Iteration  20: 54855.596 ops/ms

Result : 54698.562 ?(95%) 62.132 ?(99%) 84.930 ops/ms
  Statistics: (min, avg, max) = (54369.314, 54698.562, 54884.963), stdev = 132.758
  Confidence intervals: 95% [54636.430, 54760.694], 99% [54613.632, 54783.492]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38179.201 ops/ms
# Warmup Iteration   2: 51258.269 ops/ms
# Warmup Iteration   3: 53436.556 ops/ms
# Warmup Iteration   4: 53360.018 ops/ms
# Warmup Iteration   5: 53299.751 ops/ms
# Warmup Iteration   6: 53582.727 ops/ms
# Warmup Iteration   7: 53368.006 ops/ms
# Warmup Iteration   8: 53555.166 ops/ms
# Warmup Iteration   9: 53756.877 ops/ms
# Warmup Iteration  10: 54625.544 ops/ms
# Warmup Iteration  11: 54611.625 ops/ms
# Warmup Iteration  12: 54545.343 ops/ms
# Warmup Iteration  13: 54679.259 ops/ms
# Warmup Iteration  14: 54295.008 ops/ms
# Warmup Iteration  15: 54510.185 ops/ms
# Warmup Iteration  16: 54721.621 ops/ms
# Warmup Iteration  17: 54743.676 ops/ms
# Warmup Iteration  18: 54796.481 ops/ms
# Warmup Iteration  19: 54533.845 ops/ms
# Warmup Iteration  20: 54732.808 ops/ms
Iteration   1: 54916.778 ops/ms
Iteration   2: 54400.629 ops/ms
Iteration   3: 54744.669 ops/ms
Iteration   4: 54737.999 ops/ms
Iteration   5: 54580.756 ops/ms
Iteration   6: 54616.603 ops/ms
Iteration   7: 54553.610 ops/ms
Iteration   8: 54725.926 ops/ms
Iteration   9: 54775.336 ops/ms
Iteration  10: 54773.134 ops/ms
Iteration  11: 54883.040 ops/ms
Iteration  12: 54781.441 ops/ms
Iteration  13: 54492.265 ops/ms
Iteration  14: 54843.891 ops/ms
Iteration  15: 54845.106 ops/ms
Iteration  16: 54832.439 ops/ms
Iteration  17: 54769.636 ops/ms
Iteration  18: 54768.250 ops/ms
Iteration  19: 54660.178 ops/ms
Iteration  20: 54738.672 ops/ms

Result : 54722.018 ?(95%) 62.591 ?(99%) 85.558 ops/ms
  Statistics: (min, avg, max) = (54400.629, 54722.018, 54916.778), stdev = 133.740
  Confidence intervals: 95% [54659.427, 54784.609], 99% [54636.459, 54807.576]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 365.520 ops/ms
# Warmup Iteration   2: 580.982 ops/ms
# Warmup Iteration   3: 619.329 ops/ms
# Warmup Iteration   4: 619.444 ops/ms
# Warmup Iteration   5: 620.090 ops/ms
# Warmup Iteration   6: 618.132 ops/ms
# Warmup Iteration   7: 552.183 ops/ms
# Warmup Iteration   8: 606.340 ops/ms
# Warmup Iteration   9: 620.886 ops/ms
# Warmup Iteration  10: 622.748 ops/ms
# Warmup Iteration  11: 624.710 ops/ms
# Warmup Iteration  12: 625.148 ops/ms
# Warmup Iteration  13: 621.218 ops/ms
# Warmup Iteration  14: 623.455 ops/ms
# Warmup Iteration  15: 624.830 ops/ms
# Warmup Iteration  16: 623.278 ops/ms
# Warmup Iteration  17: 626.292 ops/ms
# Warmup Iteration  18: 623.950 ops/ms
# Warmup Iteration  19: 626.917 ops/ms
# Warmup Iteration  20: 624.596 ops/ms
Iteration   1: 623.063 ops/ms
Iteration   2: 626.265 ops/ms
Iteration   3: 626.516 ops/ms
Iteration   4: 624.495 ops/ms
Iteration   5: 626.324 ops/ms
Iteration   6: 625.937 ops/ms
Iteration   7: 626.732 ops/ms
Iteration   8: 624.617 ops/ms
Iteration   9: 625.006 ops/ms
Iteration  10: 626.746 ops/ms
Iteration  11: 624.766 ops/ms
Iteration  12: 624.860 ops/ms
Iteration  13: 626.389 ops/ms
Iteration  14: 623.891 ops/ms
Iteration  15: 626.717 ops/ms
Iteration  16: 626.135 ops/ms
Iteration  17: 624.301 ops/ms
Iteration  18: 626.269 ops/ms
Iteration  19: 626.109 ops/ms
Iteration  20: 624.551 ops/ms

Result : 625.484 ?(95%) 0.515 ?(99%) 0.704 ops/ms
  Statistics: (min, avg, max) = (623.063, 625.484, 626.746), stdev = 1.101
  Confidence intervals: 95% [624.969, 626.000], 99% [624.780, 626.189]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 354.031 ops/ms
# Warmup Iteration   2: 572.507 ops/ms
# Warmup Iteration   3: 611.567 ops/ms
# Warmup Iteration   4: 612.352 ops/ms
# Warmup Iteration   5: 613.180 ops/ms
# Warmup Iteration   6: 613.147 ops/ms
# Warmup Iteration   7: 547.098 ops/ms
# Warmup Iteration   8: 600.279 ops/ms
# Warmup Iteration   9: 612.286 ops/ms
# Warmup Iteration  10: 615.151 ops/ms
# Warmup Iteration  11: 617.235 ops/ms
# Warmup Iteration  12: 618.409 ops/ms
# Warmup Iteration  13: 616.095 ops/ms
# Warmup Iteration  14: 616.240 ops/ms
# Warmup Iteration  15: 615.895 ops/ms
# Warmup Iteration  16: 618.079 ops/ms
# Warmup Iteration  17: 614.128 ops/ms
# Warmup Iteration  18: 566.834 ops/ms
# Warmup Iteration  19: 578.692 ops/ms
# Warmup Iteration  20: 617.188 ops/ms
Iteration   1: 616.205 ops/ms
Iteration   2: 615.293 ops/ms
Iteration   3: 616.680 ops/ms
Iteration   4: 617.909 ops/ms
Iteration   5: 615.826 ops/ms
Iteration   6: 615.252 ops/ms
Iteration   7: 615.686 ops/ms
Iteration   8: 615.731 ops/ms
Iteration   9: 615.339 ops/ms
Iteration  10: 618.431 ops/ms
Iteration  11: 617.630 ops/ms
Iteration  12: 617.393 ops/ms
Iteration  13: 618.497 ops/ms
Iteration  14: 617.486 ops/ms
Iteration  15: 617.921 ops/ms
Iteration  16: 609.856 ops/ms
Iteration  17: 616.317 ops/ms
Iteration  18: 618.082 ops/ms
Iteration  19: 618.373 ops/ms
Iteration  20: 618.354 ops/ms

Result : 616.613 ?(95%) 0.926 ?(99%) 1.265 ops/ms
  Statistics: (min, avg, max) = (609.856, 616.613, 618.497), stdev = 1.978
  Confidence intervals: 95% [615.687, 617.539], 99% [615.348, 617.878]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 357.865 ops/ms
# Warmup Iteration   2: 585.600 ops/ms
# Warmup Iteration   3: 617.195 ops/ms
# Warmup Iteration   4: 620.151 ops/ms
# Warmup Iteration   5: 619.063 ops/ms
# Warmup Iteration   6: 621.133 ops/ms
# Warmup Iteration   7: 552.146 ops/ms
# Warmup Iteration   8: 611.683 ops/ms
# Warmup Iteration   9: 621.551 ops/ms
# Warmup Iteration  10: 627.499 ops/ms
# Warmup Iteration  11: 624.809 ops/ms
# Warmup Iteration  12: 627.408 ops/ms
# Warmup Iteration  13: 625.673 ops/ms
# Warmup Iteration  14: 627.120 ops/ms
# Warmup Iteration  15: 627.573 ops/ms
# Warmup Iteration  16: 625.569 ops/ms
# Warmup Iteration  17: 631.598 ops/ms
# Warmup Iteration  18: 631.738 ops/ms
# Warmup Iteration  19: 632.299 ops/ms
# Warmup Iteration  20: 632.132 ops/ms
Iteration   1: 628.431 ops/ms
Iteration   2: 632.122 ops/ms
Iteration   3: 629.165 ops/ms
Iteration   4: 632.342 ops/ms
Iteration   5: 628.408 ops/ms
Iteration   6: 632.225 ops/ms
Iteration   7: 626.971 ops/ms
Iteration   8: 631.958 ops/ms
Iteration   9: 630.200 ops/ms
Iteration  10: 629.257 ops/ms
Iteration  11: 630.259 ops/ms
Iteration  12: 631.525 ops/ms
Iteration  13: 629.003 ops/ms
Iteration  14: 632.512 ops/ms
Iteration  15: 629.303 ops/ms
Iteration  16: 631.783 ops/ms
Iteration  17: 629.773 ops/ms
Iteration  18: 628.880 ops/ms
Iteration  19: 631.814 ops/ms
Iteration  20: 631.192 ops/ms

Result : 630.356 ?(95%) 0.767 ?(99%) 1.049 ops/ms
  Statistics: (min, avg, max) = (626.971, 630.356, 632.512), stdev = 1.640
  Confidence intervals: 95% [629.589, 631.123], 99% [629.307, 631.405]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 357.973 ops/ms
# Warmup Iteration   2: 574.638 ops/ms
# Warmup Iteration   3: 611.315 ops/ms
# Warmup Iteration   4: 608.879 ops/ms
# Warmup Iteration   5: 607.990 ops/ms
# Warmup Iteration   6: 608.391 ops/ms
# Warmup Iteration   7: 546.409 ops/ms
# Warmup Iteration   8: 600.285 ops/ms
# Warmup Iteration   9: 614.395 ops/ms
# Warmup Iteration  10: 615.127 ops/ms
# Warmup Iteration  11: 617.035 ops/ms
# Warmup Iteration  12: 615.180 ops/ms
# Warmup Iteration  13: 613.522 ops/ms
# Warmup Iteration  14: 615.053 ops/ms
# Warmup Iteration  15: 615.099 ops/ms
# Warmup Iteration  16: 618.702 ops/ms
# Warmup Iteration  17: 618.979 ops/ms
# Warmup Iteration  18: 616.286 ops/ms
# Warmup Iteration  19: 619.641 ops/ms
# Warmup Iteration  20: 617.707 ops/ms
Iteration   1: 616.698 ops/ms
Iteration   2: 616.245 ops/ms
Iteration   3: 619.128 ops/ms
Iteration   4: 616.460 ops/ms
Iteration   5: 616.883 ops/ms
Iteration   6: 616.554 ops/ms
Iteration   7: 619.515 ops/ms
Iteration   8: 619.065 ops/ms
Iteration   9: 615.332 ops/ms
Iteration  10: 617.912 ops/ms
Iteration  11: 619.271 ops/ms
Iteration  12: 619.436 ops/ms
Iteration  13: 617.229 ops/ms
Iteration  14: 618.772 ops/ms
Iteration  15: 618.931 ops/ms
Iteration  16: 617.551 ops/ms
Iteration  17: 617.544 ops/ms
Iteration  18: 616.267 ops/ms
Iteration  19: 619.150 ops/ms
Iteration  20: 617.772 ops/ms

Result : 617.786 ?(95%) 0.607 ?(99%) 0.829 ops/ms
  Statistics: (min, avg, max) = (615.332, 617.786, 619.515), stdev = 1.296
  Confidence intervals: 95% [617.179, 618.392], 99% [616.957, 618.615]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 361.276 ops/ms
# Warmup Iteration   2: 579.826 ops/ms
# Warmup Iteration   3: 613.703 ops/ms
# Warmup Iteration   4: 612.877 ops/ms
# Warmup Iteration   5: 610.875 ops/ms
# Warmup Iteration   6: 605.931 ops/ms
# Warmup Iteration   7: 547.340 ops/ms
# Warmup Iteration   8: 600.946 ops/ms
# Warmup Iteration   9: 613.733 ops/ms
# Warmup Iteration  10: 617.715 ops/ms
# Warmup Iteration  11: 621.988 ops/ms
# Warmup Iteration  12: 619.266 ops/ms
# Warmup Iteration  13: 619.168 ops/ms
# Warmup Iteration  14: 617.614 ops/ms
# Warmup Iteration  15: 613.573 ops/ms
# Warmup Iteration  16: 619.255 ops/ms
# Warmup Iteration  17: 614.839 ops/ms
# Warmup Iteration  18: 615.545 ops/ms
# Warmup Iteration  19: 615.169 ops/ms
# Warmup Iteration  20: 617.887 ops/ms
Iteration   1: 615.297 ops/ms
Iteration   2: 617.837 ops/ms
Iteration   3: 615.678 ops/ms
Iteration   4: 617.675 ops/ms
Iteration   5: 617.927 ops/ms
Iteration   6: 615.773 ops/ms
Iteration   7: 614.969 ops/ms
Iteration   8: 615.589 ops/ms
Iteration   9: 615.759 ops/ms
Iteration  10: 615.658 ops/ms
Iteration  11: 617.803 ops/ms
Iteration  12: 614.390 ops/ms
Iteration  13: 617.742 ops/ms
Iteration  14: 617.099 ops/ms
Iteration  15: 615.146 ops/ms
Iteration  16: 618.032 ops/ms
Iteration  17: 617.429 ops/ms
Iteration  18: 613.489 ops/ms
Iteration  19: 617.083 ops/ms
Iteration  20: 614.023 ops/ms

Result : 616.220 ?(95%) 0.674 ?(99%) 0.921 ops/ms
  Statistics: (min, avg, max) = (613.489, 616.220, 618.032), stdev = 1.439
  Confidence intervals: 95% [615.546, 616.893], 99% [615.299, 617.141]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1189.803 ops/ms
# Warmup Iteration   2: 1619.231 ops/ms
# Warmup Iteration   3: 1731.021 ops/ms
# Warmup Iteration   4: 1755.274 ops/ms
# Warmup Iteration   5: 1766.184 ops/ms
# Warmup Iteration   6: 1768.742 ops/ms
# Warmup Iteration   7: 1763.807 ops/ms
# Warmup Iteration   8: 1765.399 ops/ms
# Warmup Iteration   9: 1772.820 ops/ms
# Warmup Iteration  10: 1776.671 ops/ms
# Warmup Iteration  11: 1770.806 ops/ms
# Warmup Iteration  12: 1778.235 ops/ms
# Warmup Iteration  13: 1775.390 ops/ms
# Warmup Iteration  14: 1784.742 ops/ms
# Warmup Iteration  15: 1777.176 ops/ms
# Warmup Iteration  16: 1777.279 ops/ms
# Warmup Iteration  17: 1785.778 ops/ms
# Warmup Iteration  18: 1775.916 ops/ms
# Warmup Iteration  19: 1786.015 ops/ms
# Warmup Iteration  20: 1782.923 ops/ms
Iteration   1: 1784.044 ops/ms
Iteration   2: 1786.022 ops/ms
Iteration   3: 1782.879 ops/ms
Iteration   4: 1776.980 ops/ms
Iteration   5: 1785.021 ops/ms
Iteration   6: 1785.513 ops/ms
Iteration   7: 1775.775 ops/ms
Iteration   8: 1777.343 ops/ms
Iteration   9: 1785.910 ops/ms
Iteration  10: 1775.486 ops/ms
Iteration  11: 1777.986 ops/ms
Iteration  12: 1775.041 ops/ms
Iteration  13: 1785.262 ops/ms
Iteration  14: 1777.228 ops/ms
Iteration  15: 1780.560 ops/ms
Iteration  16: 1774.752 ops/ms
Iteration  17: 1785.074 ops/ms
Iteration  18: 1786.095 ops/ms
Iteration  19: 1778.774 ops/ms
Iteration  20: 1777.688 ops/ms

Result : 1780.672 ?(95%) 2.033 ?(99%) 2.779 ops/ms
  Statistics: (min, avg, max) = (1774.752, 1780.672, 1786.095), stdev = 4.344
  Confidence intervals: 95% [1778.639, 1782.704], 99% [1777.893, 1783.450]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1230.619 ops/ms
# Warmup Iteration   2: 1641.883 ops/ms
# Warmup Iteration   3: 1726.922 ops/ms
# Warmup Iteration   4: 1748.353 ops/ms
# Warmup Iteration   5: 1760.228 ops/ms
# Warmup Iteration   6: 1758.186 ops/ms
# Warmup Iteration   7: 1762.365 ops/ms
# Warmup Iteration   8: 1764.124 ops/ms
# Warmup Iteration   9: 1763.184 ops/ms
# Warmup Iteration  10: 1774.688 ops/ms
# Warmup Iteration  11: 1769.878 ops/ms
# Warmup Iteration  12: 1776.128 ops/ms
# Warmup Iteration  13: 1775.859 ops/ms
# Warmup Iteration  14: 1776.814 ops/ms
# Warmup Iteration  15: 1770.471 ops/ms
# Warmup Iteration  16: 1768.022 ops/ms
# Warmup Iteration  17: 1763.586 ops/ms
# Warmup Iteration  18: 1763.588 ops/ms
# Warmup Iteration  19: 1768.648 ops/ms
# Warmup Iteration  20: 1770.499 ops/ms
Iteration   1: 1762.880 ops/ms
Iteration   2: 1770.271 ops/ms
Iteration   3: 1770.104 ops/ms
Iteration   4: 1769.381 ops/ms
Iteration   5: 1769.094 ops/ms
Iteration   6: 1769.811 ops/ms
Iteration   7: 1771.138 ops/ms
Iteration   8: 1762.208 ops/ms
Iteration   9: 1760.487 ops/ms
Iteration  10: 1769.009 ops/ms
Iteration  11: 1759.994 ops/ms
Iteration  12: 1764.967 ops/ms
Iteration  13: 1766.404 ops/ms
Iteration  14: 1758.497 ops/ms
Iteration  15: 1768.717 ops/ms
Iteration  16: 1763.394 ops/ms
Iteration  17: 1768.507 ops/ms
Iteration  18: 1762.485 ops/ms
Iteration  19: 1767.233 ops/ms
Iteration  20: 1763.251 ops/ms

Result : 1765.892 ?(95%) 1.847 ?(99%) 2.524 ops/ms
  Statistics: (min, avg, max) = (1758.497, 1765.892, 1771.138), stdev = 3.946
  Confidence intervals: 95% [1764.045, 1767.738], 99% [1763.367, 1768.416]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1162.187 ops/ms
# Warmup Iteration   2: 1545.099 ops/ms
# Warmup Iteration   3: 1637.880 ops/ms
# Warmup Iteration   4: 1654.723 ops/ms
# Warmup Iteration   5: 1662.007 ops/ms
# Warmup Iteration   6: 1666.071 ops/ms
# Warmup Iteration   7: 1664.922 ops/ms
# Warmup Iteration   8: 1666.693 ops/ms
# Warmup Iteration   9: 1664.195 ops/ms
# Warmup Iteration  10: 1675.304 ops/ms
# Warmup Iteration  11: 1672.481 ops/ms
# Warmup Iteration  12: 1671.806 ops/ms
# Warmup Iteration  13: 1677.062 ops/ms
# Warmup Iteration  14: 1677.515 ops/ms
# Warmup Iteration  15: 1677.946 ops/ms
# Warmup Iteration  16: 1674.177 ops/ms
# Warmup Iteration  17: 1677.385 ops/ms
# Warmup Iteration  18: 1681.608 ops/ms
# Warmup Iteration  19: 1689.946 ops/ms
# Warmup Iteration  20: 1686.106 ops/ms
Iteration   1: 1680.539 ops/ms
Iteration   2: 1687.675 ops/ms
Iteration   3: 1680.394 ops/ms
Iteration   4: 1574.507 ops/ms
Iteration   5: 1560.744 ops/ms
Iteration   6: 1681.908 ops/ms
Iteration   7: 1683.790 ops/ms
Iteration   8: 1687.381 ops/ms
Iteration   9: 1685.970 ops/ms
Iteration  10: 1680.103 ops/ms
Iteration  11: 1682.111 ops/ms
Iteration  12: 1687.031 ops/ms
Iteration  13: 1687.969 ops/ms
Iteration  14: 1687.636 ops/ms
Iteration  15: 1687.495 ops/ms
Iteration  16: 1681.303 ops/ms
Iteration  17: 1681.439 ops/ms
Iteration  18: 1682.666 ops/ms
Iteration  19: 1681.174 ops/ms
Iteration  20: 1686.103 ops/ms

Result : 1672.397 ?(95%) 16.855 ?(99%) 23.040 ops/ms
  Statistics: (min, avg, max) = (1560.744, 1672.397, 1687.969), stdev = 36.014
  Confidence intervals: 95% [1655.542, 1689.252], 99% [1649.357, 1695.437]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1193.277 ops/ms
# Warmup Iteration   2: 1635.666 ops/ms
# Warmup Iteration   3: 1742.499 ops/ms
# Warmup Iteration   4: 1771.808 ops/ms
# Warmup Iteration   5: 1778.642 ops/ms
# Warmup Iteration   6: 1781.047 ops/ms
# Warmup Iteration   7: 1773.502 ops/ms
# Warmup Iteration   8: 1779.298 ops/ms
# Warmup Iteration   9: 1770.443 ops/ms
# Warmup Iteration  10: 1786.040 ops/ms
# Warmup Iteration  11: 1790.619 ops/ms
# Warmup Iteration  12: 1792.080 ops/ms
# Warmup Iteration  13: 1785.478 ops/ms
# Warmup Iteration  14: 1792.603 ops/ms
# Warmup Iteration  15: 1785.894 ops/ms
# Warmup Iteration  16: 1787.106 ops/ms
# Warmup Iteration  17: 1786.204 ops/ms
# Warmup Iteration  18: 1792.105 ops/ms
# Warmup Iteration  19: 1792.614 ops/ms
# Warmup Iteration  20: 1787.189 ops/ms
Iteration   1: 1791.807 ops/ms
Iteration   2: 1793.934 ops/ms
Iteration   3: 1783.855 ops/ms
Iteration   4: 1793.399 ops/ms
Iteration   5: 1783.584 ops/ms
Iteration   6: 1789.256 ops/ms
Iteration   7: 1793.054 ops/ms
Iteration   8: 1787.435 ops/ms
Iteration   9: 1793.052 ops/ms
Iteration  10: 1785.927 ops/ms
Iteration  11: 1784.733 ops/ms
Iteration  12: 1794.642 ops/ms
Iteration  13: 1776.798 ops/ms
Iteration  14: 1786.776 ops/ms
Iteration  15: 1784.454 ops/ms
Iteration  16: 1792.269 ops/ms
Iteration  17: 1784.625 ops/ms
Iteration  18: 1789.710 ops/ms
Iteration  19: 1792.121 ops/ms
Iteration  20: 1784.464 ops/ms

Result : 1788.295 ?(95%) 2.220 ?(99%) 3.034 ops/ms
  Statistics: (min, avg, max) = (1776.798, 1788.295, 1794.642), stdev = 4.743
  Confidence intervals: 95% [1786.075, 1790.515], 99% [1785.261, 1791.329]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1232.257 ops/ms
# Warmup Iteration   2: 1639.974 ops/ms
# Warmup Iteration   3: 1729.795 ops/ms
# Warmup Iteration   4: 1758.976 ops/ms
# Warmup Iteration   5: 1767.561 ops/ms
# Warmup Iteration   6: 1769.234 ops/ms
# Warmup Iteration   7: 1770.796 ops/ms
# Warmup Iteration   8: 1767.367 ops/ms
# Warmup Iteration   9: 1766.666 ops/ms
# Warmup Iteration  10: 1774.590 ops/ms
# Warmup Iteration  11: 1776.459 ops/ms
# Warmup Iteration  12: 1766.491 ops/ms
# Warmup Iteration  13: 1773.708 ops/ms
# Warmup Iteration  14: 1778.779 ops/ms
# Warmup Iteration  15: 1772.430 ops/ms
# Warmup Iteration  16: 1781.515 ops/ms
# Warmup Iteration  17: 1773.032 ops/ms
# Warmup Iteration  18: 1782.086 ops/ms
# Warmup Iteration  19: 1773.999 ops/ms
# Warmup Iteration  20: 1779.623 ops/ms
Iteration   1: 1770.740 ops/ms
Iteration   2: 1780.038 ops/ms
Iteration   3: 1738.090 ops/ms
Iteration   4: 1767.141 ops/ms
Iteration   5: 1781.450 ops/ms
Iteration   6: 1774.304 ops/ms
Iteration   7: 1778.214 ops/ms
Iteration   8: 1771.025 ops/ms
Iteration   9: 1773.301 ops/ms
Iteration  10: 1773.272 ops/ms
Iteration  11: 1775.108 ops/ms
Iteration  12: 1773.371 ops/ms
Iteration  13: 1772.644 ops/ms
Iteration  14: 1768.732 ops/ms
Iteration  15: 1760.288 ops/ms
Iteration  16: 1777.369 ops/ms
Iteration  17: 1781.249 ops/ms
Iteration  18: 1771.337 ops/ms
Iteration  19: 1773.263 ops/ms
Iteration  20: 1782.013 ops/ms

Result : 1772.148 ?(95%) 4.496 ?(99%) 6.145 ops/ms
  Statistics: (min, avg, max) = (1738.090, 1772.148, 1782.013), stdev = 9.606
  Confidence intervals: 95% [1767.652, 1776.643], 99% [1766.002, 1778.293]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.532 ops/ms
# Warmup Iteration   2: 11.646 ops/ms
# Warmup Iteration   3: 18.379 ops/ms
# Warmup Iteration   4: 19.740 ops/ms
# Warmup Iteration   5: 19.773 ops/ms
# Warmup Iteration   6: 19.708 ops/ms
# Warmup Iteration   7: 19.704 ops/ms
# Warmup Iteration   8: 18.025 ops/ms
# Warmup Iteration   9: 18.174 ops/ms
# Warmup Iteration  10: 19.904 ops/ms
# Warmup Iteration  11: 19.766 ops/ms
# Warmup Iteration  12: 19.827 ops/ms
# Warmup Iteration  13: 19.814 ops/ms
# Warmup Iteration  14: 19.830 ops/ms
# Warmup Iteration  15: 19.894 ops/ms
# Warmup Iteration  16: 19.898 ops/ms
# Warmup Iteration  17: 19.931 ops/ms
# Warmup Iteration  18: 19.913 ops/ms
# Warmup Iteration  19: 19.914 ops/ms
# Warmup Iteration  20: 19.889 ops/ms
Iteration   1: 19.861 ops/ms
Iteration   2: 19.912 ops/ms
Iteration   3: 19.831 ops/ms
Iteration   4: 19.844 ops/ms
Iteration   5: 19.829 ops/ms
Iteration   6: 19.752 ops/ms
Iteration   7: 19.941 ops/ms
Iteration   8: 19.888 ops/ms
Iteration   9: 19.854 ops/ms
Iteration  10: 19.863 ops/ms
Iteration  11: 19.838 ops/ms
Iteration  12: 19.830 ops/ms
Iteration  13: 19.830 ops/ms
Iteration  14: 19.767 ops/ms
Iteration  15: 19.915 ops/ms
Iteration  16: 19.918 ops/ms
Iteration  17: 19.851 ops/ms
Iteration  18: 19.898 ops/ms
Iteration  19: 19.922 ops/ms
Iteration  20: 19.862 ops/ms

Result : 19.860 ?(95%) 0.023 ?(99%) 0.032 ops/ms
  Statistics: (min, avg, max) = (19.752, 19.860, 19.941), stdev = 0.050
  Confidence intervals: 95% [19.837, 19.884], 99% [19.829, 19.892]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.549 ops/ms
# Warmup Iteration   2: 11.814 ops/ms
# Warmup Iteration   3: 18.339 ops/ms
# Warmup Iteration   4: 19.500 ops/ms
# Warmup Iteration   5: 19.619 ops/ms
# Warmup Iteration   6: 19.561 ops/ms
# Warmup Iteration   7: 19.680 ops/ms
# Warmup Iteration   8: 18.015 ops/ms
# Warmup Iteration   9: 18.101 ops/ms
# Warmup Iteration  10: 19.763 ops/ms
# Warmup Iteration  11: 19.839 ops/ms
# Warmup Iteration  12: 19.732 ops/ms
# Warmup Iteration  13: 19.742 ops/ms
# Warmup Iteration  14: 19.820 ops/ms
# Warmup Iteration  15: 19.800 ops/ms
# Warmup Iteration  16: 19.731 ops/ms
# Warmup Iteration  17: 19.494 ops/ms
# Warmup Iteration  18: 19.628 ops/ms
# Warmup Iteration  19: 19.581 ops/ms
# Warmup Iteration  20: 19.581 ops/ms
Iteration   1: 19.626 ops/ms
Iteration   2: 19.586 ops/ms
Iteration   3: 19.639 ops/ms
Iteration   4: 19.563 ops/ms
Iteration   5: 19.656 ops/ms
Iteration   6: 19.624 ops/ms
Iteration   7: 19.636 ops/ms
Iteration   8: 19.571 ops/ms
Iteration   9: 19.458 ops/ms
Iteration  10: 19.463 ops/ms
Iteration  11: 19.567 ops/ms
Iteration  12: 19.635 ops/ms
Iteration  13: 19.563 ops/ms
Iteration  14: 19.553 ops/ms
Iteration  15: 19.648 ops/ms
Iteration  16: 19.556 ops/ms
Iteration  17: 19.569 ops/ms
Iteration  18: 19.593 ops/ms
Iteration  19: 19.496 ops/ms
Iteration  20: 19.599 ops/ms

Result : 19.580 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (19.458, 19.580, 19.656), stdev = 0.057
  Confidence intervals: 95% [19.553, 19.607], 99% [19.543, 19.617]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.524 ops/ms
# Warmup Iteration   2: 11.886 ops/ms
# Warmup Iteration   3: 18.684 ops/ms
# Warmup Iteration   4: 19.915 ops/ms
# Warmup Iteration   5: 19.946 ops/ms
# Warmup Iteration   6: 20.037 ops/ms
# Warmup Iteration   7: 20.009 ops/ms
# Warmup Iteration   8: 18.372 ops/ms
# Warmup Iteration   9: 18.379 ops/ms
# Warmup Iteration  10: 20.017 ops/ms
# Warmup Iteration  11: 20.099 ops/ms
# Warmup Iteration  12: 20.181 ops/ms
# Warmup Iteration  13: 20.116 ops/ms
# Warmup Iteration  14: 20.158 ops/ms
# Warmup Iteration  15: 20.177 ops/ms
# Warmup Iteration  16: 20.191 ops/ms
# Warmup Iteration  17: 20.181 ops/ms
# Warmup Iteration  18: 20.172 ops/ms
# Warmup Iteration  19: 20.155 ops/ms
# Warmup Iteration  20: 20.140 ops/ms
Iteration   1: 20.214 ops/ms
Iteration   2: 20.233 ops/ms
Iteration   3: 20.170 ops/ms
Iteration   4: 20.252 ops/ms
Iteration   5: 20.162 ops/ms
Iteration   6: 20.188 ops/ms
Iteration   7: 20.135 ops/ms
Iteration   8: 20.202 ops/ms
Iteration   9: 20.222 ops/ms
Iteration  10: 20.170 ops/ms
Iteration  11: 20.166 ops/ms
Iteration  12: 20.161 ops/ms
Iteration  13: 20.146 ops/ms
Iteration  14: 20.278 ops/ms
Iteration  15: 20.182 ops/ms
Iteration  16: 20.203 ops/ms
Iteration  17: 20.210 ops/ms
Iteration  18: 20.133 ops/ms
Iteration  19: 20.181 ops/ms
Iteration  20: 20.172 ops/ms

Result : 20.189 ?(95%) 0.018 ?(99%) 0.024 ops/ms
  Statistics: (min, avg, max) = (20.133, 20.189, 20.278), stdev = 0.038
  Confidence intervals: 95% [20.171, 20.207], 99% [20.165, 20.213]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.494 ops/ms
# Warmup Iteration   2: 11.697 ops/ms
# Warmup Iteration   3: 18.516 ops/ms
# Warmup Iteration   4: 19.795 ops/ms
# Warmup Iteration   5: 19.790 ops/ms
# Warmup Iteration   6: 19.813 ops/ms
# Warmup Iteration   7: 19.801 ops/ms
# Warmup Iteration   8: 18.073 ops/ms
# Warmup Iteration   9: 18.222 ops/ms
# Warmup Iteration  10: 20.026 ops/ms
# Warmup Iteration  11: 20.041 ops/ms
# Warmup Iteration  12: 20.087 ops/ms
# Warmup Iteration  13: 19.985 ops/ms
# Warmup Iteration  14: 20.094 ops/ms
# Warmup Iteration  15: 20.054 ops/ms
# Warmup Iteration  16: 19.934 ops/ms
# Warmup Iteration  17: 19.954 ops/ms
# Warmup Iteration  18: 20.018 ops/ms
# Warmup Iteration  19: 20.103 ops/ms
# Warmup Iteration  20: 20.109 ops/ms
Iteration   1: 19.995 ops/ms
Iteration   2: 20.120 ops/ms
Iteration   3: 20.057 ops/ms
Iteration   4: 20.068 ops/ms
Iteration   5: 20.009 ops/ms
Iteration   6: 20.184 ops/ms
Iteration   7: 20.090 ops/ms
Iteration   8: 20.088 ops/ms
Iteration   9: 19.933 ops/ms
Iteration  10: 18.436 ops/ms
Iteration  11: 18.741 ops/ms
Iteration  12: 20.204 ops/ms
Iteration  13: 19.989 ops/ms
Iteration  14: 20.051 ops/ms
Iteration  15: 20.092 ops/ms
Iteration  16: 20.137 ops/ms
Iteration  17: 20.114 ops/ms
Iteration  18: 20.100 ops/ms
Iteration  19: 20.059 ops/ms
Iteration  20: 20.004 ops/ms

Result : 19.924 ?(95%) 0.217 ?(99%) 0.297 ops/ms
  Statistics: (min, avg, max) = (18.436, 19.924, 20.204), stdev = 0.464
  Confidence intervals: 95% [19.706, 20.141], 99% [19.627, 20.220]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.453 ops/ms
# Warmup Iteration   2: 11.645 ops/ms
# Warmup Iteration   3: 18.613 ops/ms
# Warmup Iteration   4: 19.979 ops/ms
# Warmup Iteration   5: 20.050 ops/ms
# Warmup Iteration   6: 19.990 ops/ms
# Warmup Iteration   7: 19.913 ops/ms
# Warmup Iteration   8: 18.099 ops/ms
# Warmup Iteration   9: 18.282 ops/ms
# Warmup Iteration  10: 20.120 ops/ms
# Warmup Iteration  11: 20.122 ops/ms
# Warmup Iteration  12: 20.062 ops/ms
# Warmup Iteration  13: 20.112 ops/ms
# Warmup Iteration  14: 20.074 ops/ms
# Warmup Iteration  15: 20.020 ops/ms
# Warmup Iteration  16: 20.058 ops/ms
# Warmup Iteration  17: 19.937 ops/ms
# Warmup Iteration  18: 20.010 ops/ms
# Warmup Iteration  19: 19.988 ops/ms
# Warmup Iteration  20: 19.910 ops/ms
Iteration   1: 19.982 ops/ms
Iteration   2: 19.938 ops/ms
Iteration   3: 19.932 ops/ms
Iteration   4: 19.993 ops/ms
Iteration   5: 19.852 ops/ms
Iteration   6: 19.961 ops/ms
Iteration   7: 19.851 ops/ms
Iteration   8: 19.880 ops/ms
Iteration   9: 19.968 ops/ms
Iteration  10: 19.922 ops/ms
Iteration  11: 19.997 ops/ms
Iteration  12: 19.969 ops/ms
Iteration  13: 19.902 ops/ms
Iteration  14: 20.005 ops/ms
Iteration  15: 20.004 ops/ms
Iteration  16: 19.948 ops/ms
Iteration  17: 19.987 ops/ms
Iteration  18: 19.937 ops/ms
Iteration  19: 19.921 ops/ms
Iteration  20: 20.012 ops/ms

Result : 19.948 ?(95%) 0.023 ?(99%) 0.031 ops/ms
  Statistics: (min, avg, max) = (19.851, 19.948, 20.012), stdev = 0.049
  Confidence intervals: 95% [19.925, 19.971], 99% [19.917, 19.979]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1003.047 ops/ms
# Warmup Iteration   2: 2174.654 ops/ms
# Warmup Iteration   3: 2356.435 ops/ms
# Warmup Iteration   4: 2371.011 ops/ms
# Warmup Iteration   5: 2378.541 ops/ms
# Warmup Iteration   6: 2376.450 ops/ms
# Warmup Iteration   7: 2390.483 ops/ms
# Warmup Iteration   8: 2393.714 ops/ms
# Warmup Iteration   9: 2400.357 ops/ms
# Warmup Iteration  10: 2403.163 ops/ms
# Warmup Iteration  11: 2399.342 ops/ms
# Warmup Iteration  12: 2409.600 ops/ms
# Warmup Iteration  13: 2398.166 ops/ms
# Warmup Iteration  14: 2410.759 ops/ms
# Warmup Iteration  15: 2411.206 ops/ms
# Warmup Iteration  16: 2405.807 ops/ms
# Warmup Iteration  17: 2434.642 ops/ms
# Warmup Iteration  18: 2439.424 ops/ms
# Warmup Iteration  19: 2439.338 ops/ms
# Warmup Iteration  20: 2439.779 ops/ms
Iteration   1: 2422.818 ops/ms
Iteration   2: 2426.235 ops/ms
Iteration   3: 2433.707 ops/ms
Iteration   4: 2440.315 ops/ms
Iteration   5: 2430.993 ops/ms
Iteration   6: 2437.234 ops/ms
Iteration   7: 2432.055 ops/ms
Iteration   8: 2438.408 ops/ms
Iteration   9: 2439.763 ops/ms
Iteration  10: 2438.669 ops/ms
Iteration  11: 2435.388 ops/ms
Iteration  12: 2439.035 ops/ms
Iteration  13: 2435.939 ops/ms
Iteration  14: 2431.013 ops/ms
Iteration  15: 2434.908 ops/ms
Iteration  16: 2431.501 ops/ms
Iteration  17: 2429.312 ops/ms
Iteration  18: 2430.028 ops/ms
Iteration  19: 2429.390 ops/ms
Iteration  20: 2428.444 ops/ms

Result : 2433.258 ?(95%) 2.275 ?(99%) 3.110 ops/ms
  Statistics: (min, avg, max) = (2422.818, 2433.258, 2440.315), stdev = 4.861
  Confidence intervals: 95% [2430.983, 2435.533], 99% [2430.148, 2436.367]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 981.994 ops/ms
# Warmup Iteration   2: 1910.897 ops/ms
# Warmup Iteration   3: 2070.631 ops/ms
# Warmup Iteration   4: 2087.282 ops/ms
# Warmup Iteration   5: 2094.865 ops/ms
# Warmup Iteration   6: 2091.502 ops/ms
# Warmup Iteration   7: 2074.335 ops/ms
# Warmup Iteration   8: 2074.178 ops/ms
# Warmup Iteration   9: 2081.162 ops/ms
# Warmup Iteration  10: 2094.655 ops/ms
# Warmup Iteration  11: 2093.497 ops/ms
# Warmup Iteration  12: 2090.587 ops/ms
# Warmup Iteration  13: 2090.350 ops/ms
# Warmup Iteration  14: 2082.928 ops/ms
# Warmup Iteration  15: 2086.862 ops/ms
# Warmup Iteration  16: 2093.174 ops/ms
# Warmup Iteration  17: 2049.169 ops/ms
# Warmup Iteration  18: 2051.360 ops/ms
# Warmup Iteration  19: 2044.912 ops/ms
# Warmup Iteration  20: 2051.942 ops/ms
Iteration   1: 2031.593 ops/ms
Iteration   2: 2039.869 ops/ms
Iteration   3: 2035.234 ops/ms
Iteration   4: 2032.868 ops/ms
Iteration   5: 2052.892 ops/ms
Iteration   6: 2030.004 ops/ms
Iteration   7: 2017.989 ops/ms
Iteration   8: 2041.553 ops/ms
Iteration   9: 2029.055 ops/ms
Iteration  10: 2038.923 ops/ms
Iteration  11: 2040.935 ops/ms
Iteration  12: 2028.156 ops/ms
Iteration  13: 2041.573 ops/ms
Iteration  14: 2034.428 ops/ms
Iteration  15: 2051.484 ops/ms
Iteration  16: 2044.940 ops/ms
Iteration  17: 2040.285 ops/ms
Iteration  18: 2034.461 ops/ms
Iteration  19: 2027.981 ops/ms
Iteration  20: 2033.291 ops/ms

Result : 2036.376 ?(95%) 3.881 ?(99%) 5.305 ops/ms
  Statistics: (min, avg, max) = (2017.989, 2036.376, 2052.892), stdev = 8.293
  Confidence intervals: 95% [2032.494, 2040.257], 99% [2031.070, 2041.681]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1103.503 ops/ms
# Warmup Iteration   2: 2067.852 ops/ms
# Warmup Iteration   3: 2214.218 ops/ms
# Warmup Iteration   4: 2214.336 ops/ms
# Warmup Iteration   5: 2234.333 ops/ms
# Warmup Iteration   6: 2231.237 ops/ms
# Warmup Iteration   7: 2237.683 ops/ms
# Warmup Iteration   8: 2237.353 ops/ms
# Warmup Iteration   9: 2241.044 ops/ms
# Warmup Iteration  10: 2254.620 ops/ms
# Warmup Iteration  11: 2231.119 ops/ms
# Warmup Iteration  12: 2253.331 ops/ms
# Warmup Iteration  13: 2257.589 ops/ms
# Warmup Iteration  14: 2255.888 ops/ms
# Warmup Iteration  15: 2249.612 ops/ms
# Warmup Iteration  16: 2254.174 ops/ms
# Warmup Iteration  17: 2202.216 ops/ms
# Warmup Iteration  18: 2217.079 ops/ms
# Warmup Iteration  19: 2215.995 ops/ms
# Warmup Iteration  20: 2213.338 ops/ms
Iteration   1: 2206.721 ops/ms
Iteration   2: 2200.040 ops/ms
Iteration   3: 2201.036 ops/ms
Iteration   4: 2200.569 ops/ms
Iteration   5: 2203.177 ops/ms
Iteration   6: 2201.744 ops/ms
Iteration   7: 2206.324 ops/ms
Iteration   8: 2196.579 ops/ms
Iteration   9: 2208.815 ops/ms
Iteration  10: 2207.817 ops/ms
Iteration  11: 2199.847 ops/ms
Iteration  12: 2201.669 ops/ms
Iteration  13: 2200.191 ops/ms
Iteration  14: 2196.553 ops/ms
Iteration  15: 2211.398 ops/ms
Iteration  16: 2205.580 ops/ms
Iteration  17: 2198.331 ops/ms
Iteration  18: 2198.617 ops/ms
Iteration  19: 2209.936 ops/ms
Iteration  20: 2198.279 ops/ms

Result : 2202.661 ?(95%) 2.122 ?(99%) 2.901 ops/ms
  Statistics: (min, avg, max) = (2196.553, 2202.661, 2211.398), stdev = 4.535
  Confidence intervals: 95% [2200.539, 2204.784], 99% [2199.760, 2205.563]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1019.864 ops/ms
# Warmup Iteration   2: 2054.553 ops/ms
# Warmup Iteration   3: 2154.792 ops/ms
# Warmup Iteration   4: 2150.776 ops/ms
# Warmup Iteration   5: 2175.602 ops/ms
# Warmup Iteration   6: 2183.469 ops/ms
# Warmup Iteration   7: 2201.967 ops/ms
# Warmup Iteration   8: 2214.307 ops/ms
# Warmup Iteration   9: 2214.981 ops/ms
# Warmup Iteration  10: 2221.366 ops/ms
# Warmup Iteration  11: 2214.578 ops/ms
# Warmup Iteration  12: 2217.187 ops/ms
# Warmup Iteration  13: 2222.313 ops/ms
# Warmup Iteration  14: 2216.481 ops/ms
# Warmup Iteration  15: 2223.376 ops/ms
# Warmup Iteration  16: 2221.138 ops/ms
# Warmup Iteration  17: 2185.883 ops/ms
# Warmup Iteration  18: 2192.996 ops/ms
# Warmup Iteration  19: 2193.830 ops/ms
# Warmup Iteration  20: 2181.587 ops/ms
Iteration   1: 2187.288 ops/ms
Iteration   2: 2191.457 ops/ms
Iteration   3: 2196.118 ops/ms
Iteration   4: 2191.855 ops/ms
Iteration   5: 2193.493 ops/ms
Iteration   6: 2185.101 ops/ms
Iteration   7: 2193.650 ops/ms
Iteration   8: 2195.106 ops/ms
Iteration   9: 2182.976 ops/ms
Iteration  10: 2196.067 ops/ms
Iteration  11: 2194.578 ops/ms
Iteration  12: 2202.242 ops/ms
Iteration  13: 2194.339 ops/ms
Iteration  14: 2189.374 ops/ms
Iteration  15: 2190.643 ops/ms
Iteration  16: 2192.633 ops/ms
Iteration  17: 2192.607 ops/ms
Iteration  18: 2193.853 ops/ms
Iteration  19: 2186.819 ops/ms
Iteration  20: 2194.405 ops/ms

Result : 2192.230 ?(95%) 2.040 ?(99%) 2.789 ops/ms
  Statistics: (min, avg, max) = (2182.976, 2192.230, 2202.242), stdev = 4.360
  Confidence intervals: 95% [2190.190, 2194.271], 99% [2189.441, 2195.019]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1250.365 ops/ms
# Warmup Iteration   2: 2185.572 ops/ms
# Warmup Iteration   3: 2374.783 ops/ms
# Warmup Iteration   4: 2404.702 ops/ms
# Warmup Iteration   5: 2396.657 ops/ms
# Warmup Iteration   6: 2395.255 ops/ms
# Warmup Iteration   7: 2366.213 ops/ms
# Warmup Iteration   8: 2368.428 ops/ms
# Warmup Iteration   9: 2372.622 ops/ms
# Warmup Iteration  10: 2383.098 ops/ms
# Warmup Iteration  11: 2396.134 ops/ms
# Warmup Iteration  12: 2391.919 ops/ms
# Warmup Iteration  13: 2382.824 ops/ms
# Warmup Iteration  14: 2375.922 ops/ms
# Warmup Iteration  15: 2392.975 ops/ms
# Warmup Iteration  16: 2388.097 ops/ms
# Warmup Iteration  17: 2377.163 ops/ms
# Warmup Iteration  18: 2368.690 ops/ms
# Warmup Iteration  19: 2366.410 ops/ms
# Warmup Iteration  20: 2377.378 ops/ms
Iteration   1: 2373.835 ops/ms
Iteration   2: 2373.480 ops/ms
Iteration   3: 2373.947 ops/ms
Iteration   4: 2381.509 ops/ms
Iteration   5: 2368.304 ops/ms
Iteration   6: 2389.291 ops/ms
Iteration   7: 2366.255 ops/ms
Iteration   8: 2365.599 ops/ms
Iteration   9: 2366.370 ops/ms
Iteration  10: 2367.624 ops/ms
Iteration  11: 2370.448 ops/ms
Iteration  12: 2376.443 ops/ms
Iteration  13: 2368.427 ops/ms
Iteration  14: 2377.660 ops/ms
Iteration  15: 2327.736 ops/ms
Iteration  16: 2221.373 ops/ms
Iteration  17: 2251.600 ops/ms
Iteration  18: 2381.626 ops/ms
Iteration  19: 2372.872 ops/ms
Iteration  20: 2382.104 ops/ms

Result : 2357.825 ?(95%) 20.351 ?(99%) 27.818 ops/ms
  Statistics: (min, avg, max) = (2221.373, 2357.825, 2389.291), stdev = 43.483
  Confidence intervals: 95% [2337.475, 2378.176], 99% [2330.007, 2385.643]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.373 ops/ms
# Warmup Iteration   2: 102.351 ops/ms
# Warmup Iteration   3: 173.246 ops/ms
# Warmup Iteration   4: 175.404 ops/ms
# Warmup Iteration   5: 177.072 ops/ms
# Warmup Iteration   6: 176.259 ops/ms
# Warmup Iteration   7: 150.667 ops/ms
# Warmup Iteration   8: 178.010 ops/ms
# Warmup Iteration   9: 178.918 ops/ms
# Warmup Iteration  10: 179.259 ops/ms
# Warmup Iteration  11: 178.991 ops/ms
# Warmup Iteration  12: 178.663 ops/ms
# Warmup Iteration  13: 179.251 ops/ms
# Warmup Iteration  14: 178.532 ops/ms
# Warmup Iteration  15: 178.996 ops/ms
# Warmup Iteration  16: 178.347 ops/ms
# Warmup Iteration  17: 180.046 ops/ms
# Warmup Iteration  18: 180.160 ops/ms
# Warmup Iteration  19: 179.458 ops/ms
# Warmup Iteration  20: 179.985 ops/ms
Iteration   1: 178.607 ops/ms
Iteration   2: 180.093 ops/ms
Iteration   3: 179.968 ops/ms
Iteration   4: 180.175 ops/ms
Iteration   5: 180.259 ops/ms
Iteration   6: 179.596 ops/ms
Iteration   7: 179.638 ops/ms
Iteration   8: 179.528 ops/ms
Iteration   9: 180.013 ops/ms
Iteration  10: 180.152 ops/ms
Iteration  11: 179.126 ops/ms
Iteration  12: 179.489 ops/ms
Iteration  13: 179.463 ops/ms
Iteration  14: 179.455 ops/ms
Iteration  15: 179.420 ops/ms
Iteration  16: 180.177 ops/ms
Iteration  17: 180.590 ops/ms
Iteration  18: 179.740 ops/ms
Iteration  19: 179.607 ops/ms
Iteration  20: 179.844 ops/ms

Result : 179.747 ?(95%) 0.211 ?(99%) 0.289 ops/ms
  Statistics: (min, avg, max) = (178.607, 179.747, 180.590), stdev = 0.452
  Confidence intervals: 95% [179.536, 179.959], 99% [179.458, 180.036]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.753 ops/ms
# Warmup Iteration   2: 101.771 ops/ms
# Warmup Iteration   3: 172.775 ops/ms
# Warmup Iteration   4: 173.381 ops/ms
# Warmup Iteration   5: 174.964 ops/ms
# Warmup Iteration   6: 175.791 ops/ms
# Warmup Iteration   7: 150.263 ops/ms
# Warmup Iteration   8: 176.127 ops/ms
# Warmup Iteration   9: 177.082 ops/ms
# Warmup Iteration  10: 178.169 ops/ms
# Warmup Iteration  11: 178.685 ops/ms
# Warmup Iteration  12: 178.530 ops/ms
# Warmup Iteration  13: 177.752 ops/ms
# Warmup Iteration  14: 178.806 ops/ms
# Warmup Iteration  15: 177.962 ops/ms
# Warmup Iteration  16: 178.758 ops/ms
# Warmup Iteration  17: 176.934 ops/ms
# Warmup Iteration  18: 176.716 ops/ms
# Warmup Iteration  19: 177.049 ops/ms
# Warmup Iteration  20: 177.023 ops/ms
Iteration   1: 176.549 ops/ms
Iteration   2: 176.490 ops/ms
Iteration   3: 176.101 ops/ms
Iteration   4: 176.402 ops/ms
Iteration   5: 177.141 ops/ms
Iteration   6: 177.138 ops/ms
Iteration   7: 176.480 ops/ms
Iteration   8: 176.577 ops/ms
Iteration   9: 176.925 ops/ms
Iteration  10: 176.522 ops/ms
Iteration  11: 176.659 ops/ms
Iteration  12: 176.323 ops/ms
Iteration  13: 176.811 ops/ms
Iteration  14: 176.635 ops/ms
Iteration  15: 176.733 ops/ms
Iteration  16: 176.596 ops/ms
Iteration  17: 177.049 ops/ms
Iteration  18: 177.168 ops/ms
Iteration  19: 176.525 ops/ms
Iteration  20: 177.164 ops/ms

Result : 176.699 ?(95%) 0.144 ?(99%) 0.197 ops/ms
  Statistics: (min, avg, max) = (176.101, 176.699, 177.168), stdev = 0.308
  Confidence intervals: 95% [176.555, 176.844], 99% [176.502, 176.897]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.786 ops/ms
# Warmup Iteration   2: 101.711 ops/ms
# Warmup Iteration   3: 172.366 ops/ms
# Warmup Iteration   4: 174.934 ops/ms
# Warmup Iteration   5: 174.323 ops/ms
# Warmup Iteration   6: 174.530 ops/ms
# Warmup Iteration   7: 147.185 ops/ms
# Warmup Iteration   8: 174.303 ops/ms
# Warmup Iteration   9: 175.831 ops/ms
# Warmup Iteration  10: 176.370 ops/ms
# Warmup Iteration  11: 176.225 ops/ms
# Warmup Iteration  12: 176.625 ops/ms
# Warmup Iteration  13: 176.345 ops/ms
# Warmup Iteration  14: 176.255 ops/ms
# Warmup Iteration  15: 176.367 ops/ms
# Warmup Iteration  16: 176.463 ops/ms
# Warmup Iteration  17: 177.533 ops/ms
# Warmup Iteration  18: 176.484 ops/ms
# Warmup Iteration  19: 176.587 ops/ms
# Warmup Iteration  20: 176.636 ops/ms
Iteration   1: 176.808 ops/ms
Iteration   2: 176.885 ops/ms
Iteration   3: 176.153 ops/ms
Iteration   4: 176.102 ops/ms
Iteration   5: 176.656 ops/ms
Iteration   6: 176.400 ops/ms
Iteration   7: 176.867 ops/ms
Iteration   8: 176.467 ops/ms
Iteration   9: 176.392 ops/ms
Iteration  10: 176.157 ops/ms
Iteration  11: 176.401 ops/ms
Iteration  12: 175.943 ops/ms
Iteration  13: 176.252 ops/ms
Iteration  14: 177.058 ops/ms
Iteration  15: 176.900 ops/ms
Iteration  16: 176.167 ops/ms
Iteration  17: 175.680 ops/ms
Iteration  18: 177.069 ops/ms
Iteration  19: 176.463 ops/ms
Iteration  20: 176.463 ops/ms

Result : 176.464 ?(95%) 0.178 ?(99%) 0.244 ops/ms
  Statistics: (min, avg, max) = (175.680, 176.464, 177.069), stdev = 0.381
  Confidence intervals: 95% [176.286, 176.643], 99% [176.220, 176.708]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.348 ops/ms
# Warmup Iteration   2: 98.558 ops/ms
# Warmup Iteration   3: 164.795 ops/ms
# Warmup Iteration   4: 168.730 ops/ms
# Warmup Iteration   5: 168.663 ops/ms
# Warmup Iteration   6: 168.791 ops/ms
# Warmup Iteration   7: 169.847 ops/ms
# Warmup Iteration   8: 156.028 ops/ms
# Warmup Iteration   9: 156.875 ops/ms
# Warmup Iteration  10: 171.153 ops/ms
# Warmup Iteration  11: 170.808 ops/ms
# Warmup Iteration  12: 170.947 ops/ms
# Warmup Iteration  13: 170.940 ops/ms
# Warmup Iteration  14: 170.850 ops/ms
# Warmup Iteration  15: 170.185 ops/ms
# Warmup Iteration  16: 170.887 ops/ms
# Warmup Iteration  17: 172.265 ops/ms
# Warmup Iteration  18: 172.056 ops/ms
# Warmup Iteration  19: 171.910 ops/ms
# Warmup Iteration  20: 171.350 ops/ms
Iteration   1: 171.273 ops/ms
Iteration   2: 171.726 ops/ms
Iteration   3: 171.870 ops/ms
Iteration   4: 171.217 ops/ms
Iteration   5: 171.854 ops/ms
Iteration   6: 171.838 ops/ms
Iteration   7: 171.334 ops/ms
Iteration   8: 171.248 ops/ms
Iteration   9: 171.202 ops/ms
Iteration  10: 171.689 ops/ms
Iteration  11: 171.164 ops/ms
Iteration  12: 171.925 ops/ms
Iteration  13: 171.772 ops/ms
Iteration  14: 170.920 ops/ms
Iteration  15: 171.104 ops/ms
Iteration  16: 171.263 ops/ms
Iteration  17: 171.157 ops/ms
Iteration  18: 171.240 ops/ms
Iteration  19: 171.354 ops/ms
Iteration  20: 171.206 ops/ms

Result : 171.418 ?(95%) 0.146 ?(99%) 0.199 ops/ms
  Statistics: (min, avg, max) = (170.920, 171.418, 171.925), stdev = 0.312
  Confidence intervals: 95% [171.272, 171.564], 99% [171.218, 171.617]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.803 ops/ms
# Warmup Iteration   2: 96.363 ops/ms
# Warmup Iteration   3: 154.364 ops/ms
# Warmup Iteration   4: 159.914 ops/ms
# Warmup Iteration   5: 160.483 ops/ms
# Warmup Iteration   6: 160.159 ops/ms
# Warmup Iteration   7: 160.267 ops/ms
# Warmup Iteration   8: 148.129 ops/ms
# Warmup Iteration   9: 148.497 ops/ms
# Warmup Iteration  10: 161.270 ops/ms
# Warmup Iteration  11: 161.691 ops/ms
# Warmup Iteration  12: 160.858 ops/ms
# Warmup Iteration  13: 160.951 ops/ms
# Warmup Iteration  14: 160.781 ops/ms
# Warmup Iteration  15: 161.659 ops/ms
# Warmup Iteration  16: 160.843 ops/ms
# Warmup Iteration  17: 161.732 ops/ms
# Warmup Iteration  18: 161.338 ops/ms
# Warmup Iteration  19: 160.777 ops/ms
# Warmup Iteration  20: 161.275 ops/ms
Iteration   1: 161.345 ops/ms
Iteration   2: 161.760 ops/ms
Iteration   3: 161.542 ops/ms
Iteration   4: 160.655 ops/ms
Iteration   5: 161.436 ops/ms
Iteration   6: 161.142 ops/ms
Iteration   7: 161.374 ops/ms
Iteration   8: 161.178 ops/ms
Iteration   9: 161.240 ops/ms
Iteration  10: 160.620 ops/ms
Iteration  11: 160.814 ops/ms
Iteration  12: 160.370 ops/ms
Iteration  13: 161.194 ops/ms
Iteration  14: 160.657 ops/ms
Iteration  15: 161.316 ops/ms
Iteration  16: 161.791 ops/ms
Iteration  17: 161.016 ops/ms
Iteration  18: 161.123 ops/ms
Iteration  19: 161.684 ops/ms
Iteration  20: 161.836 ops/ms

Result : 161.205 ?(95%) 0.196 ?(99%) 0.269 ops/ms
  Statistics: (min, avg, max) = (160.370, 161.205, 161.836), stdev = 0.420
  Confidence intervals: 95% [161.008, 161.401], 99% [160.936, 161.473]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60590.954 ops/ms
# Warmup Iteration   2: 87347.829 ops/ms
# Warmup Iteration   3: 90536.925 ops/ms
# Warmup Iteration   4: 90276.985 ops/ms
# Warmup Iteration   5: 90960.189 ops/ms
# Warmup Iteration   6: 90004.142 ops/ms
# Warmup Iteration   7: 90745.287 ops/ms
# Warmup Iteration   8: 90166.033 ops/ms
# Warmup Iteration   9: 92779.880 ops/ms
# Warmup Iteration  10: 94284.014 ops/ms
# Warmup Iteration  11: 94631.994 ops/ms
# Warmup Iteration  12: 95049.614 ops/ms
# Warmup Iteration  13: 94555.078 ops/ms
# Warmup Iteration  14: 94484.409 ops/ms
# Warmup Iteration  15: 94940.480 ops/ms
# Warmup Iteration  16: 95118.453 ops/ms
# Warmup Iteration  17: 95153.509 ops/ms
# Warmup Iteration  18: 94918.184 ops/ms
# Warmup Iteration  19: 95209.979 ops/ms
# Warmup Iteration  20: 94865.707 ops/ms
Iteration   1: 94626.186 ops/ms
Iteration   2: 95055.084 ops/ms
Iteration   3: 94863.387 ops/ms
Iteration   4: 95098.573 ops/ms
Iteration   5: 94955.631 ops/ms
Iteration   6: 95009.911 ops/ms
Iteration   7: 95262.066 ops/ms
Iteration   8: 94832.635 ops/ms
Iteration   9: 94773.540 ops/ms
Iteration  10: 91192.758 ops/ms
Iteration  11: 94863.906 ops/ms
Iteration  12: 95209.031 ops/ms
Iteration  13: 94756.303 ops/ms
Iteration  14: 95256.689 ops/ms
Iteration  15: 93884.112 ops/ms
Iteration  16: 95253.129 ops/ms
Iteration  17: 95198.900 ops/ms
Iteration  18: 95047.297 ops/ms
Iteration  19: 92724.466 ops/ms
Iteration  20: 95389.984 ops/ms

Result : 94662.679 ?(95%) 473.023 ?(99%) 646.593 ops/ms
  Statistics: (min, avg, max) = (91192.758, 94662.679, 95389.984), stdev = 1010.713
  Confidence intervals: 95% [94189.656, 95135.702], 99% [94016.087, 95309.272]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 59202.615 ops/ms
# Warmup Iteration   2: 80460.280 ops/ms
# Warmup Iteration   3: 89160.731 ops/ms
# Warmup Iteration   4: 88332.231 ops/ms
# Warmup Iteration   5: 90663.404 ops/ms
# Warmup Iteration   6: 89871.963 ops/ms
# Warmup Iteration   7: 90721.209 ops/ms
# Warmup Iteration   8: 91242.556 ops/ms
# Warmup Iteration   9: 91594.997 ops/ms
# Warmup Iteration  10: 94604.260 ops/ms
# Warmup Iteration  11: 94578.302 ops/ms
# Warmup Iteration  12: 94757.420 ops/ms
# Warmup Iteration  13: 91906.322 ops/ms
# Warmup Iteration  14: 94170.916 ops/ms
# Warmup Iteration  15: 94795.447 ops/ms
# Warmup Iteration  16: 94646.253 ops/ms
# Warmup Iteration  17: 94431.662 ops/ms
# Warmup Iteration  18: 94618.681 ops/ms
# Warmup Iteration  19: 94275.656 ops/ms
# Warmup Iteration  20: 93394.272 ops/ms
Iteration   1: 92036.837 ops/ms
Iteration   2: 90771.921 ops/ms
Iteration   3: 95086.884 ops/ms
Iteration   4: 94581.011 ops/ms
Iteration   5: 94536.548 ops/ms
Iteration   6: 93660.905 ops/ms
Iteration   7: 93905.931 ops/ms
Iteration   8: 94276.235 ops/ms
Iteration   9: 94752.608 ops/ms
Iteration  10: 95276.864 ops/ms
Iteration  11: 95116.722 ops/ms
Iteration  12: 94885.016 ops/ms
Iteration  13: 95057.576 ops/ms
Iteration  14: 95192.334 ops/ms
Iteration  15: 94964.040 ops/ms
Iteration  16: 95201.312 ops/ms
Iteration  17: 95192.114 ops/ms
Iteration  18: 94285.739 ops/ms
Iteration  19: 95242.474 ops/ms
Iteration  20: 94472.087 ops/ms

Result : 94424.758 ?(95%) 537.725 ?(99%) 735.036 ops/ms
  Statistics: (min, avg, max) = (90771.921, 94424.758, 95276.864), stdev = 1148.963
  Confidence intervals: 95% [93887.033, 94962.483], 99% [93689.722, 95159.794]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60662.375 ops/ms
# Warmup Iteration   2: 87675.276 ops/ms
# Warmup Iteration   3: 90111.237 ops/ms
# Warmup Iteration   4: 88291.042 ops/ms
# Warmup Iteration   5: 86385.330 ops/ms
# Warmup Iteration   6: 90751.156 ops/ms
# Warmup Iteration   7: 91075.874 ops/ms
# Warmup Iteration   8: 90496.983 ops/ms
# Warmup Iteration   9: 92311.561 ops/ms
# Warmup Iteration  10: 94123.253 ops/ms
# Warmup Iteration  11: 94732.802 ops/ms
# Warmup Iteration  12: 94452.362 ops/ms
# Warmup Iteration  13: 94819.082 ops/ms
# Warmup Iteration  14: 94627.936 ops/ms
# Warmup Iteration  15: 94737.095 ops/ms
# Warmup Iteration  16: 94744.612 ops/ms
# Warmup Iteration  17: 94566.984 ops/ms
# Warmup Iteration  18: 94250.338 ops/ms
# Warmup Iteration  19: 95128.522 ops/ms
# Warmup Iteration  20: 94915.068 ops/ms
Iteration   1: 94477.196 ops/ms
Iteration   2: 95009.315 ops/ms
Iteration   3: 94305.828 ops/ms
Iteration   4: 94707.020 ops/ms
Iteration   5: 94400.475 ops/ms
Iteration   6: 95183.953 ops/ms
Iteration   7: 94650.454 ops/ms
Iteration   8: 94818.834 ops/ms
Iteration   9: 93753.519 ops/ms
Iteration  10: 95252.125 ops/ms
Iteration  11: 94604.267 ops/ms
Iteration  12: 94924.081 ops/ms
Iteration  13: 94999.833 ops/ms
Iteration  14: 94806.279 ops/ms
Iteration  15: 94662.155 ops/ms
Iteration  16: 94914.583 ops/ms
Iteration  17: 95129.725 ops/ms
Iteration  18: 94654.220 ops/ms
Iteration  19: 94996.700 ops/ms
Iteration  20: 92685.640 ops/ms

Result : 94646.810 ?(95%) 270.045 ?(99%) 369.134 ops/ms
  Statistics: (min, avg, max) = (92685.640, 94646.810, 95252.125), stdev = 577.007
  Confidence intervals: 95% [94376.766, 94916.855], 99% [94277.676, 95015.944]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60543.611 ops/ms
# Warmup Iteration   2: 87121.072 ops/ms
# Warmup Iteration   3: 90251.901 ops/ms
# Warmup Iteration   4: 90353.959 ops/ms
# Warmup Iteration   5: 90081.690 ops/ms
# Warmup Iteration   6: 90044.130 ops/ms
# Warmup Iteration   7: 90254.753 ops/ms
# Warmup Iteration   8: 90711.774 ops/ms
# Warmup Iteration   9: 92198.957 ops/ms
# Warmup Iteration  10: 94512.836 ops/ms
# Warmup Iteration  11: 94650.135 ops/ms
# Warmup Iteration  12: 94549.687 ops/ms
# Warmup Iteration  13: 94273.836 ops/ms
# Warmup Iteration  14: 93049.937 ops/ms
# Warmup Iteration  15: 94561.220 ops/ms
# Warmup Iteration  16: 94559.815 ops/ms
# Warmup Iteration  17: 94422.030 ops/ms
# Warmup Iteration  18: 94012.968 ops/ms
# Warmup Iteration  19: 94269.817 ops/ms
# Warmup Iteration  20: 94666.320 ops/ms
Iteration   1: 94452.806 ops/ms
Iteration   2: 94482.157 ops/ms
Iteration   3: 94308.599 ops/ms
Iteration   4: 94732.599 ops/ms
Iteration   5: 94027.278 ops/ms
Iteration   6: 94864.384 ops/ms
Iteration   7: 94320.138 ops/ms
Iteration   8: 94131.691 ops/ms
Iteration   9: 94328.595 ops/ms
Iteration  10: 94478.159 ops/ms
Iteration  11: 94568.105 ops/ms
Iteration  12: 94322.977 ops/ms
Iteration  13: 94230.819 ops/ms
Iteration  14: 94253.749 ops/ms
Iteration  15: 94697.651 ops/ms
Iteration  16: 94189.492 ops/ms
Iteration  17: 94600.193 ops/ms
Iteration  18: 94623.091 ops/ms
Iteration  19: 94115.444 ops/ms
Iteration  20: 94684.833 ops/ms

Result : 94420.638 ?(95%) 109.137 ?(99%) 149.183 ops/ms
  Statistics: (min, avg, max) = (94027.278, 94420.638, 94864.384), stdev = 233.194
  Confidence intervals: 95% [94311.501, 94529.775], 99% [94271.455, 94569.821]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61302.792 ops/ms
# Warmup Iteration   2: 87083.754 ops/ms
# Warmup Iteration   3: 90296.571 ops/ms
# Warmup Iteration   4: 89885.996 ops/ms
# Warmup Iteration   5: 90696.363 ops/ms
# Warmup Iteration   6: 91120.779 ops/ms
# Warmup Iteration   7: 90472.664 ops/ms
# Warmup Iteration   8: 90722.777 ops/ms
# Warmup Iteration   9: 92235.548 ops/ms
# Warmup Iteration  10: 95176.169 ops/ms
# Warmup Iteration  11: 94898.316 ops/ms
# Warmup Iteration  12: 94576.524 ops/ms
# Warmup Iteration  13: 95061.856 ops/ms
# Warmup Iteration  14: 94779.683 ops/ms
# Warmup Iteration  15: 95057.537 ops/ms
# Warmup Iteration  16: 95438.343 ops/ms
# Warmup Iteration  17: 95232.417 ops/ms
# Warmup Iteration  18: 95438.144 ops/ms
# Warmup Iteration  19: 95330.170 ops/ms
# Warmup Iteration  20: 95304.538 ops/ms
Iteration   1: 94911.827 ops/ms
Iteration   2: 95140.171 ops/ms
Iteration   3: 93356.189 ops/ms
Iteration   4: 94720.843 ops/ms
Iteration   5: 95229.740 ops/ms
Iteration   6: 95192.951 ops/ms
Iteration   7: 94858.326 ops/ms
Iteration   8: 95113.797 ops/ms
Iteration   9: 94830.779 ops/ms
Iteration  10: 94988.369 ops/ms
Iteration  11: 94873.936 ops/ms
Iteration  12: 95033.824 ops/ms
Iteration  13: 94975.391 ops/ms
Iteration  14: 95125.728 ops/ms
Iteration  15: 94575.724 ops/ms
Iteration  16: 94885.467 ops/ms
Iteration  17: 94923.817 ops/ms
Iteration  18: 94598.305 ops/ms
Iteration  19: 94925.387 ops/ms
Iteration  20: 94561.560 ops/ms

Result : 94841.107 ?(95%) 187.384 ?(99%) 256.142 ops/ms
  Statistics: (min, avg, max) = (93356.189, 94841.107, 95229.740), stdev = 400.386
  Confidence intervals: 95% [94653.723, 95028.491], 99% [94584.964, 95097.249]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.392 ops/ms
# Warmup Iteration   2: 30.294 ops/ms
# Warmup Iteration   3: 36.694 ops/ms
# Warmup Iteration   4: 40.363 ops/ms
# Warmup Iteration   5: 41.496 ops/ms
# Warmup Iteration   6: 41.858 ops/ms
# Warmup Iteration   7: 42.063 ops/ms
# Warmup Iteration   8: 41.915 ops/ms
# Warmup Iteration   9: 42.066 ops/ms
# Warmup Iteration  10: 42.289 ops/ms
# Warmup Iteration  11: 42.385 ops/ms
# Warmup Iteration  12: 42.384 ops/ms
# Warmup Iteration  13: 42.269 ops/ms
# Warmup Iteration  14: 42.480 ops/ms
# Warmup Iteration  15: 42.301 ops/ms
# Warmup Iteration  16: 42.448 ops/ms
# Warmup Iteration  17: 42.499 ops/ms
# Warmup Iteration  18: 42.510 ops/ms
# Warmup Iteration  19: 42.497 ops/ms
# Warmup Iteration  20: 42.394 ops/ms
Iteration   1: 42.365 ops/ms
Iteration   2: 42.562 ops/ms
Iteration   3: 42.513 ops/ms
Iteration   4: 42.499 ops/ms
Iteration   5: 42.462 ops/ms
Iteration   6: 42.555 ops/ms
Iteration   7: 42.418 ops/ms
Iteration   8: 42.371 ops/ms
Iteration   9: 42.360 ops/ms
Iteration  10: 42.550 ops/ms
Iteration  11: 42.512 ops/ms
Iteration  12: 42.433 ops/ms
Iteration  13: 42.365 ops/ms
Iteration  14: 42.520 ops/ms
Iteration  15: 42.307 ops/ms
Iteration  16: 42.532 ops/ms
Iteration  17: 42.412 ops/ms
Iteration  18: 42.266 ops/ms
Iteration  19: 42.533 ops/ms
Iteration  20: 42.312 ops/ms

Result : 42.442 ?(95%) 0.044 ?(99%) 0.060 ops/ms
  Statistics: (min, avg, max) = (42.266, 42.442, 42.562), stdev = 0.094
  Confidence intervals: 95% [42.399, 42.486], 99% [42.383, 42.502]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.431 ops/ms
# Warmup Iteration   2: 30.685 ops/ms
# Warmup Iteration   3: 37.568 ops/ms
# Warmup Iteration   4: 41.109 ops/ms
# Warmup Iteration   5: 42.305 ops/ms
# Warmup Iteration   6: 42.485 ops/ms
# Warmup Iteration   7: 42.693 ops/ms
# Warmup Iteration   8: 42.628 ops/ms
# Warmup Iteration   9: 42.809 ops/ms
# Warmup Iteration  10: 43.039 ops/ms
# Warmup Iteration  11: 42.909 ops/ms
# Warmup Iteration  12: 43.007 ops/ms
# Warmup Iteration  13: 42.975 ops/ms
# Warmup Iteration  14: 43.096 ops/ms
# Warmup Iteration  15: 42.909 ops/ms
# Warmup Iteration  16: 43.084 ops/ms
# Warmup Iteration  17: 42.588 ops/ms
# Warmup Iteration  18: 43.148 ops/ms
# Warmup Iteration  19: 42.970 ops/ms
# Warmup Iteration  20: 42.927 ops/ms
Iteration   1: 43.149 ops/ms
Iteration   2: 43.158 ops/ms
Iteration   3: 42.999 ops/ms
Iteration   4: 42.852 ops/ms
Iteration   5: 42.916 ops/ms
Iteration   6: 43.212 ops/ms
Iteration   7: 42.959 ops/ms
Iteration   8: 43.056 ops/ms
Iteration   9: 43.158 ops/ms
Iteration  10: 43.216 ops/ms
Iteration  11: 43.168 ops/ms
Iteration  12: 43.009 ops/ms
Iteration  13: 42.986 ops/ms
Iteration  14: 42.939 ops/ms
Iteration  15: 42.909 ops/ms
Iteration  16: 43.194 ops/ms
Iteration  17: 43.036 ops/ms
Iteration  18: 43.153 ops/ms
Iteration  19: 42.889 ops/ms
Iteration  20: 42.947 ops/ms

Result : 43.045 ?(95%) 0.056 ?(99%) 0.077 ops/ms
  Statistics: (min, avg, max) = (42.852, 43.045, 43.216), stdev = 0.120
  Confidence intervals: 95% [42.989, 43.102], 99% [42.968, 43.122]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.503 ops/ms
# Warmup Iteration   2: 31.230 ops/ms
# Warmup Iteration   3: 38.070 ops/ms
# Warmup Iteration   4: 41.931 ops/ms
# Warmup Iteration   5: 43.010 ops/ms
# Warmup Iteration   6: 43.527 ops/ms
# Warmup Iteration   7: 41.672 ops/ms
# Warmup Iteration   8: 41.455 ops/ms
# Warmup Iteration   9: 41.308 ops/ms
# Warmup Iteration  10: 43.717 ops/ms
# Warmup Iteration  11: 43.941 ops/ms
# Warmup Iteration  12: 44.019 ops/ms
# Warmup Iteration  13: 44.029 ops/ms
# Warmup Iteration  14: 44.109 ops/ms
# Warmup Iteration  15: 43.847 ops/ms
# Warmup Iteration  16: 43.877 ops/ms
# Warmup Iteration  17: 43.773 ops/ms
# Warmup Iteration  18: 43.858 ops/ms
# Warmup Iteration  19: 43.876 ops/ms
# Warmup Iteration  20: 43.928 ops/ms
Iteration   1: 43.886 ops/ms
Iteration   2: 44.054 ops/ms
Iteration   3: 44.039 ops/ms
Iteration   4: 43.988 ops/ms
Iteration   5: 44.117 ops/ms
Iteration   6: 44.005 ops/ms
Iteration   7: 43.898 ops/ms
Iteration   8: 43.991 ops/ms
Iteration   9: 43.850 ops/ms
Iteration  10: 44.086 ops/ms
Iteration  11: 43.932 ops/ms
Iteration  12: 43.804 ops/ms
Iteration  13: 43.822 ops/ms
Iteration  14: 43.791 ops/ms
Iteration  15: 44.053 ops/ms
Iteration  16: 43.919 ops/ms
Iteration  17: 43.829 ops/ms
Iteration  18: 43.907 ops/ms
Iteration  19: 43.830 ops/ms
Iteration  20: 44.091 ops/ms

Result : 43.945 ?(95%) 0.050 ?(99%) 0.068 ops/ms
  Statistics: (min, avg, max) = (43.791, 43.945, 44.117), stdev = 0.106
  Confidence intervals: 95% [43.895, 43.994], 99% [43.877, 44.012]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.674 ops/ms
# Warmup Iteration   2: 31.167 ops/ms
# Warmup Iteration   3: 37.959 ops/ms
# Warmup Iteration   4: 41.817 ops/ms
# Warmup Iteration   5: 42.956 ops/ms
# Warmup Iteration   6: 43.455 ops/ms
# Warmup Iteration   7: 43.509 ops/ms
# Warmup Iteration   8: 43.602 ops/ms
# Warmup Iteration   9: 43.633 ops/ms
# Warmup Iteration  10: 43.824 ops/ms
# Warmup Iteration  11: 43.944 ops/ms
# Warmup Iteration  12: 43.920 ops/ms
# Warmup Iteration  13: 43.989 ops/ms
# Warmup Iteration  14: 43.733 ops/ms
# Warmup Iteration  15: 43.895 ops/ms
# Warmup Iteration  16: 43.718 ops/ms
# Warmup Iteration  17: 43.735 ops/ms
# Warmup Iteration  18: 43.933 ops/ms
# Warmup Iteration  19: 43.976 ops/ms
# Warmup Iteration  20: 43.719 ops/ms
Iteration   1: 43.807 ops/ms
Iteration   2: 43.998 ops/ms
Iteration   3: 43.983 ops/ms
Iteration   4: 43.926 ops/ms
Iteration   5: 43.799 ops/ms
Iteration   6: 44.001 ops/ms
Iteration   7: 43.950 ops/ms
Iteration   8: 43.973 ops/ms
Iteration   9: 43.916 ops/ms
Iteration  10: 43.971 ops/ms
Iteration  11: 43.912 ops/ms
Iteration  12: 43.962 ops/ms
Iteration  13: 43.826 ops/ms
Iteration  14: 43.703 ops/ms
Iteration  15: 43.985 ops/ms
Iteration  16: 43.334 ops/ms
Iteration  17: 43.961 ops/ms
Iteration  18: 43.962 ops/ms
Iteration  19: 43.732 ops/ms
Iteration  20: 43.696 ops/ms

Result : 43.870 ?(95%) 0.076 ?(99%) 0.103 ops/ms
  Statistics: (min, avg, max) = (43.334, 43.870, 44.001), stdev = 0.161
  Confidence intervals: 95% [43.794, 43.945], 99% [43.767, 43.973]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.558 ops/ms
# Warmup Iteration   2: 30.463 ops/ms
# Warmup Iteration   3: 37.271 ops/ms
# Warmup Iteration   4: 41.114 ops/ms
# Warmup Iteration   5: 42.318 ops/ms
# Warmup Iteration   6: 42.473 ops/ms
# Warmup Iteration   7: 42.534 ops/ms
# Warmup Iteration   8: 42.684 ops/ms
# Warmup Iteration   9: 42.865 ops/ms
# Warmup Iteration  10: 42.956 ops/ms
# Warmup Iteration  11: 43.100 ops/ms
# Warmup Iteration  12: 43.065 ops/ms
# Warmup Iteration  13: 43.154 ops/ms
# Warmup Iteration  14: 43.101 ops/ms
# Warmup Iteration  15: 43.205 ops/ms
# Warmup Iteration  16: 43.123 ops/ms
# Warmup Iteration  17: 42.921 ops/ms
# Warmup Iteration  18: 42.962 ops/ms
# Warmup Iteration  19: 43.025 ops/ms
# Warmup Iteration  20: 43.133 ops/ms
Iteration   1: 43.182 ops/ms
Iteration   2: 42.936 ops/ms
Iteration   3: 43.195 ops/ms
Iteration   4: 43.136 ops/ms
Iteration   5: 42.972 ops/ms
Iteration   6: 43.151 ops/ms
Iteration   7: 43.209 ops/ms
Iteration   8: 42.914 ops/ms
Iteration   9: 43.189 ops/ms
Iteration  10: 43.175 ops/ms
Iteration  11: 43.189 ops/ms
Iteration  12: 43.097 ops/ms
Iteration  13: 43.219 ops/ms
Iteration  14: 43.205 ops/ms
Iteration  15: 42.981 ops/ms
Iteration  16: 43.032 ops/ms
Iteration  17: 43.209 ops/ms
Iteration  18: 43.213 ops/ms
Iteration  19: 42.917 ops/ms
Iteration  20: 43.164 ops/ms

Result : 43.114 ?(95%) 0.052 ?(99%) 0.071 ops/ms
  Statistics: (min, avg, max) = (42.914, 43.114, 43.219), stdev = 0.111
  Confidence intervals: 95% [43.062, 43.166], 99% [43.043, 43.185]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.634 ops/ms
# Warmup Iteration   2: 12.746 ops/ms
# Warmup Iteration   3: 15.800 ops/ms
# Warmup Iteration   4: 17.276 ops/ms
# Warmup Iteration   5: 17.590 ops/ms
# Warmup Iteration   6: 17.739 ops/ms
# Warmup Iteration   7: 17.796 ops/ms
# Warmup Iteration   8: 17.745 ops/ms
# Warmup Iteration   9: 17.905 ops/ms
# Warmup Iteration  10: 17.948 ops/ms
# Warmup Iteration  11: 17.876 ops/ms
# Warmup Iteration  12: 17.872 ops/ms
# Warmup Iteration  13: 17.932 ops/ms
# Warmup Iteration  14: 17.863 ops/ms
# Warmup Iteration  15: 17.932 ops/ms
# Warmup Iteration  16: 17.891 ops/ms
# Warmup Iteration  17: 17.941 ops/ms
# Warmup Iteration  18: 17.949 ops/ms
# Warmup Iteration  19: 17.954 ops/ms
# Warmup Iteration  20: 17.843 ops/ms
Iteration   1: 17.925 ops/ms
Iteration   2: 17.872 ops/ms
Iteration   3: 17.949 ops/ms
Iteration   4: 17.910 ops/ms
Iteration   5: 17.857 ops/ms
Iteration   6: 17.842 ops/ms
Iteration   7: 17.884 ops/ms
Iteration   8: 17.949 ops/ms
Iteration   9: 17.939 ops/ms
Iteration  10: 17.930 ops/ms
Iteration  11: 17.935 ops/ms
Iteration  12: 17.922 ops/ms
Iteration  13: 17.945 ops/ms
Iteration  14: 17.880 ops/ms
Iteration  15: 17.874 ops/ms
Iteration  16: 17.964 ops/ms
Iteration  17: 17.902 ops/ms
Iteration  18: 17.949 ops/ms
Iteration  19: 17.938 ops/ms
Iteration  20: 17.960 ops/ms

Result : 17.916 ?(95%) 0.017 ?(99%) 0.023 ops/ms
  Statistics: (min, avg, max) = (17.842, 17.916, 17.964), stdev = 0.036
  Confidence intervals: 95% [17.899, 17.933], 99% [17.893, 17.940]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.582 ops/ms
# Warmup Iteration   2: 12.716 ops/ms
# Warmup Iteration   3: 15.683 ops/ms
# Warmup Iteration   4: 17.138 ops/ms
# Warmup Iteration   5: 17.569 ops/ms
# Warmup Iteration   6: 17.663 ops/ms
# Warmup Iteration   7: 17.591 ops/ms
# Warmup Iteration   8: 17.716 ops/ms
# Warmup Iteration   9: 17.690 ops/ms
# Warmup Iteration  10: 17.824 ops/ms
# Warmup Iteration  11: 17.863 ops/ms
# Warmup Iteration  12: 17.845 ops/ms
# Warmup Iteration  13: 17.864 ops/ms
# Warmup Iteration  14: 17.816 ops/ms
# Warmup Iteration  15: 17.880 ops/ms
# Warmup Iteration  16: 17.746 ops/ms
# Warmup Iteration  17: 17.771 ops/ms
# Warmup Iteration  18: 17.904 ops/ms
# Warmup Iteration  19: 17.841 ops/ms
# Warmup Iteration  20: 17.808 ops/ms
Iteration   1: 17.814 ops/ms
Iteration   2: 17.870 ops/ms
Iteration   3: 17.888 ops/ms
Iteration   4: 17.905 ops/ms
Iteration   5: 17.810 ops/ms
Iteration   6: 17.776 ops/ms
Iteration   7: 17.801 ops/ms
Iteration   8: 17.839 ops/ms
Iteration   9: 17.903 ops/ms
Iteration  10: 17.902 ops/ms
Iteration  11: 17.787 ops/ms
Iteration  12: 17.801 ops/ms
Iteration  13: 17.889 ops/ms
Iteration  14: 17.848 ops/ms
Iteration  15: 17.854 ops/ms
Iteration  16: 17.819 ops/ms
Iteration  17: 17.809 ops/ms
Iteration  18: 17.906 ops/ms
Iteration  19: 17.844 ops/ms
Iteration  20: 17.879 ops/ms

Result : 17.847 ?(95%) 0.020 ?(99%) 0.028 ops/ms
  Statistics: (min, avg, max) = (17.776, 17.847, 17.906), stdev = 0.043
  Confidence intervals: 95% [17.827, 17.868], 99% [17.819, 17.875]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.648 ops/ms
# Warmup Iteration   2: 12.898 ops/ms
# Warmup Iteration   3: 15.846 ops/ms
# Warmup Iteration   4: 17.439 ops/ms
# Warmup Iteration   5: 17.774 ops/ms
# Warmup Iteration   6: 17.870 ops/ms
# Warmup Iteration   7: 17.934 ops/ms
# Warmup Iteration   8: 17.847 ops/ms
# Warmup Iteration   9: 17.926 ops/ms
# Warmup Iteration  10: 18.044 ops/ms
# Warmup Iteration  11: 18.052 ops/ms
# Warmup Iteration  12: 18.062 ops/ms
# Warmup Iteration  13: 17.975 ops/ms
# Warmup Iteration  14: 18.026 ops/ms
# Warmup Iteration  15: 18.088 ops/ms
# Warmup Iteration  16: 18.017 ops/ms
# Warmup Iteration  17: 18.026 ops/ms
# Warmup Iteration  18: 18.003 ops/ms
# Warmup Iteration  19: 18.034 ops/ms
# Warmup Iteration  20: 18.002 ops/ms
Iteration   1: 17.990 ops/ms
Iteration   2: 18.072 ops/ms
Iteration   3: 18.043 ops/ms
Iteration   4: 18.090 ops/ms
Iteration   5: 18.078 ops/ms
Iteration   6: 18.062 ops/ms
Iteration   7: 18.075 ops/ms
Iteration   8: 18.079 ops/ms
Iteration   9: 18.071 ops/ms
Iteration  10: 18.006 ops/ms
Iteration  11: 18.067 ops/ms
Iteration  12: 18.076 ops/ms
Iteration  13: 18.004 ops/ms
Iteration  14: 18.106 ops/ms
Iteration  15: 17.860 ops/ms
Iteration  16: 18.081 ops/ms
Iteration  17: 18.006 ops/ms
Iteration  18: 18.069 ops/ms
Iteration  19: 18.079 ops/ms
Iteration  20: 18.062 ops/ms

Result : 18.049 ?(95%) 0.026 ?(99%) 0.035 ops/ms
  Statistics: (min, avg, max) = (17.860, 18.049, 18.106), stdev = 0.055
  Confidence intervals: 95% [18.023, 18.074], 99% [18.014, 18.084]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.599 ops/ms
# Warmup Iteration   2: 12.558 ops/ms
# Warmup Iteration   3: 15.403 ops/ms
# Warmup Iteration   4: 16.830 ops/ms
# Warmup Iteration   5: 17.148 ops/ms
# Warmup Iteration   6: 17.227 ops/ms
# Warmup Iteration   7: 17.247 ops/ms
# Warmup Iteration   8: 17.313 ops/ms
# Warmup Iteration   9: 17.330 ops/ms
# Warmup Iteration  10: 17.370 ops/ms
# Warmup Iteration  11: 17.437 ops/ms
# Warmup Iteration  12: 17.409 ops/ms
# Warmup Iteration  13: 16.663 ops/ms
# Warmup Iteration  14: 16.234 ops/ms
# Warmup Iteration  15: 16.681 ops/ms
# Warmup Iteration  16: 17.447 ops/ms
# Warmup Iteration  17: 17.447 ops/ms
# Warmup Iteration  18: 17.442 ops/ms
# Warmup Iteration  19: 17.458 ops/ms
# Warmup Iteration  20: 17.368 ops/ms
Iteration   1: 17.455 ops/ms
Iteration   2: 17.439 ops/ms
Iteration   3: 17.370 ops/ms
Iteration   4: 17.445 ops/ms
Iteration   5: 17.472 ops/ms
Iteration   6: 17.434 ops/ms
Iteration   7: 17.389 ops/ms
Iteration   8: 17.397 ops/ms
Iteration   9: 17.464 ops/ms
Iteration  10: 17.437 ops/ms
Iteration  11: 17.396 ops/ms
Iteration  12: 17.472 ops/ms
Iteration  13: 17.265 ops/ms
Iteration  14: 17.407 ops/ms
Iteration  15: 17.489 ops/ms
Iteration  16: 17.414 ops/ms
Iteration  17: 17.478 ops/ms
Iteration  18: 17.415 ops/ms
Iteration  19: 17.420 ops/ms
Iteration  20: 17.442 ops/ms

Result : 17.425 ?(95%) 0.023 ?(99%) 0.032 ops/ms
  Statistics: (min, avg, max) = (17.265, 17.425, 17.489), stdev = 0.050
  Confidence intervals: 95% [17.402, 17.448], 99% [17.393, 17.457]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.731 ops/ms
# Warmup Iteration   2: 12.992 ops/ms
# Warmup Iteration   3: 16.029 ops/ms
# Warmup Iteration   4: 17.524 ops/ms
# Warmup Iteration   5: 17.831 ops/ms
# Warmup Iteration   6: 17.945 ops/ms
# Warmup Iteration   7: 17.837 ops/ms
# Warmup Iteration   8: 17.899 ops/ms
# Warmup Iteration   9: 18.002 ops/ms
# Warmup Iteration  10: 17.998 ops/ms
# Warmup Iteration  11: 18.068 ops/ms
# Warmup Iteration  12: 18.025 ops/ms
# Warmup Iteration  13: 18.077 ops/ms
# Warmup Iteration  14: 17.993 ops/ms
# Warmup Iteration  15: 18.069 ops/ms
# Warmup Iteration  16: 18.116 ops/ms
# Warmup Iteration  17: 18.111 ops/ms
# Warmup Iteration  18: 18.093 ops/ms
# Warmup Iteration  19: 18.125 ops/ms
# Warmup Iteration  20: 18.117 ops/ms
Iteration   1: 18.106 ops/ms
Iteration   2: 17.963 ops/ms
Iteration   3: 18.102 ops/ms
Iteration   4: 18.121 ops/ms
Iteration   5: 18.141 ops/ms
Iteration   6: 18.053 ops/ms
Iteration   7: 18.087 ops/ms
Iteration   8: 18.054 ops/ms
Iteration   9: 18.048 ops/ms
Iteration  10: 18.022 ops/ms
Iteration  11: 18.029 ops/ms
Iteration  12: 18.077 ops/ms
Iteration  13: 18.021 ops/ms
Iteration  14: 18.100 ops/ms
Iteration  15: 18.012 ops/ms
Iteration  16: 18.073 ops/ms
Iteration  17: 18.091 ops/ms
Iteration  18: 18.037 ops/ms
Iteration  19: 18.037 ops/ms
Iteration  20: 18.106 ops/ms

Result : 18.064 ?(95%) 0.021 ?(99%) 0.028 ops/ms
  Statistics: (min, avg, max) = (17.963, 18.064, 18.141), stdev = 0.044
  Confidence intervals: 95% [18.043, 18.084], 99% [18.036, 18.092]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.385 ops/ms
# Warmup Iteration   2: 62.286 ops/ms
# Warmup Iteration   3: 76.499 ops/ms
# Warmup Iteration   4: 82.726 ops/ms
# Warmup Iteration   5: 84.949 ops/ms
# Warmup Iteration   6: 85.398 ops/ms
# Warmup Iteration   7: 85.572 ops/ms
# Warmup Iteration   8: 85.713 ops/ms
# Warmup Iteration   9: 85.868 ops/ms
# Warmup Iteration  10: 86.154 ops/ms
# Warmup Iteration  11: 86.154 ops/ms
# Warmup Iteration  12: 86.328 ops/ms
# Warmup Iteration  13: 86.432 ops/ms
# Warmup Iteration  14: 86.461 ops/ms
# Warmup Iteration  15: 86.255 ops/ms
# Warmup Iteration  16: 86.521 ops/ms
# Warmup Iteration  17: 86.536 ops/ms
# Warmup Iteration  18: 86.450 ops/ms
# Warmup Iteration  19: 86.817 ops/ms
# Warmup Iteration  20: 86.868 ops/ms
Iteration   1: 86.881 ops/ms
Iteration   2: 86.546 ops/ms
Iteration   3: 86.499 ops/ms
Iteration   4: 86.784 ops/ms
Iteration   5: 86.855 ops/ms
Iteration   6: 86.774 ops/ms
Iteration   7: 86.871 ops/ms
Iteration   8: 86.749 ops/ms
Iteration   9: 86.772 ops/ms
Iteration  10: 86.864 ops/ms
Iteration  11: 86.528 ops/ms
Iteration  12: 86.672 ops/ms
Iteration  13: 86.889 ops/ms
Iteration  14: 86.911 ops/ms
Iteration  15: 86.814 ops/ms
Iteration  16: 86.838 ops/ms
Iteration  17: 86.928 ops/ms
Iteration  18: 86.571 ops/ms
Iteration  19: 86.438 ops/ms
Iteration  20: 86.505 ops/ms

Result : 86.734 ?(95%) 0.075 ?(99%) 0.103 ops/ms
  Statistics: (min, avg, max) = (86.438, 86.734, 86.928), stdev = 0.161
  Confidence intervals: 95% [86.659, 86.810], 99% [86.632, 86.837]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.923 ops/ms
# Warmup Iteration   2: 63.293 ops/ms
# Warmup Iteration   3: 76.399 ops/ms
# Warmup Iteration   4: 82.111 ops/ms
# Warmup Iteration   5: 83.864 ops/ms
# Warmup Iteration   6: 84.501 ops/ms
# Warmup Iteration   7: 84.706 ops/ms
# Warmup Iteration   8: 84.725 ops/ms
# Warmup Iteration   9: 84.986 ops/ms
# Warmup Iteration  10: 85.128 ops/ms
# Warmup Iteration  11: 84.648 ops/ms
# Warmup Iteration  12: 85.316 ops/ms
# Warmup Iteration  13: 85.246 ops/ms
# Warmup Iteration  14: 85.240 ops/ms
# Warmup Iteration  15: 85.447 ops/ms
# Warmup Iteration  16: 85.248 ops/ms
# Warmup Iteration  17: 85.260 ops/ms
# Warmup Iteration  18: 85.353 ops/ms
# Warmup Iteration  19: 85.317 ops/ms
# Warmup Iteration  20: 85.343 ops/ms
Iteration   1: 84.796 ops/ms
Iteration   2: 85.046 ops/ms
Iteration   3: 85.112 ops/ms
Iteration   4: 85.307 ops/ms
Iteration   5: 85.065 ops/ms
Iteration   6: 84.857 ops/ms
Iteration   7: 85.428 ops/ms
Iteration   8: 85.360 ops/ms
Iteration   9: 85.316 ops/ms
Iteration  10: 85.424 ops/ms
Iteration  11: 85.066 ops/ms
Iteration  12: 85.345 ops/ms
Iteration  13: 85.157 ops/ms
Iteration  14: 85.380 ops/ms
Iteration  15: 85.455 ops/ms
Iteration  16: 84.764 ops/ms
Iteration  17: 84.839 ops/ms
Iteration  18: 85.451 ops/ms
Iteration  19: 85.202 ops/ms
Iteration  20: 85.413 ops/ms

Result : 85.189 ?(95%) 0.110 ?(99%) 0.150 ops/ms
  Statistics: (min, avg, max) = (84.764, 85.189, 85.455), stdev = 0.235
  Confidence intervals: 95% [85.079, 85.299], 99% [85.039, 85.339]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.534 ops/ms
# Warmup Iteration   2: 64.095 ops/ms
# Warmup Iteration   3: 77.884 ops/ms
# Warmup Iteration   4: 83.503 ops/ms
# Warmup Iteration   5: 85.032 ops/ms
# Warmup Iteration   6: 85.618 ops/ms
# Warmup Iteration   7: 85.404 ops/ms
# Warmup Iteration   8: 85.728 ops/ms
# Warmup Iteration   9: 85.843 ops/ms
# Warmup Iteration  10: 86.315 ops/ms
# Warmup Iteration  11: 86.638 ops/ms
# Warmup Iteration  12: 86.561 ops/ms
# Warmup Iteration  13: 86.701 ops/ms
# Warmup Iteration  14: 86.577 ops/ms
# Warmup Iteration  15: 86.212 ops/ms
# Warmup Iteration  16: 86.038 ops/ms
# Warmup Iteration  17: 86.686 ops/ms
# Warmup Iteration  18: 86.649 ops/ms
# Warmup Iteration  19: 86.576 ops/ms
# Warmup Iteration  20: 86.238 ops/ms
Iteration   1: 86.425 ops/ms
Iteration   2: 86.503 ops/ms
Iteration   3: 86.679 ops/ms
Iteration   4: 86.698 ops/ms
Iteration   5: 86.219 ops/ms
Iteration   6: 86.679 ops/ms
Iteration   7: 86.705 ops/ms
Iteration   8: 86.625 ops/ms
Iteration   9: 86.374 ops/ms
Iteration  10: 86.551 ops/ms
Iteration  11: 86.271 ops/ms
Iteration  12: 86.272 ops/ms
Iteration  13: 86.763 ops/ms
Iteration  14: 86.330 ops/ms
Iteration  15: 86.395 ops/ms
Iteration  16: 86.413 ops/ms
Iteration  17: 86.546 ops/ms
Iteration  18: 86.651 ops/ms
Iteration  19: 86.378 ops/ms
Iteration  20: 86.486 ops/ms

Result : 86.498 ?(95%) 0.078 ?(99%) 0.106 ops/ms
  Statistics: (min, avg, max) = (86.219, 86.498, 86.763), stdev = 0.166
  Confidence intervals: 95% [86.420, 86.576], 99% [86.392, 86.605]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.917 ops/ms
# Warmup Iteration   2: 63.413 ops/ms
# Warmup Iteration   3: 76.432 ops/ms
# Warmup Iteration   4: 82.103 ops/ms
# Warmup Iteration   5: 83.760 ops/ms
# Warmup Iteration   6: 84.203 ops/ms
# Warmup Iteration   7: 84.229 ops/ms
# Warmup Iteration   8: 84.509 ops/ms
# Warmup Iteration   9: 84.779 ops/ms
# Warmup Iteration  10: 85.220 ops/ms
# Warmup Iteration  11: 85.233 ops/ms
# Warmup Iteration  12: 85.382 ops/ms
# Warmup Iteration  13: 84.982 ops/ms
# Warmup Iteration  14: 85.126 ops/ms
# Warmup Iteration  15: 84.917 ops/ms
# Warmup Iteration  16: 85.455 ops/ms
# Warmup Iteration  17: 85.261 ops/ms
# Warmup Iteration  18: 85.527 ops/ms
# Warmup Iteration  19: 85.569 ops/ms
# Warmup Iteration  20: 85.547 ops/ms
Iteration   1: 85.081 ops/ms
Iteration   2: 85.292 ops/ms
Iteration   3: 85.264 ops/ms
Iteration   4: 85.326 ops/ms
Iteration   5: 84.584 ops/ms
Iteration   6: 85.180 ops/ms
Iteration   7: 85.212 ops/ms
Iteration   8: 85.431 ops/ms
Iteration   9: 85.577 ops/ms
Iteration  10: 85.099 ops/ms
Iteration  11: 85.045 ops/ms
Iteration  12: 85.570 ops/ms
Iteration  13: 85.221 ops/ms
Iteration  14: 85.568 ops/ms
Iteration  15: 85.157 ops/ms
Iteration  16: 85.551 ops/ms
Iteration  17: 85.536 ops/ms
Iteration  18: 85.108 ops/ms
Iteration  19: 85.228 ops/ms
Iteration  20: 85.223 ops/ms

Result : 85.263 ?(95%) 0.112 ?(99%) 0.154 ops/ms
  Statistics: (min, avg, max) = (84.584, 85.263, 85.577), stdev = 0.240
  Confidence intervals: 95% [85.150, 85.375], 99% [85.109, 85.416]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.517 ops/ms
# Warmup Iteration   2: 62.509 ops/ms
# Warmup Iteration   3: 75.841 ops/ms
# Warmup Iteration   4: 81.630 ops/ms
# Warmup Iteration   5: 83.181 ops/ms
# Warmup Iteration   6: 83.866 ops/ms
# Warmup Iteration   7: 83.803 ops/ms
# Warmup Iteration   8: 83.877 ops/ms
# Warmup Iteration   9: 83.921 ops/ms
# Warmup Iteration  10: 84.383 ops/ms
# Warmup Iteration  11: 84.441 ops/ms
# Warmup Iteration  12: 84.568 ops/ms
# Warmup Iteration  13: 84.349 ops/ms
# Warmup Iteration  14: 84.341 ops/ms
# Warmup Iteration  15: 84.467 ops/ms
# Warmup Iteration  16: 84.665 ops/ms
# Warmup Iteration  17: 84.604 ops/ms
# Warmup Iteration  18: 84.490 ops/ms
# Warmup Iteration  19: 82.724 ops/ms
# Warmup Iteration  20: 80.009 ops/ms
Iteration   1: 79.903 ops/ms
Iteration   2: 84.477 ops/ms
Iteration   3: 84.373 ops/ms
Iteration   4: 84.301 ops/ms
Iteration   5: 84.622 ops/ms
Iteration   6: 84.922 ops/ms
Iteration   7: 84.496 ops/ms
Iteration   8: 84.473 ops/ms
Iteration   9: 84.540 ops/ms
Iteration  10: 84.710 ops/ms
Iteration  11: 84.864 ops/ms
Iteration  12: 84.707 ops/ms
Iteration  13: 84.501 ops/ms
Iteration  14: 84.731 ops/ms
Iteration  15: 84.802 ops/ms
Iteration  16: 84.058 ops/ms
Iteration  17: 84.532 ops/ms
Iteration  18: 84.387 ops/ms
Iteration  19: 84.427 ops/ms
Iteration  20: 84.695 ops/ms

Result : 84.326 ?(95%) 0.497 ?(99%) 0.679 ops/ms
  Statistics: (min, avg, max) = (79.903, 84.326, 84.922), stdev = 1.061
  Confidence intervals: 95% [83.830, 84.823], 99% [83.647, 85.005]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35702.222 ops/ms
# Warmup Iteration   2: 47342.814 ops/ms
# Warmup Iteration   3: 53318.520 ops/ms
# Warmup Iteration   4: 53104.698 ops/ms
# Warmup Iteration   5: 52773.851 ops/ms
# Warmup Iteration   6: 53085.589 ops/ms
# Warmup Iteration   7: 53097.814 ops/ms
# Warmup Iteration   8: 53042.303 ops/ms
# Warmup Iteration   9: 54022.617 ops/ms
# Warmup Iteration  10: 54577.424 ops/ms
# Warmup Iteration  11: 54579.472 ops/ms
# Warmup Iteration  12: 54118.367 ops/ms
# Warmup Iteration  13: 54530.742 ops/ms
# Warmup Iteration  14: 54278.857 ops/ms
# Warmup Iteration  15: 54481.210 ops/ms
# Warmup Iteration  16: 54314.256 ops/ms
# Warmup Iteration  17: 54489.617 ops/ms
# Warmup Iteration  18: 54604.125 ops/ms
# Warmup Iteration  19: 54611.523 ops/ms
# Warmup Iteration  20: 54573.426 ops/ms
Iteration   1: 54452.999 ops/ms
Iteration   2: 54522.458 ops/ms
Iteration   3: 54193.073 ops/ms
Iteration   4: 54476.950 ops/ms
Iteration   5: 54437.959 ops/ms
Iteration   6: 54544.528 ops/ms
Iteration   7: 54476.631 ops/ms
Iteration   8: 53969.544 ops/ms
Iteration   9: 54548.651 ops/ms
Iteration  10: 54125.634 ops/ms
Iteration  11: 54533.238 ops/ms
Iteration  12: 54148.475 ops/ms
Iteration  13: 54442.417 ops/ms
Iteration  14: 54274.424 ops/ms
Iteration  15: 54506.289 ops/ms
Iteration  16: 54587.318 ops/ms
Iteration  17: 54618.823 ops/ms
Iteration  18: 54102.921 ops/ms
Iteration  19: 54234.097 ops/ms
Iteration  20: 54438.966 ops/ms

Result : 54381.770 ?(95%) 88.598 ?(99%) 121.108 ops/ms
  Statistics: (min, avg, max) = (53969.544, 54381.770, 54618.823), stdev = 189.309
  Confidence intervals: 95% [54293.172, 54470.368], 99% [54260.662, 54502.878]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35530.147 ops/ms
# Warmup Iteration   2: 47431.027 ops/ms
# Warmup Iteration   3: 52561.633 ops/ms
# Warmup Iteration   4: 52619.928 ops/ms
# Warmup Iteration   5: 52534.996 ops/ms
# Warmup Iteration   6: 52417.302 ops/ms
# Warmup Iteration   7: 52482.751 ops/ms
# Warmup Iteration   8: 52488.811 ops/ms
# Warmup Iteration   9: 53013.478 ops/ms
# Warmup Iteration  10: 53933.021 ops/ms
# Warmup Iteration  11: 54040.933 ops/ms
# Warmup Iteration  12: 53942.590 ops/ms
# Warmup Iteration  13: 53773.392 ops/ms
# Warmup Iteration  14: 53993.559 ops/ms
# Warmup Iteration  15: 53818.555 ops/ms
# Warmup Iteration  16: 53883.119 ops/ms
# Warmup Iteration  17: 52938.984 ops/ms
# Warmup Iteration  18: 54037.778 ops/ms
# Warmup Iteration  19: 53702.006 ops/ms
# Warmup Iteration  20: 53897.295 ops/ms
Iteration   1: 53564.407 ops/ms
Iteration   2: 53931.542 ops/ms
Iteration   3: 53647.416 ops/ms
Iteration   4: 53699.367 ops/ms
Iteration   5: 53684.214 ops/ms
Iteration   6: 53807.057 ops/ms
Iteration   7: 53851.157 ops/ms
Iteration   8: 53952.879 ops/ms
Iteration   9: 53967.149 ops/ms
Iteration  10: 54017.736 ops/ms
Iteration  11: 53789.864 ops/ms
Iteration  12: 53823.622 ops/ms
Iteration  13: 53581.433 ops/ms
Iteration  14: 54032.937 ops/ms
Iteration  15: 54002.407 ops/ms
Iteration  16: 53957.935 ops/ms
Iteration  17: 53866.065 ops/ms
Iteration  18: 53756.995 ops/ms
Iteration  19: 54031.436 ops/ms
Iteration  20: 53775.489 ops/ms

Result : 53837.055 ?(95%) 69.792 ?(99%) 95.401 ops/ms
  Statistics: (min, avg, max) = (53564.407, 53837.055, 54032.937), stdev = 149.125
  Confidence intervals: 95% [53767.263, 53906.847], 99% [53741.654, 53932.457]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35798.982 ops/ms
# Warmup Iteration   2: 49403.302 ops/ms
# Warmup Iteration   3: 52404.042 ops/ms
# Warmup Iteration   4: 52480.399 ops/ms
# Warmup Iteration   5: 52418.582 ops/ms
# Warmup Iteration   6: 52207.007 ops/ms
# Warmup Iteration   7: 52328.903 ops/ms
# Warmup Iteration   8: 52526.997 ops/ms
# Warmup Iteration   9: 52853.886 ops/ms
# Warmup Iteration  10: 53824.173 ops/ms
# Warmup Iteration  11: 53713.211 ops/ms
# Warmup Iteration  12: 53519.467 ops/ms
# Warmup Iteration  13: 53767.334 ops/ms
# Warmup Iteration  14: 53556.071 ops/ms
# Warmup Iteration  15: 53561.956 ops/ms
# Warmup Iteration  16: 53755.742 ops/ms
# Warmup Iteration  17: 53749.449 ops/ms
# Warmup Iteration  18: 53336.125 ops/ms
# Warmup Iteration  19: 53601.267 ops/ms
# Warmup Iteration  20: 53624.143 ops/ms
Iteration   1: 53644.770 ops/ms
Iteration   2: 53609.970 ops/ms
Iteration   3: 53590.914 ops/ms
Iteration   4: 53593.918 ops/ms
Iteration   5: 53565.223 ops/ms
Iteration   6: 53341.039 ops/ms
Iteration   7: 53240.241 ops/ms
Iteration   8: 53713.779 ops/ms
Iteration   9: 53551.386 ops/ms
Iteration  10: 53401.433 ops/ms
Iteration  11: 53772.075 ops/ms
Iteration  12: 53319.572 ops/ms
Iteration  13: 53508.808 ops/ms
Iteration  14: 53794.774 ops/ms
Iteration  15: 53673.779 ops/ms
Iteration  16: 53265.612 ops/ms
Iteration  17: 53545.374 ops/ms
Iteration  18: 53662.539 ops/ms
Iteration  19: 53410.588 ops/ms
Iteration  20: 53546.563 ops/ms

Result : 53537.618 ?(95%) 75.481 ?(99%) 103.177 ops/ms
  Statistics: (min, avg, max) = (53240.241, 53537.618, 53794.774), stdev = 161.280
  Confidence intervals: 95% [53462.137, 53613.099], 99% [53434.440, 53640.795]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35629.320 ops/ms
# Warmup Iteration   2: 49531.051 ops/ms
# Warmup Iteration   3: 52824.055 ops/ms
# Warmup Iteration   4: 53171.853 ops/ms
# Warmup Iteration   5: 53073.954 ops/ms
# Warmup Iteration   6: 52712.791 ops/ms
# Warmup Iteration   7: 52900.712 ops/ms
# Warmup Iteration   8: 53074.781 ops/ms
# Warmup Iteration   9: 54002.972 ops/ms
# Warmup Iteration  10: 54521.324 ops/ms
# Warmup Iteration  11: 54682.381 ops/ms
# Warmup Iteration  12: 54498.526 ops/ms
# Warmup Iteration  13: 54601.207 ops/ms
# Warmup Iteration  14: 54753.967 ops/ms
# Warmup Iteration  15: 54701.178 ops/ms
# Warmup Iteration  16: 54550.159 ops/ms
# Warmup Iteration  17: 54689.427 ops/ms
# Warmup Iteration  18: 54691.615 ops/ms
# Warmup Iteration  19: 54844.702 ops/ms
# Warmup Iteration  20: 54732.043 ops/ms
Iteration   1: 54482.281 ops/ms
Iteration   2: 54774.264 ops/ms
Iteration   3: 54422.681 ops/ms
Iteration   4: 54710.969 ops/ms
Iteration   5: 54640.951 ops/ms
Iteration   6: 54489.257 ops/ms
Iteration   7: 54391.741 ops/ms
Iteration   8: 54751.760 ops/ms
Iteration   9: 54843.032 ops/ms
Iteration  10: 54719.565 ops/ms
Iteration  11: 54096.899 ops/ms
Iteration  12: 51775.982 ops/ms
Iteration  13: 54463.661 ops/ms
Iteration  14: 54607.948 ops/ms
Iteration  15: 54501.512 ops/ms
Iteration  16: 54586.039 ops/ms
Iteration  17: 54774.890 ops/ms
Iteration  18: 54496.286 ops/ms
Iteration  19: 54512.040 ops/ms
Iteration  20: 54733.999 ops/ms

Result : 54438.788 ?(95%) 304.550 ?(99%) 416.301 ops/ms
  Statistics: (min, avg, max) = (51775.982, 54438.788, 54843.032), stdev = 650.735
  Confidence intervals: 95% [54134.238, 54743.338], 99% [54022.487, 54855.089]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35550.991 ops/ms
# Warmup Iteration   2: 47240.222 ops/ms
# Warmup Iteration   3: 52950.180 ops/ms
# Warmup Iteration   4: 52990.757 ops/ms
# Warmup Iteration   5: 52908.616 ops/ms
# Warmup Iteration   6: 53224.801 ops/ms
# Warmup Iteration   7: 53209.207 ops/ms
# Warmup Iteration   8: 53405.311 ops/ms
# Warmup Iteration   9: 53782.076 ops/ms
# Warmup Iteration  10: 54490.160 ops/ms
# Warmup Iteration  11: 54714.075 ops/ms
# Warmup Iteration  12: 54599.072 ops/ms
# Warmup Iteration  13: 54415.406 ops/ms
# Warmup Iteration  14: 54564.254 ops/ms
# Warmup Iteration  15: 54528.922 ops/ms
# Warmup Iteration  16: 54389.668 ops/ms
# Warmup Iteration  17: 54408.727 ops/ms
# Warmup Iteration  18: 54651.039 ops/ms
# Warmup Iteration  19: 54471.981 ops/ms
# Warmup Iteration  20: 54562.001 ops/ms
Iteration   1: 54436.760 ops/ms
Iteration   2: 54257.316 ops/ms
Iteration   3: 54357.101 ops/ms
Iteration   4: 54315.921 ops/ms
Iteration   5: 54283.406 ops/ms
Iteration   6: 54523.315 ops/ms
Iteration   7: 54553.948 ops/ms
Iteration   8: 54403.555 ops/ms
Iteration   9: 54632.159 ops/ms
Iteration  10: 54243.437 ops/ms
Iteration  11: 54622.148 ops/ms
Iteration  12: 54470.865 ops/ms
Iteration  13: 54582.835 ops/ms
Iteration  14: 54306.102 ops/ms
Iteration  15: 54376.567 ops/ms
Iteration  16: 54507.787 ops/ms
Iteration  17: 54515.769 ops/ms
Iteration  18: 54594.791 ops/ms
Iteration  19: 54549.220 ops/ms
Iteration  20: 54265.998 ops/ms

Result : 54439.950 ?(95%) 61.676 ?(99%) 84.308 ops/ms
  Statistics: (min, avg, max) = (54243.437, 54439.950, 54632.159), stdev = 131.785
  Confidence intervals: 95% [54378.274, 54501.626], 99% [54355.642, 54524.258]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 449.082 ops/ms
# Warmup Iteration   2: 663.934 ops/ms
# Warmup Iteration   3: 693.751 ops/ms
# Warmup Iteration   4: 697.342 ops/ms
# Warmup Iteration   5: 697.208 ops/ms
# Warmup Iteration   6: 698.621 ops/ms
# Warmup Iteration   7: 636.274 ops/ms
# Warmup Iteration   8: 675.198 ops/ms
# Warmup Iteration   9: 698.900 ops/ms
# Warmup Iteration  10: 703.150 ops/ms
# Warmup Iteration  11: 700.853 ops/ms
# Warmup Iteration  12: 703.026 ops/ms
# Warmup Iteration  13: 702.882 ops/ms
# Warmup Iteration  14: 701.773 ops/ms
# Warmup Iteration  15: 703.520 ops/ms
# Warmup Iteration  16: 699.287 ops/ms
# Warmup Iteration  17: 696.569 ops/ms
# Warmup Iteration  18: 697.608 ops/ms
# Warmup Iteration  19: 700.671 ops/ms
# Warmup Iteration  20: 699.648 ops/ms
Iteration   1: 697.807 ops/ms
Iteration   2: 697.092 ops/ms
Iteration   3: 697.498 ops/ms
Iteration   4: 698.553 ops/ms
Iteration   5: 684.401 ops/ms
Iteration   6: 650.447 ops/ms
Iteration   7: 657.437 ops/ms
Iteration   8: 684.499 ops/ms
Iteration   9: 686.921 ops/ms
Iteration  10: 696.107 ops/ms
Iteration  11: 698.580 ops/ms
Iteration  12: 697.085 ops/ms
Iteration  13: 696.235 ops/ms
Iteration  14: 697.992 ops/ms
Iteration  15: 699.294 ops/ms
Iteration  16: 699.802 ops/ms
Iteration  17: 697.517 ops/ms
Iteration  18: 697.747 ops/ms
Iteration  19: 699.952 ops/ms
Iteration  20: 697.325 ops/ms

Result : 691.615 ?(95%) 6.442 ?(99%) 8.806 ops/ms
  Statistics: (min, avg, max) = (650.447, 691.615, 699.952), stdev = 13.765
  Confidence intervals: 95% [685.173, 698.057], 99% [682.809, 700.420]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 449.176 ops/ms
# Warmup Iteration   2: 664.282 ops/ms
# Warmup Iteration   3: 691.024 ops/ms
# Warmup Iteration   4: 692.187 ops/ms
# Warmup Iteration   5: 687.521 ops/ms
# Warmup Iteration   6: 691.724 ops/ms
# Warmup Iteration   7: 632.186 ops/ms
# Warmup Iteration   8: 673.151 ops/ms
# Warmup Iteration   9: 695.360 ops/ms
# Warmup Iteration  10: 696.225 ops/ms
# Warmup Iteration  11: 697.241 ops/ms
# Warmup Iteration  12: 698.918 ops/ms
# Warmup Iteration  13: 698.266 ops/ms
# Warmup Iteration  14: 698.822 ops/ms
# Warmup Iteration  15: 700.123 ops/ms
# Warmup Iteration  16: 698.636 ops/ms
# Warmup Iteration  17: 694.590 ops/ms
# Warmup Iteration  18: 694.630 ops/ms
# Warmup Iteration  19: 697.936 ops/ms
# Warmup Iteration  20: 698.316 ops/ms
Iteration   1: 693.991 ops/ms
Iteration   2: 696.681 ops/ms
Iteration   3: 695.172 ops/ms
Iteration   4: 696.498 ops/ms
Iteration   5: 697.864 ops/ms
Iteration   6: 696.699 ops/ms
Iteration   7: 695.583 ops/ms
Iteration   8: 695.522 ops/ms
Iteration   9: 697.646 ops/ms
Iteration  10: 697.300 ops/ms
Iteration  11: 695.488 ops/ms
Iteration  12: 695.798 ops/ms
Iteration  13: 697.991 ops/ms
Iteration  14: 692.072 ops/ms
Iteration  15: 695.629 ops/ms
Iteration  16: 698.341 ops/ms
Iteration  17: 697.405 ops/ms
Iteration  18: 698.154 ops/ms
Iteration  19: 696.211 ops/ms
Iteration  20: 698.200 ops/ms

Result : 696.412 ?(95%) 0.741 ?(99%) 1.013 ops/ms
  Statistics: (min, avg, max) = (692.072, 696.412, 698.341), stdev = 1.583
  Confidence intervals: 95% [695.672, 697.153], 99% [695.400, 697.425]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 446.082 ops/ms
# Warmup Iteration   2: 663.589 ops/ms
# Warmup Iteration   3: 692.717 ops/ms
# Warmup Iteration   4: 692.548 ops/ms
# Warmup Iteration   5: 693.020 ops/ms
# Warmup Iteration   6: 692.060 ops/ms
# Warmup Iteration   7: 633.690 ops/ms
# Warmup Iteration   8: 674.984 ops/ms
# Warmup Iteration   9: 694.015 ops/ms
# Warmup Iteration  10: 700.700 ops/ms
# Warmup Iteration  11: 697.007 ops/ms
# Warmup Iteration  12: 699.726 ops/ms
# Warmup Iteration  13: 697.943 ops/ms
# Warmup Iteration  14: 697.774 ops/ms
# Warmup Iteration  15: 699.740 ops/ms
# Warmup Iteration  16: 700.024 ops/ms
# Warmup Iteration  17: 698.374 ops/ms
# Warmup Iteration  18: 700.598 ops/ms
# Warmup Iteration  19: 697.307 ops/ms
# Warmup Iteration  20: 700.586 ops/ms
Iteration   1: 697.126 ops/ms
Iteration   2: 699.959 ops/ms
Iteration   3: 698.214 ops/ms
Iteration   4: 699.690 ops/ms
Iteration   5: 700.191 ops/ms
Iteration   6: 697.460 ops/ms
Iteration   7: 697.794 ops/ms
Iteration   8: 700.946 ops/ms
Iteration   9: 697.364 ops/ms
Iteration  10: 697.465 ops/ms
Iteration  11: 697.902 ops/ms
Iteration  12: 695.963 ops/ms
Iteration  13: 700.363 ops/ms
Iteration  14: 699.451 ops/ms
Iteration  15: 700.008 ops/ms
Iteration  16: 699.949 ops/ms
Iteration  17: 699.561 ops/ms
Iteration  18: 697.135 ops/ms
Iteration  19: 697.872 ops/ms
Iteration  20: 698.140 ops/ms

Result : 698.628 ?(95%) 0.653 ?(99%) 0.893 ops/ms
  Statistics: (min, avg, max) = (695.963, 698.628, 700.946), stdev = 1.396
  Confidence intervals: 95% [697.974, 699.281], 99% [697.735, 699.521]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 442.855 ops/ms
# Warmup Iteration   2: 651.436 ops/ms
# Warmup Iteration   3: 688.671 ops/ms
# Warmup Iteration   4: 685.266 ops/ms
# Warmup Iteration   5: 686.522 ops/ms
# Warmup Iteration   6: 685.791 ops/ms
# Warmup Iteration   7: 626.939 ops/ms
# Warmup Iteration   8: 665.827 ops/ms
# Warmup Iteration   9: 682.234 ops/ms
# Warmup Iteration  10: 693.205 ops/ms
# Warmup Iteration  11: 690.912 ops/ms
# Warmup Iteration  12: 690.751 ops/ms
# Warmup Iteration  13: 689.307 ops/ms
# Warmup Iteration  14: 690.488 ops/ms
# Warmup Iteration  15: 690.245 ops/ms
# Warmup Iteration  16: 691.402 ops/ms
# Warmup Iteration  17: 688.653 ops/ms
# Warmup Iteration  18: 687.593 ops/ms
# Warmup Iteration  19: 688.958 ops/ms
# Warmup Iteration  20: 690.739 ops/ms
Iteration   1: 688.195 ops/ms
Iteration   2: 687.781 ops/ms
Iteration   3: 689.841 ops/ms
Iteration   4: 688.807 ops/ms
Iteration   5: 688.780 ops/ms
Iteration   6: 691.069 ops/ms
Iteration   7: 688.530 ops/ms
Iteration   8: 688.248 ops/ms
Iteration   9: 691.131 ops/ms
Iteration  10: 689.924 ops/ms
Iteration  11: 690.909 ops/ms
Iteration  12: 688.249 ops/ms
Iteration  13: 687.862 ops/ms
Iteration  14: 692.018 ops/ms
Iteration  15: 688.796 ops/ms
Iteration  16: 691.246 ops/ms
Iteration  17: 690.370 ops/ms
Iteration  18: 688.146 ops/ms
Iteration  19: 687.863 ops/ms
Iteration  20: 688.966 ops/ms

Result : 689.337 ?(95%) 0.633 ?(99%) 0.865 ops/ms
  Statistics: (min, avg, max) = (687.781, 689.337, 692.018), stdev = 1.352
  Confidence intervals: 95% [688.704, 689.969], 99% [688.472, 690.201]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 446.877 ops/ms
# Warmup Iteration   2: 661.925 ops/ms
# Warmup Iteration   3: 696.448 ops/ms
# Warmup Iteration   4: 692.339 ops/ms
# Warmup Iteration   5: 694.308 ops/ms
# Warmup Iteration   6: 693.914 ops/ms
# Warmup Iteration   7: 635.401 ops/ms
# Warmup Iteration   8: 674.945 ops/ms
# Warmup Iteration   9: 696.659 ops/ms
# Warmup Iteration  10: 700.378 ops/ms
# Warmup Iteration  11: 702.175 ops/ms
# Warmup Iteration  12: 701.576 ops/ms
# Warmup Iteration  13: 700.937 ops/ms
# Warmup Iteration  14: 702.299 ops/ms
# Warmup Iteration  15: 699.090 ops/ms
# Warmup Iteration  16: 700.593 ops/ms
# Warmup Iteration  17: 698.440 ops/ms
# Warmup Iteration  18: 698.560 ops/ms
# Warmup Iteration  19: 696.233 ops/ms
# Warmup Iteration  20: 697.265 ops/ms
Iteration   1: 694.492 ops/ms
Iteration   2: 698.227 ops/ms
Iteration   3: 696.481 ops/ms
Iteration   4: 696.547 ops/ms
Iteration   5: 699.490 ops/ms
Iteration   6: 699.378 ops/ms
Iteration   7: 696.356 ops/ms
Iteration   8: 699.701 ops/ms
Iteration   9: 696.845 ops/ms
Iteration  10: 696.696 ops/ms
Iteration  11: 697.802 ops/ms
Iteration  12: 697.558 ops/ms
Iteration  13: 697.481 ops/ms
Iteration  14: 698.997 ops/ms
Iteration  15: 697.814 ops/ms
Iteration  16: 697.632 ops/ms
Iteration  17: 699.851 ops/ms
Iteration  18: 697.306 ops/ms
Iteration  19: 696.212 ops/ms
Iteration  20: 700.073 ops/ms

Result : 697.747 ?(95%) 0.690 ?(99%) 0.943 ops/ms
  Statistics: (min, avg, max) = (694.492, 697.747, 700.073), stdev = 1.475
  Confidence intervals: 95% [697.057, 698.437], 99% [696.804, 698.690]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3053.661 ops/ms
# Warmup Iteration   2: 3659.186 ops/ms
# Warmup Iteration   3: 3788.820 ops/ms
# Warmup Iteration   4: 3792.987 ops/ms
# Warmup Iteration   5: 3790.680 ops/ms
# Warmup Iteration   6: 3787.774 ops/ms
# Warmup Iteration   7: 3801.661 ops/ms
# Warmup Iteration   8: 3815.206 ops/ms
# Warmup Iteration   9: 3810.150 ops/ms
# Warmup Iteration  10: 3826.846 ops/ms
# Warmup Iteration  11: 3829.973 ops/ms
# Warmup Iteration  12: 3827.834 ops/ms
# Warmup Iteration  13: 3838.595 ops/ms
# Warmup Iteration  14: 3830.576 ops/ms
# Warmup Iteration  15: 3810.777 ops/ms
# Warmup Iteration  16: 3828.568 ops/ms
# Warmup Iteration  17: 3830.044 ops/ms
# Warmup Iteration  18: 3809.674 ops/ms
# Warmup Iteration  19: 3816.012 ops/ms
# Warmup Iteration  20: 3818.778 ops/ms
Iteration   1: 3824.307 ops/ms
Iteration   2: 3834.094 ops/ms
Iteration   3: 3808.713 ops/ms
Iteration   4: 3830.653 ops/ms
Iteration   5: 3829.885 ops/ms
Iteration   6: 3834.955 ops/ms
Iteration   7: 3812.670 ops/ms
Iteration   8: 3817.828 ops/ms
Iteration   9: 3831.760 ops/ms
Iteration  10: 3825.536 ops/ms
Iteration  11: 3817.818 ops/ms
Iteration  12: 3829.554 ops/ms
Iteration  13: 3824.858 ops/ms
Iteration  14: 3820.521 ops/ms
Iteration  15: 3810.692 ops/ms
Iteration  16: 3817.677 ops/ms
Iteration  17: 3808.646 ops/ms
Iteration  18: 3811.722 ops/ms
Iteration  19: 3823.421 ops/ms
Iteration  20: 3830.336 ops/ms

Result : 3822.282 ?(95%) 4.061 ?(99%) 5.551 ops/ms
  Statistics: (min, avg, max) = (3808.646, 3822.282, 3834.955), stdev = 8.677
  Confidence intervals: 95% [3818.221, 3826.343], 99% [3816.731, 3827.833]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3040.964 ops/ms
# Warmup Iteration   2: 3606.948 ops/ms
# Warmup Iteration   3: 3753.062 ops/ms
# Warmup Iteration   4: 3754.228 ops/ms
# Warmup Iteration   5: 3784.176 ops/ms
# Warmup Iteration   6: 3800.254 ops/ms
# Warmup Iteration   7: 3730.890 ops/ms
# Warmup Iteration   8: 3731.893 ops/ms
# Warmup Iteration   9: 3763.138 ops/ms
# Warmup Iteration  10: 3776.781 ops/ms
# Warmup Iteration  11: 3759.188 ops/ms
# Warmup Iteration  12: 3768.926 ops/ms
# Warmup Iteration  13: 3748.095 ops/ms
# Warmup Iteration  14: 3763.835 ops/ms
# Warmup Iteration  15: 3769.568 ops/ms
# Warmup Iteration  16: 3769.626 ops/ms
# Warmup Iteration  17: 3811.135 ops/ms
# Warmup Iteration  18: 3819.590 ops/ms
# Warmup Iteration  19: 3820.689 ops/ms
# Warmup Iteration  20: 3805.897 ops/ms
Iteration   1: 3824.156 ops/ms
Iteration   2: 3817.559 ops/ms
Iteration   3: 3816.088 ops/ms
Iteration   4: 3807.704 ops/ms
Iteration   5: 3821.024 ops/ms
Iteration   6: 3821.528 ops/ms
Iteration   7: 3812.480 ops/ms
Iteration   8: 3809.160 ops/ms
Iteration   9: 3803.089 ops/ms
Iteration  10: 3814.608 ops/ms
Iteration  11: 3772.396 ops/ms
Iteration  12: 3583.334 ops/ms
Iteration  13: 3567.437 ops/ms
Iteration  14: 3821.749 ops/ms
Iteration  15: 3802.728 ops/ms
Iteration  16: 3819.256 ops/ms
Iteration  17: 3799.002 ops/ms
Iteration  18: 3808.232 ops/ms
Iteration  19: 3800.214 ops/ms
Iteration  20: 3816.383 ops/ms

Result : 3786.906 ?(95%) 34.313 ?(99%) 46.903 ops/ms
  Statistics: (min, avg, max) = (3567.437, 3786.906, 3824.156), stdev = 73.316
  Confidence intervals: 95% [3752.594, 3821.219], 99% [3740.003, 3833.810]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3056.358 ops/ms
# Warmup Iteration   2: 3657.739 ops/ms
# Warmup Iteration   3: 3786.368 ops/ms
# Warmup Iteration   4: 3790.455 ops/ms
# Warmup Iteration   5: 3801.717 ops/ms
# Warmup Iteration   6: 3799.527 ops/ms
# Warmup Iteration   7: 3805.832 ops/ms
# Warmup Iteration   8: 3801.797 ops/ms
# Warmup Iteration   9: 3798.015 ops/ms
# Warmup Iteration  10: 3811.127 ops/ms
# Warmup Iteration  11: 3829.468 ops/ms
# Warmup Iteration  12: 3811.867 ops/ms
# Warmup Iteration  13: 3815.183 ops/ms
# Warmup Iteration  14: 3824.490 ops/ms
# Warmup Iteration  15: 3829.893 ops/ms
# Warmup Iteration  16: 3829.417 ops/ms
# Warmup Iteration  17: 3801.837 ops/ms
# Warmup Iteration  18: 3800.127 ops/ms
# Warmup Iteration  19: 3823.644 ops/ms
# Warmup Iteration  20: 3825.318 ops/ms
Iteration   1: 3802.488 ops/ms
Iteration   2: 3810.914 ops/ms
Iteration   3: 3806.819 ops/ms
Iteration   4: 3822.900 ops/ms
Iteration   5: 3810.415 ops/ms
Iteration   6: 3823.022 ops/ms
Iteration   7: 3823.499 ops/ms
Iteration   8: 3813.157 ops/ms
Iteration   9: 3810.690 ops/ms
Iteration  10: 3822.762 ops/ms
Iteration  11: 3806.962 ops/ms
Iteration  12: 3824.079 ops/ms
Iteration  13: 3807.945 ops/ms
Iteration  14: 3804.446 ops/ms
Iteration  15: 3805.665 ops/ms
Iteration  16: 3808.841 ops/ms
Iteration  17: 3797.559 ops/ms
Iteration  18: 3810.067 ops/ms
Iteration  19: 3805.606 ops/ms
Iteration  20: 3820.919 ops/ms

Result : 3811.938 ?(95%) 3.781 ?(99%) 5.168 ops/ms
  Statistics: (min, avg, max) = (3797.559, 3811.938, 3824.079), stdev = 8.078
  Confidence intervals: 95% [3808.157, 3815.719], 99% [3806.770, 3817.106]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3054.455 ops/ms
# Warmup Iteration   2: 3636.218 ops/ms
# Warmup Iteration   3: 3622.733 ops/ms
# Warmup Iteration   4: 3712.957 ops/ms
# Warmup Iteration   5: 3728.001 ops/ms
# Warmup Iteration   6: 3734.450 ops/ms
# Warmup Iteration   7: 3727.757 ops/ms
# Warmup Iteration   8: 3747.137 ops/ms
# Warmup Iteration   9: 3753.081 ops/ms
# Warmup Iteration  10: 3755.432 ops/ms
# Warmup Iteration  11: 3754.695 ops/ms
# Warmup Iteration  12: 3751.378 ops/ms
# Warmup Iteration  13: 3761.385 ops/ms
# Warmup Iteration  14: 3763.426 ops/ms
# Warmup Iteration  15: 3766.937 ops/ms
# Warmup Iteration  16: 3755.030 ops/ms
# Warmup Iteration  17: 3810.693 ops/ms
# Warmup Iteration  18: 3819.453 ops/ms
# Warmup Iteration  19: 3831.338 ops/ms
# Warmup Iteration  20: 3809.449 ops/ms
Iteration   1: 3795.768 ops/ms
Iteration   2: 3820.108 ops/ms
Iteration   3: 3828.929 ops/ms
Iteration   4: 3812.562 ops/ms
Iteration   5: 3817.894 ops/ms
Iteration   6: 3817.580 ops/ms
Iteration   7: 3825.278 ops/ms
Iteration   8: 3826.664 ops/ms
Iteration   9: 3823.265 ops/ms
Iteration  10: 3821.631 ops/ms
Iteration  11: 3813.085 ops/ms
Iteration  12: 3807.985 ops/ms
Iteration  13: 3820.542 ops/ms
Iteration  14: 3809.907 ops/ms
Iteration  15: 3822.819 ops/ms
Iteration  16: 3805.675 ops/ms
Iteration  17: 3820.298 ops/ms
Iteration  18: 3826.849 ops/ms
Iteration  19: 3813.852 ops/ms
Iteration  20: 3812.198 ops/ms

Result : 3817.144 ?(95%) 3.883 ?(99%) 5.308 ops/ms
  Statistics: (min, avg, max) = (3795.768, 3817.144, 3828.929), stdev = 8.298
  Confidence intervals: 95% [3813.261, 3821.028], 99% [3811.836, 3822.453]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3046.347 ops/ms
# Warmup Iteration   2: 3634.822 ops/ms
# Warmup Iteration   3: 3757.328 ops/ms
# Warmup Iteration   4: 3794.202 ops/ms
# Warmup Iteration   5: 3800.994 ops/ms
# Warmup Iteration   6: 3797.884 ops/ms
# Warmup Iteration   7: 3805.528 ops/ms
# Warmup Iteration   8: 3802.594 ops/ms
# Warmup Iteration   9: 3813.296 ops/ms
# Warmup Iteration  10: 3808.296 ops/ms
# Warmup Iteration  11: 3824.724 ops/ms
# Warmup Iteration  12: 3826.422 ops/ms
# Warmup Iteration  13: 3831.493 ops/ms
# Warmup Iteration  14: 3817.570 ops/ms
# Warmup Iteration  15: 3827.049 ops/ms
# Warmup Iteration  16: 3814.343 ops/ms
# Warmup Iteration  17: 3837.642 ops/ms
# Warmup Iteration  18: 3826.480 ops/ms
# Warmup Iteration  19: 3839.091 ops/ms
# Warmup Iteration  20: 3836.910 ops/ms
Iteration   1: 3811.704 ops/ms
Iteration   2: 3827.136 ops/ms
Iteration   3: 3818.834 ops/ms
Iteration   4: 3839.155 ops/ms
Iteration   5: 3829.528 ops/ms
Iteration   6: 3837.851 ops/ms
Iteration   7: 3821.806 ops/ms
Iteration   8: 3833.108 ops/ms
Iteration   9: 3816.569 ops/ms
Iteration  10: 3839.753 ops/ms
Iteration  11: 3834.355 ops/ms
Iteration  12: 3840.959 ops/ms
Iteration  13: 3833.282 ops/ms
Iteration  14: 3835.822 ops/ms
Iteration  15: 3821.259 ops/ms
Iteration  16: 3833.028 ops/ms
Iteration  17: 3831.807 ops/ms
Iteration  18: 3823.170 ops/ms
Iteration  19: 3818.234 ops/ms
Iteration  20: 3820.983 ops/ms

Result : 3828.417 ?(95%) 4.095 ?(99%) 5.597 ops/ms
  Statistics: (min, avg, max) = (3811.704, 3828.417, 3840.959), stdev = 8.749
  Confidence intervals: 95% [3824.322, 3832.512], 99% [3822.820, 3834.015]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.230 ops/ms
# Warmup Iteration   2: 20.309 ops/ms
# Warmup Iteration   3: 30.863 ops/ms
# Warmup Iteration   4: 30.875 ops/ms
# Warmup Iteration   5: 30.897 ops/ms
# Warmup Iteration   6: 30.981 ops/ms
# Warmup Iteration   7: 25.825 ops/ms
# Warmup Iteration   8: 30.875 ops/ms
# Warmup Iteration   9: 31.050 ops/ms
# Warmup Iteration  10: 31.179 ops/ms
# Warmup Iteration  11: 31.187 ops/ms
# Warmup Iteration  12: 31.168 ops/ms
# Warmup Iteration  13: 31.030 ops/ms
# Warmup Iteration  14: 31.017 ops/ms
# Warmup Iteration  15: 30.977 ops/ms
# Warmup Iteration  16: 31.101 ops/ms
# Warmup Iteration  17: 31.210 ops/ms
# Warmup Iteration  18: 31.255 ops/ms
# Warmup Iteration  19: 31.102 ops/ms
# Warmup Iteration  20: 31.139 ops/ms
Iteration   1: 31.153 ops/ms
Iteration   2: 31.171 ops/ms
Iteration   3: 31.170 ops/ms
Iteration   4: 31.194 ops/ms
Iteration   5: 31.166 ops/ms
Iteration   6: 31.100 ops/ms
Iteration   7: 31.225 ops/ms
Iteration   8: 31.095 ops/ms
Iteration   9: 31.209 ops/ms
Iteration  10: 31.085 ops/ms
Iteration  11: 31.064 ops/ms
Iteration  12: 31.114 ops/ms
Iteration  13: 31.138 ops/ms
Iteration  14: 31.181 ops/ms
Iteration  15: 31.218 ops/ms
Iteration  16: 31.168 ops/ms
Iteration  17: 31.170 ops/ms
Iteration  18: 31.073 ops/ms
Iteration  19: 31.150 ops/ms
Iteration  20: 31.044 ops/ms

Result : 31.144 ?(95%) 0.025 ?(99%) 0.034 ops/ms
  Statistics: (min, avg, max) = (31.044, 31.144, 31.225), stdev = 0.053
  Confidence intervals: 95% [31.119, 31.169], 99% [31.110, 31.178]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.624 ops/ms
# Warmup Iteration   2: 20.206 ops/ms
# Warmup Iteration   3: 30.412 ops/ms
# Warmup Iteration   4: 30.382 ops/ms
# Warmup Iteration   5: 30.353 ops/ms
# Warmup Iteration   6: 30.297 ops/ms
# Warmup Iteration   7: 25.387 ops/ms
# Warmup Iteration   8: 30.225 ops/ms
# Warmup Iteration   9: 30.363 ops/ms
# Warmup Iteration  10: 30.584 ops/ms
# Warmup Iteration  11: 30.496 ops/ms
# Warmup Iteration  12: 30.504 ops/ms
# Warmup Iteration  13: 30.462 ops/ms
# Warmup Iteration  14: 30.582 ops/ms
# Warmup Iteration  15: 30.466 ops/ms
# Warmup Iteration  16: 30.601 ops/ms
# Warmup Iteration  17: 30.637 ops/ms
# Warmup Iteration  18: 30.606 ops/ms
# Warmup Iteration  19: 30.566 ops/ms
# Warmup Iteration  20: 30.504 ops/ms
Iteration   1: 30.496 ops/ms
Iteration   2: 30.610 ops/ms
Iteration   3: 30.479 ops/ms
Iteration   4: 30.627 ops/ms
Iteration   5: 30.619 ops/ms
Iteration   6: 30.600 ops/ms
Iteration   7: 30.610 ops/ms
Iteration   8: 30.613 ops/ms
Iteration   9: 30.523 ops/ms
Iteration  10: 30.611 ops/ms
Iteration  11: 30.471 ops/ms
Iteration  12: 30.534 ops/ms
Iteration  13: 30.525 ops/ms
Iteration  14: 30.643 ops/ms
Iteration  15: 30.595 ops/ms
Iteration  16: 30.483 ops/ms
Iteration  17: 30.528 ops/ms
Iteration  18: 30.567 ops/ms
Iteration  19: 30.612 ops/ms
Iteration  20: 30.633 ops/ms

Result : 30.569 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (30.471, 30.569, 30.643), stdev = 0.058
  Confidence intervals: 95% [30.542, 30.596], 99% [30.532, 30.606]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 6.888 ops/ms
# Warmup Iteration   2: 20.157 ops/ms
# Warmup Iteration   3: 30.902 ops/ms
# Warmup Iteration   4: 30.758 ops/ms
# Warmup Iteration   5: 30.828 ops/ms
# Warmup Iteration   6: 30.815 ops/ms
# Warmup Iteration   7: 25.807 ops/ms
# Warmup Iteration   8: 30.876 ops/ms
# Warmup Iteration   9: 30.814 ops/ms
# Warmup Iteration  10: 31.100 ops/ms
# Warmup Iteration  11: 31.053 ops/ms
# Warmup Iteration  12: 31.002 ops/ms
# Warmup Iteration  13: 31.067 ops/ms
# Warmup Iteration  14: 31.087 ops/ms
# Warmup Iteration  15: 30.958 ops/ms
# Warmup Iteration  16: 30.956 ops/ms
# Warmup Iteration  17: 30.904 ops/ms
# Warmup Iteration  18: 30.981 ops/ms
# Warmup Iteration  19: 30.863 ops/ms
# Warmup Iteration  20: 30.827 ops/ms
Iteration   1: 30.855 ops/ms
Iteration   2: 30.668 ops/ms
Iteration   3: 30.968 ops/ms
Iteration   4: 30.844 ops/ms
Iteration   5: 30.951 ops/ms
Iteration   6: 30.845 ops/ms
Iteration   7: 30.832 ops/ms
Iteration   8: 30.822 ops/ms
Iteration   9: 30.859 ops/ms
Iteration  10: 30.899 ops/ms
Iteration  11: 30.824 ops/ms
Iteration  12: 30.860 ops/ms
Iteration  13: 30.910 ops/ms
Iteration  14: 30.757 ops/ms
Iteration  15: 30.995 ops/ms
Iteration  16: 30.879 ops/ms
Iteration  17: 30.190 ops/ms
Iteration  18: 28.689 ops/ms
Iteration  19: 28.828 ops/ms
Iteration  20: 30.960 ops/ms

Result : 30.622 ?(95%) 0.309 ?(99%) 0.422 ops/ms
  Statistics: (min, avg, max) = (28.689, 30.622, 30.995), stdev = 0.659
  Confidence intervals: 95% [30.313, 30.930], 99% [30.200, 31.043]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.677 ops/ms
# Warmup Iteration   2: 19.669 ops/ms
# Warmup Iteration   3: 29.566 ops/ms
# Warmup Iteration   4: 29.563 ops/ms
# Warmup Iteration   5: 29.655 ops/ms
# Warmup Iteration   6: 29.670 ops/ms
# Warmup Iteration   7: 24.728 ops/ms
# Warmup Iteration   8: 29.564 ops/ms
# Warmup Iteration   9: 29.765 ops/ms
# Warmup Iteration  10: 29.859 ops/ms
# Warmup Iteration  11: 29.905 ops/ms
# Warmup Iteration  12: 29.747 ops/ms
# Warmup Iteration  13: 29.738 ops/ms
# Warmup Iteration  14: 29.794 ops/ms
# Warmup Iteration  15: 29.755 ops/ms
# Warmup Iteration  16: 29.890 ops/ms
# Warmup Iteration  17: 29.861 ops/ms
# Warmup Iteration  18: 29.800 ops/ms
# Warmup Iteration  19: 29.879 ops/ms
# Warmup Iteration  20: 29.763 ops/ms
Iteration   1: 29.886 ops/ms
Iteration   2: 29.830 ops/ms
Iteration   3: 29.769 ops/ms
Iteration   4: 29.694 ops/ms
Iteration   5: 29.863 ops/ms
Iteration   6: 29.772 ops/ms
Iteration   7: 29.859 ops/ms
Iteration   8: 29.818 ops/ms
Iteration   9: 29.853 ops/ms
Iteration  10: 29.765 ops/ms
Iteration  11: 29.742 ops/ms
Iteration  12: 29.785 ops/ms
Iteration  13: 29.837 ops/ms
Iteration  14: 29.909 ops/ms
Iteration  15: 29.873 ops/ms
Iteration  16: 29.759 ops/ms
Iteration  17: 29.760 ops/ms
Iteration  18: 29.763 ops/ms
Iteration  19: 29.785 ops/ms
Iteration  20: 29.776 ops/ms

Result : 29.805 ?(95%) 0.026 ?(99%) 0.036 ops/ms
  Statistics: (min, avg, max) = (29.694, 29.805, 29.909), stdev = 0.056
  Confidence intervals: 95% [29.779, 29.831], 99% [29.769, 29.841]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.780 ops/ms
# Warmup Iteration   2: 20.736 ops/ms
# Warmup Iteration   3: 30.502 ops/ms
# Warmup Iteration   4: 30.653 ops/ms
# Warmup Iteration   5: 30.618 ops/ms
# Warmup Iteration   6: 30.341 ops/ms
# Warmup Iteration   7: 25.613 ops/ms
# Warmup Iteration   8: 30.541 ops/ms
# Warmup Iteration   9: 30.400 ops/ms
# Warmup Iteration  10: 30.782 ops/ms
# Warmup Iteration  11: 30.866 ops/ms
# Warmup Iteration  12: 30.894 ops/ms
# Warmup Iteration  13: 30.773 ops/ms
# Warmup Iteration  14: 30.793 ops/ms
# Warmup Iteration  15: 30.854 ops/ms
# Warmup Iteration  16: 30.771 ops/ms
# Warmup Iteration  17: 30.741 ops/ms
# Warmup Iteration  18: 30.857 ops/ms
# Warmup Iteration  19: 30.867 ops/ms
# Warmup Iteration  20: 30.761 ops/ms
Iteration   1: 30.758 ops/ms
Iteration   2: 30.862 ops/ms
Iteration   3: 30.847 ops/ms
Iteration   4: 30.860 ops/ms
Iteration   5: 30.854 ops/ms
Iteration   6: 30.762 ops/ms
Iteration   7: 30.887 ops/ms
Iteration   8: 30.845 ops/ms
Iteration   9: 30.833 ops/ms
Iteration  10: 30.753 ops/ms
Iteration  11: 30.594 ops/ms
Iteration  12: 30.845 ops/ms
Iteration  13: 30.741 ops/ms
Iteration  14: 30.130 ops/ms
Iteration  15: 30.643 ops/ms
Iteration  16: 30.653 ops/ms
Iteration  17: 30.853 ops/ms
Iteration  18: 30.789 ops/ms
Iteration  19: 30.689 ops/ms
Iteration  20: 30.713 ops/ms

Result : 30.746 ?(95%) 0.079 ?(99%) 0.107 ops/ms
  Statistics: (min, avg, max) = (30.130, 30.746, 30.887), stdev = 0.168
  Confidence intervals: 95% [30.667, 30.824], 99% [30.638, 30.853]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1742.361 ops/ms
# Warmup Iteration   2: 2720.435 ops/ms
# Warmup Iteration   3: 2824.237 ops/ms
# Warmup Iteration   4: 2858.187 ops/ms
# Warmup Iteration   5: 2869.000 ops/ms
# Warmup Iteration   6: 2863.495 ops/ms
# Warmup Iteration   7: 2876.572 ops/ms
# Warmup Iteration   8: 2868.335 ops/ms
# Warmup Iteration   9: 2877.450 ops/ms
# Warmup Iteration  10: 2897.201 ops/ms
# Warmup Iteration  11: 2886.634 ops/ms
# Warmup Iteration  12: 2893.294 ops/ms
# Warmup Iteration  13: 2890.216 ops/ms
# Warmup Iteration  14: 2884.016 ops/ms
# Warmup Iteration  15: 2899.211 ops/ms
# Warmup Iteration  16: 2906.757 ops/ms
# Warmup Iteration  17: 2837.454 ops/ms
# Warmup Iteration  18: 2826.683 ops/ms
# Warmup Iteration  19: 2823.330 ops/ms
# Warmup Iteration  20: 2825.824 ops/ms
Iteration   1: 2831.396 ops/ms
Iteration   2: 2837.980 ops/ms
Iteration   3: 2830.386 ops/ms
Iteration   4: 2838.647 ops/ms
Iteration   5: 2829.591 ops/ms
Iteration   6: 2840.156 ops/ms
Iteration   7: 2827.914 ops/ms
Iteration   8: 2826.247 ops/ms
Iteration   9: 2829.461 ops/ms
Iteration  10: 2825.546 ops/ms
Iteration  11: 2844.216 ops/ms
Iteration  12: 2828.165 ops/ms
Iteration  13: 2828.434 ops/ms
Iteration  14: 2824.688 ops/ms
Iteration  15: 2847.702 ops/ms
Iteration  16: 2835.204 ops/ms
Iteration  17: 2834.344 ops/ms
Iteration  18: 2828.283 ops/ms
Iteration  19: 2829.837 ops/ms
Iteration  20: 2826.750 ops/ms

Result : 2832.247 ?(95%) 3.019 ?(99%) 4.126 ops/ms
  Statistics: (min, avg, max) = (2824.688, 2832.247, 2847.703), stdev = 6.450
  Confidence intervals: 95% [2829.229, 2835.266], 99% [2828.121, 2836.374]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1341.544 ops/ms
# Warmup Iteration   2: 2070.324 ops/ms
# Warmup Iteration   3: 2094.695 ops/ms
# Warmup Iteration   4: 2111.938 ops/ms
# Warmup Iteration   5: 2128.100 ops/ms
# Warmup Iteration   6: 2129.013 ops/ms
# Warmup Iteration   7: 2126.053 ops/ms
# Warmup Iteration   8: 2133.034 ops/ms
# Warmup Iteration   9: 2135.615 ops/ms
# Warmup Iteration  10: 2141.138 ops/ms
# Warmup Iteration  11: 2142.084 ops/ms
# Warmup Iteration  12: 2136.809 ops/ms
# Warmup Iteration  13: 2142.349 ops/ms
# Warmup Iteration  14: 2135.543 ops/ms
# Warmup Iteration  15: 2131.184 ops/ms
# Warmup Iteration  16: 2144.185 ops/ms
# Warmup Iteration  17: 2144.588 ops/ms
# Warmup Iteration  18: 2154.018 ops/ms
# Warmup Iteration  19: 2145.993 ops/ms
# Warmup Iteration  20: 2145.931 ops/ms
Iteration   1: 2137.890 ops/ms
Iteration   2: 2148.088 ops/ms
Iteration   3: 2154.763 ops/ms
Iteration   4: 2147.519 ops/ms
Iteration   5: 2146.777 ops/ms
Iteration   6: 2153.683 ops/ms
Iteration   7: 2141.423 ops/ms
Iteration   8: 2154.398 ops/ms
Iteration   9: 2144.834 ops/ms
Iteration  10: 2149.291 ops/ms
Iteration  11: 2152.758 ops/ms
Iteration  12: 2155.792 ops/ms
Iteration  13: 2154.098 ops/ms
Iteration  14: 2154.630 ops/ms
Iteration  15: 2145.840 ops/ms
Iteration  16: 2147.922 ops/ms
Iteration  17: 2147.105 ops/ms
Iteration  18: 2155.136 ops/ms
Iteration  19: 2144.787 ops/ms
Iteration  20: 2155.635 ops/ms

Result : 2149.618 ?(95%) 2.437 ?(99%) 3.331 ops/ms
  Statistics: (min, avg, max) = (2137.890, 2149.618, 2155.792), stdev = 5.206
  Confidence intervals: 95% [2147.182, 2152.055], 99% [2146.288, 2152.949]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1600.454 ops/ms
# Warmup Iteration   2: 2223.172 ops/ms
# Warmup Iteration   3: 2432.487 ops/ms
# Warmup Iteration   4: 2456.888 ops/ms
# Warmup Iteration   5: 2459.598 ops/ms
# Warmup Iteration   6: 2449.185 ops/ms
# Warmup Iteration   7: 2472.653 ops/ms
# Warmup Iteration   8: 2475.215 ops/ms
# Warmup Iteration   9: 2480.039 ops/ms
# Warmup Iteration  10: 2483.254 ops/ms
# Warmup Iteration  11: 2488.155 ops/ms
# Warmup Iteration  12: 2487.757 ops/ms
# Warmup Iteration  13: 2489.249 ops/ms
# Warmup Iteration  14: 2477.015 ops/ms
# Warmup Iteration  15: 2484.006 ops/ms
# Warmup Iteration  16: 2490.380 ops/ms
# Warmup Iteration  17: 2494.970 ops/ms
# Warmup Iteration  18: 2506.293 ops/ms
# Warmup Iteration  19: 2492.887 ops/ms
# Warmup Iteration  20: 2493.861 ops/ms
Iteration   1: 2494.787 ops/ms
Iteration   2: 2504.827 ops/ms
Iteration   3: 2492.606 ops/ms
Iteration   4: 2504.095 ops/ms
Iteration   5: 2496.659 ops/ms
Iteration   6: 2503.567 ops/ms
Iteration   7: 2492.828 ops/ms
Iteration   8: 2492.160 ops/ms
Iteration   9: 2502.642 ops/ms
Iteration  10: 2502.956 ops/ms
Iteration  11: 2494.514 ops/ms
Iteration  12: 2490.389 ops/ms
Iteration  13: 2503.776 ops/ms
Iteration  14: 2493.715 ops/ms
Iteration  15: 2493.686 ops/ms
Iteration  16: 2493.349 ops/ms
Iteration  17: 2495.912 ops/ms
Iteration  18: 2506.848 ops/ms
Iteration  19: 2491.655 ops/ms
Iteration  20: 2489.350 ops/ms

Result : 2497.016 ?(95%) 2.637 ?(99%) 3.605 ops/ms
  Statistics: (min, avg, max) = (2489.350, 2497.016, 2506.848), stdev = 5.635
  Confidence intervals: 95% [2494.379, 2499.653], 99% [2493.411, 2500.621]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1667.984 ops/ms
# Warmup Iteration   2: 2404.139 ops/ms
# Warmup Iteration   3: 2412.857 ops/ms
# Warmup Iteration   4: 2486.771 ops/ms
# Warmup Iteration   5: 2439.673 ops/ms
# Warmup Iteration   6: 2444.818 ops/ms
# Warmup Iteration   7: 2467.912 ops/ms
# Warmup Iteration   8: 2465.858 ops/ms
# Warmup Iteration   9: 2466.099 ops/ms
# Warmup Iteration  10: 2478.603 ops/ms
# Warmup Iteration  11: 2478.701 ops/ms
# Warmup Iteration  12: 2486.802 ops/ms
# Warmup Iteration  13: 2478.629 ops/ms
# Warmup Iteration  14: 2486.111 ops/ms
# Warmup Iteration  15: 2483.461 ops/ms
# Warmup Iteration  16: 2485.799 ops/ms
# Warmup Iteration  17: 2447.655 ops/ms
# Warmup Iteration  18: 2453.050 ops/ms
# Warmup Iteration  19: 2449.804 ops/ms
# Warmup Iteration  20: 2457.653 ops/ms
Iteration   1: 2450.125 ops/ms
Iteration   2: 2459.191 ops/ms
Iteration   3: 2457.580 ops/ms
Iteration   4: 2451.570 ops/ms
Iteration   5: 2450.554 ops/ms
Iteration   6: 2451.715 ops/ms
Iteration   7: 2449.640 ops/ms
Iteration   8: 2448.597 ops/ms
Iteration   9: 2455.546 ops/ms
Iteration  10: 2445.602 ops/ms
Iteration  11: 2449.325 ops/ms
Iteration  12: 2451.760 ops/ms
Iteration  13: 2446.011 ops/ms
Iteration  14: 2458.202 ops/ms
Iteration  15: 2457.577 ops/ms
Iteration  16: 2459.260 ops/ms
Iteration  17: 2450.236 ops/ms
Iteration  18: 2457.944 ops/ms
Iteration  19: 2450.338 ops/ms
Iteration  20: 2447.379 ops/ms

Result : 2452.408 ?(95%) 2.104 ?(99%) 2.876 ops/ms
  Statistics: (min, avg, max) = (2445.602, 2452.408, 2459.260), stdev = 4.495
  Confidence intervals: 95% [2450.304, 2454.511], 99% [2449.532, 2455.283]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1516.577 ops/ms
# Warmup Iteration   2: 2372.561 ops/ms
# Warmup Iteration   3: 2280.002 ops/ms
# Warmup Iteration   4: 2268.505 ops/ms
# Warmup Iteration   5: 2397.783 ops/ms
# Warmup Iteration   6: 2434.551 ops/ms
# Warmup Iteration   7: 2427.673 ops/ms
# Warmup Iteration   8: 2422.788 ops/ms
# Warmup Iteration   9: 2444.243 ops/ms
# Warmup Iteration  10: 2456.458 ops/ms
# Warmup Iteration  11: 2449.074 ops/ms
# Warmup Iteration  12: 2447.031 ops/ms
# Warmup Iteration  13: 2453.096 ops/ms
# Warmup Iteration  14: 2456.661 ops/ms
# Warmup Iteration  15: 2446.878 ops/ms
# Warmup Iteration  16: 2475.328 ops/ms
# Warmup Iteration  17: 2455.915 ops/ms
# Warmup Iteration  18: 2454.250 ops/ms
# Warmup Iteration  19: 2461.114 ops/ms
# Warmup Iteration  20: 2448.036 ops/ms
Iteration   1: 2458.927 ops/ms
Iteration   2: 2461.089 ops/ms
Iteration   3: 2455.338 ops/ms
Iteration   4: 2446.987 ops/ms
Iteration   5: 2460.905 ops/ms
Iteration   6: 2452.776 ops/ms
Iteration   7: 2460.625 ops/ms
Iteration   8: 2447.902 ops/ms
Iteration   9: 2441.443 ops/ms
Iteration  10: 2451.758 ops/ms
Iteration  11: 2459.494 ops/ms
Iteration  12: 2450.260 ops/ms
Iteration  13: 2451.102 ops/ms
Iteration  14: 2459.633 ops/ms
Iteration  15: 2479.574 ops/ms
Iteration  16: 2447.967 ops/ms
Iteration  17: 2447.980 ops/ms
Iteration  18: 2460.944 ops/ms
Iteration  19: 2460.730 ops/ms
Iteration  20: 2450.048 ops/ms

Result : 2455.274 ?(95%) 3.880 ?(99%) 5.304 ops/ms
  Statistics: (min, avg, max) = (2441.443, 2455.274, 2479.574), stdev = 8.291
  Confidence intervals: 95% [2451.394, 2459.154], 99% [2449.970, 2460.578]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.436 ops/ms
# Warmup Iteration   2: 129.738 ops/ms
# Warmup Iteration   3: 187.908 ops/ms
# Warmup Iteration   4: 187.556 ops/ms
# Warmup Iteration   5: 187.437 ops/ms
# Warmup Iteration   6: 187.353 ops/ms
# Warmup Iteration   7: 160.887 ops/ms
# Warmup Iteration   8: 188.940 ops/ms
# Warmup Iteration   9: 188.967 ops/ms
# Warmup Iteration  10: 189.425 ops/ms
# Warmup Iteration  11: 189.326 ops/ms
# Warmup Iteration  12: 188.133 ops/ms
# Warmup Iteration  13: 189.459 ops/ms
# Warmup Iteration  14: 189.264 ops/ms
# Warmup Iteration  15: 189.417 ops/ms
# Warmup Iteration  16: 189.029 ops/ms
# Warmup Iteration  17: 189.399 ops/ms
# Warmup Iteration  18: 190.202 ops/ms
# Warmup Iteration  19: 190.112 ops/ms
# Warmup Iteration  20: 189.581 ops/ms
Iteration   1: 190.104 ops/ms
Iteration   2: 189.441 ops/ms
Iteration   3: 189.375 ops/ms
Iteration   4: 190.235 ops/ms
Iteration   5: 190.159 ops/ms
Iteration   6: 190.149 ops/ms
Iteration   7: 189.567 ops/ms
Iteration   8: 189.395 ops/ms
Iteration   9: 190.226 ops/ms
Iteration  10: 189.383 ops/ms
Iteration  11: 189.566 ops/ms
Iteration  12: 189.928 ops/ms
Iteration  13: 189.182 ops/ms
Iteration  14: 188.994 ops/ms
Iteration  15: 190.047 ops/ms
Iteration  16: 189.588 ops/ms
Iteration  17: 190.144 ops/ms
Iteration  18: 190.093 ops/ms
Iteration  19: 190.197 ops/ms
Iteration  20: 189.996 ops/ms

Result : 189.788 ?(95%) 0.187 ?(99%) 0.255 ops/ms
  Statistics: (min, avg, max) = (188.994, 189.788, 190.235), stdev = 0.399
  Confidence intervals: 95% [189.602, 189.975], 99% [189.533, 190.044]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 31.827 ops/ms
# Warmup Iteration   2: 129.255 ops/ms
# Warmup Iteration   3: 189.285 ops/ms
# Warmup Iteration   4: 188.842 ops/ms
# Warmup Iteration   5: 188.396 ops/ms
# Warmup Iteration   6: 188.150 ops/ms
# Warmup Iteration   7: 161.567 ops/ms
# Warmup Iteration   8: 189.276 ops/ms
# Warmup Iteration   9: 190.157 ops/ms
# Warmup Iteration  10: 190.718 ops/ms
# Warmup Iteration  11: 190.541 ops/ms
# Warmup Iteration  12: 190.429 ops/ms
# Warmup Iteration  13: 190.260 ops/ms
# Warmup Iteration  14: 190.541 ops/ms
# Warmup Iteration  15: 190.927 ops/ms
# Warmup Iteration  16: 191.025 ops/ms
# Warmup Iteration  17: 191.811 ops/ms
# Warmup Iteration  18: 190.765 ops/ms
# Warmup Iteration  19: 190.623 ops/ms
# Warmup Iteration  20: 190.564 ops/ms
Iteration   1: 191.056 ops/ms
Iteration   2: 190.622 ops/ms
Iteration   3: 191.557 ops/ms
Iteration   4: 191.560 ops/ms
Iteration   5: 190.574 ops/ms
Iteration   6: 190.650 ops/ms
Iteration   7: 191.548 ops/ms
Iteration   8: 190.722 ops/ms
Iteration   9: 190.825 ops/ms
Iteration  10: 190.773 ops/ms
Iteration  11: 190.558 ops/ms
Iteration  12: 191.712 ops/ms
Iteration  13: 190.809 ops/ms
Iteration  14: 190.743 ops/ms
Iteration  15: 191.021 ops/ms
Iteration  16: 190.729 ops/ms
Iteration  17: 190.756 ops/ms
Iteration  18: 190.491 ops/ms
Iteration  19: 190.592 ops/ms
Iteration  20: 191.449 ops/ms

Result : 190.937 ?(95%) 0.187 ?(99%) 0.255 ops/ms
  Statistics: (min, avg, max) = (190.491, 190.937, 191.712), stdev = 0.399
  Confidence intervals: 95% [190.751, 191.124], 99% [190.682, 191.192]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.059 ops/ms
# Warmup Iteration   2: 127.299 ops/ms
# Warmup Iteration   3: 184.668 ops/ms
# Warmup Iteration   4: 185.066 ops/ms
# Warmup Iteration   5: 185.885 ops/ms
# Warmup Iteration   6: 185.062 ops/ms
# Warmup Iteration   7: 157.781 ops/ms
# Warmup Iteration   8: 184.724 ops/ms
# Warmup Iteration   9: 185.835 ops/ms
# Warmup Iteration  10: 186.540 ops/ms
# Warmup Iteration  11: 186.143 ops/ms
# Warmup Iteration  12: 185.688 ops/ms
# Warmup Iteration  13: 186.714 ops/ms
# Warmup Iteration  14: 185.913 ops/ms
# Warmup Iteration  15: 185.792 ops/ms
# Warmup Iteration  16: 186.599 ops/ms
# Warmup Iteration  17: 186.742 ops/ms
# Warmup Iteration  18: 187.784 ops/ms
# Warmup Iteration  19: 187.106 ops/ms
# Warmup Iteration  20: 187.762 ops/ms
Iteration   1: 187.098 ops/ms
Iteration   2: 187.711 ops/ms
Iteration   3: 187.065 ops/ms
Iteration   4: 186.965 ops/ms
Iteration   5: 187.105 ops/ms
Iteration   6: 187.162 ops/ms
Iteration   7: 186.732 ops/ms
Iteration   8: 187.644 ops/ms
Iteration   9: 186.677 ops/ms
Iteration  10: 187.210 ops/ms
Iteration  11: 187.237 ops/ms
Iteration  12: 187.033 ops/ms
Iteration  13: 186.854 ops/ms
Iteration  14: 187.459 ops/ms
Iteration  15: 187.195 ops/ms
Iteration  16: 188.016 ops/ms
Iteration  17: 187.636 ops/ms
Iteration  18: 187.045 ops/ms
Iteration  19: 187.533 ops/ms
Iteration  20: 186.815 ops/ms

Result : 187.210 ?(95%) 0.166 ?(99%) 0.227 ops/ms
  Statistics: (min, avg, max) = (186.677, 187.210, 188.016), stdev = 0.355
  Confidence intervals: 95% [187.043, 187.376], 99% [186.982, 187.437]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.458 ops/ms
# Warmup Iteration   2: 128.598 ops/ms
# Warmup Iteration   3: 186.661 ops/ms
# Warmup Iteration   4: 186.309 ops/ms
# Warmup Iteration   5: 186.644 ops/ms
# Warmup Iteration   6: 186.672 ops/ms
# Warmup Iteration   7: 160.525 ops/ms
# Warmup Iteration   8: 186.392 ops/ms
# Warmup Iteration   9: 187.192 ops/ms
# Warmup Iteration  10: 187.830 ops/ms
# Warmup Iteration  11: 188.152 ops/ms
# Warmup Iteration  12: 187.833 ops/ms
# Warmup Iteration  13: 187.409 ops/ms
# Warmup Iteration  14: 187.954 ops/ms
# Warmup Iteration  15: 188.370 ops/ms
# Warmup Iteration  16: 187.838 ops/ms
# Warmup Iteration  17: 186.411 ops/ms
# Warmup Iteration  18: 187.087 ops/ms
# Warmup Iteration  19: 187.440 ops/ms
# Warmup Iteration  20: 187.403 ops/ms
Iteration   1: 187.674 ops/ms
Iteration   2: 187.650 ops/ms
Iteration   3: 187.000 ops/ms
Iteration   4: 187.317 ops/ms
Iteration   5: 186.977 ops/ms
Iteration   6: 186.407 ops/ms
Iteration   7: 187.577 ops/ms
Iteration   8: 186.833 ops/ms
Iteration   9: 187.881 ops/ms
Iteration  10: 187.224 ops/ms
Iteration  11: 186.899 ops/ms
Iteration  12: 186.550 ops/ms
Iteration  13: 187.062 ops/ms
Iteration  14: 187.030 ops/ms
Iteration  15: 187.274 ops/ms
Iteration  16: 187.621 ops/ms
Iteration  17: 186.843 ops/ms
Iteration  18: 187.168 ops/ms
Iteration  19: 187.129 ops/ms
Iteration  20: 187.709 ops/ms

Result : 187.191 ?(95%) 0.187 ?(99%) 0.256 ops/ms
  Statistics: (min, avg, max) = (186.407, 187.191, 187.881), stdev = 0.400
  Confidence intervals: 95% [187.004, 187.378], 99% [186.936, 187.447]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 31.916 ops/ms
# Warmup Iteration   2: 128.814 ops/ms
# Warmup Iteration   3: 188.097 ops/ms
# Warmup Iteration   4: 187.185 ops/ms
# Warmup Iteration   5: 187.529 ops/ms
# Warmup Iteration   6: 186.696 ops/ms
# Warmup Iteration   7: 160.462 ops/ms
# Warmup Iteration   8: 187.629 ops/ms
# Warmup Iteration   9: 188.082 ops/ms
# Warmup Iteration  10: 189.555 ops/ms
# Warmup Iteration  11: 189.033 ops/ms
# Warmup Iteration  12: 189.810 ops/ms
# Warmup Iteration  13: 189.095 ops/ms
# Warmup Iteration  14: 189.451 ops/ms
# Warmup Iteration  15: 189.360 ops/ms
# Warmup Iteration  16: 189.308 ops/ms
# Warmup Iteration  17: 188.078 ops/ms
# Warmup Iteration  18: 188.363 ops/ms
# Warmup Iteration  19: 188.219 ops/ms
# Warmup Iteration  20: 187.793 ops/ms
Iteration   1: 187.393 ops/ms
Iteration   2: 187.802 ops/ms
Iteration   3: 188.522 ops/ms
Iteration   4: 188.520 ops/ms
Iteration   5: 187.861 ops/ms
Iteration   6: 187.741 ops/ms
Iteration   7: 187.655 ops/ms
Iteration   8: 187.263 ops/ms
Iteration   9: 187.699 ops/ms
Iteration  10: 187.602 ops/ms
Iteration  11: 187.815 ops/ms
Iteration  12: 188.327 ops/ms
Iteration  13: 187.812 ops/ms
Iteration  14: 187.700 ops/ms
Iteration  15: 188.387 ops/ms
Iteration  16: 187.810 ops/ms
Iteration  17: 187.870 ops/ms
Iteration  18: 188.519 ops/ms
Iteration  19: 187.378 ops/ms
Iteration  20: 188.060 ops/ms

Result : 187.887 ?(95%) 0.180 ?(99%) 0.246 ops/ms
  Statistics: (min, avg, max) = (187.263, 187.887, 188.522), stdev = 0.385
  Confidence intervals: 95% [187.707, 188.067], 99% [187.640, 188.133]


"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone", aggregate over forked runs:

Result : 102190.169 ?(95%) 907.541 ?(99%) 1201.211 ops/ms
  Statistics: (min, avg, max) = (87769.502, 102190.169, 105246.606), stdev = 4574.298
  Confidence intervals: 95% [101282.628, 103097.709], 99% [100988.958, 103391.379]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 51.036 ?(95%) 0.109 ?(99%) 0.144 ops/ms
  Statistics: (min, avg, max) = (47.114, 51.036, 51.672), stdev = 0.549
  Confidence intervals: 95% [50.927, 51.145], 99% [50.892, 51.180]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 53.133 ?(95%) 0.124 ?(99%) 0.164 ops/ms
  Statistics: (min, avg, max) = (51.803, 53.133, 53.943), stdev = 0.624
  Confidence intervals: 95% [53.009, 53.257], 99% [52.969, 53.297]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 86.383 ?(95%) 0.222 ?(99%) 0.294 ops/ms
  Statistics: (min, avg, max) = (84.612, 86.383, 88.088), stdev = 1.118
  Confidence intervals: 95% [86.161, 86.605], 99% [86.089, 86.676]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor", aggregate over forked runs:

Result : 55671.159 ?(95%) 160.868 ?(99%) 212.923 ops/ms
  Statistics: (min, avg, max) = (54369.314, 55671.159, 56565.160), stdev = 810.826
  Confidence intervals: 95% [55510.291, 55832.027], 99% [55458.236, 55884.082]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 621.292 ?(95%) 1.165 ?(99%) 1.542 ops/ms
  Statistics: (min, avg, max) = (609.856, 621.292, 632.512), stdev = 5.871
  Confidence intervals: 95% [620.127, 622.457], 99% [619.750, 622.834]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 1755.881 ?(95%) 9.082 ?(99%) 12.021 ops/ms
  Statistics: (min, avg, max) = (1560.744, 1755.881, 1794.642), stdev = 45.778
  Confidence intervals: 95% [1746.798, 1764.963], 99% [1743.859, 1767.902]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 19.900 ?(95%) 0.057 ?(99%) 0.075 ops/ms
  Statistics: (min, avg, max) = (18.436, 19.900, 20.278), stdev = 0.286
  Confidence intervals: 95% [19.844, 19.957], 99% [19.825, 19.975]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2244.470 ?(95%) 27.943 ?(99%) 36.985 ops/ms
  Statistics: (min, avg, max) = (2017.989, 2244.470, 2440.315), stdev = 140.843
  Confidence intervals: 95% [2216.527, 2272.413], 99% [2207.485, 2281.455]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 173.107 ?(95%) 1.303 ?(99%) 1.724 ops/ms
  Statistics: (min, avg, max) = (160.370, 173.107, 180.590), stdev = 6.567
  Confidence intervals: 95% [171.804, 174.410], 99% [171.382, 174.831]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone", aggregate over forked runs:

Result : 94599.198 ?(95%) 151.122 ?(99%) 200.023 ops/ms
  Statistics: (min, avg, max) = (90771.921, 94599.198, 95389.984), stdev = 761.703
  Confidence intervals: 95% [94448.077, 94750.320], 99% [94399.175, 94799.222]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 43.283 ?(95%) 0.114 ?(99%) 0.151 ops/ms
  Statistics: (min, avg, max) = (42.266, 43.283, 44.117), stdev = 0.576
  Confidence intervals: 95% [43.169, 43.398], 99% [43.132, 43.435]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 17.860 ?(95%) 0.047 ?(99%) 0.062 ops/ms
  Statistics: (min, avg, max) = (17.265, 17.860, 18.141), stdev = 0.238
  Confidence intervals: 95% [17.813, 17.907], 99% [17.798, 17.923]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 85.602 ?(95%) 0.204 ?(99%) 0.270 ops/ms
  Statistics: (min, avg, max) = (79.903, 85.602, 86.928), stdev = 1.028
  Confidence intervals: 95% [85.398, 85.806], 99% [85.332, 85.872]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor", aggregate over forked runs:

Result : 54127.036 ?(95%) 97.284 ?(99%) 128.764 ops/ms
  Statistics: (min, avg, max) = (51775.982, 54127.036, 54843.032), stdev = 490.343
  Confidence intervals: 95% [54029.752, 54224.320], 99% [53998.272, 54255.800]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 694.748 ?(95%) 1.421 ?(99%) 1.881 ops/ms
  Statistics: (min, avg, max) = (650.447, 694.748, 700.946), stdev = 7.163
  Confidence intervals: 95% [693.327, 696.169], 99% [692.867, 696.629]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 3813.338 ?(95%) 7.134 ?(99%) 9.443 ops/ms
  Statistics: (min, avg, max) = (3567.437, 3813.338, 3840.959), stdev = 35.959
  Confidence intervals: 95% [3806.203, 3820.472], 99% [3803.895, 3822.780]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 30.577 ?(95%) 0.105 ?(99%) 0.140 ops/ms
  Statistics: (min, avg, max) = (28.689, 30.577, 31.225), stdev = 0.531
  Confidence intervals: 95% [30.472, 30.682], 99% [30.438, 30.717]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2477.313 ?(95%) 43.232 ?(99%) 57.222 ops/ms
  Statistics: (min, avg, max) = (2137.890, 2477.313, 2847.703), stdev = 217.904
  Confidence intervals: 95% [2434.081, 2520.545], 99% [2420.091, 2534.534]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 188.603 ?(95%) 0.309 ?(99%) 0.409 ops/ms
  Statistics: (min, avg, max) = (186.407, 188.603, 191.712), stdev = 1.558
  Confidence intervals: 95% [188.294, 188.912], 99% [188.194, 189.012]

Benchmark                                                                              Mode Thr    Cnt  Sec         Mean   Mean error    Units
c.v.b.c.primitives.PrimitiveBenchmark.copyByClone                                     thrpt   1    100    1   102190.169     1201.211   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByCustomSerialization                       thrpt   1    100    1       51.036        0.144   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByDefaultSerialization                      thrpt   1    100    1       53.133        0.164   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByExternalizable                            thrpt   1    100    1       86.383        0.294   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyConstructor                                 thrpt   1    100    1    55671.159      212.923   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime              thrpt   1    100    1      621.292        1.542   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields                  thrpt   1    100    1     1755.881       12.021   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke                 thrpt   1    100    1       19.900        0.075   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact            thrpt   1    100    1     2244.470       36.985   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments    thrpt   1    100    1      173.107        1.724   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByClone                                        thrpt   1    100    1    94599.198      200.023   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByCustomSerialization                          thrpt   1    100    1       43.283        0.151   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByDefaultSerialization                         thrpt   1    100    1       17.860        0.062   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByExternalizable                               thrpt   1    100    1       85.602        0.270   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyConstructor                                    thrpt   1    100    1    54127.036      128.764   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime                 thrpt   1    100    1      694.748        1.881   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields                     thrpt   1    100    1     3813.338        9.443   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke                    thrpt   1    100    1       30.577        0.140   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact               thrpt   1    100    1     2477.313       57.222   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments       thrpt   1    100    1      188.603        0.409   ops/ms
