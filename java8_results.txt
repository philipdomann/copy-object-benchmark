# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66975.634 ops/ms
# Warmup Iteration   2: 96486.816 ops/ms
# Warmup Iteration   3: 99146.993 ops/ms
# Warmup Iteration   4: 100027.182 ops/ms
# Warmup Iteration   5: 98401.411 ops/ms
# Warmup Iteration   6: 100178.970 ops/ms
# Warmup Iteration   7: 99804.540 ops/ms
# Warmup Iteration   8: 97902.186 ops/ms
# Warmup Iteration   9: 95553.951 ops/ms
# Warmup Iteration  10: 99645.220 ops/ms
# Warmup Iteration  11: 104260.926 ops/ms
# Warmup Iteration  12: 104666.187 ops/ms
# Warmup Iteration  13: 104725.015 ops/ms
# Warmup Iteration  14: 104047.761 ops/ms
# Warmup Iteration  15: 104042.821 ops/ms
# Warmup Iteration  16: 104465.278 ops/ms
# Warmup Iteration  17: 104438.223 ops/ms
# Warmup Iteration  18: 104513.600 ops/ms
# Warmup Iteration  19: 104475.387 ops/ms
# Warmup Iteration  20: 104667.197 ops/ms
Iteration   1: 104177.036 ops/ms
Iteration   2: 104645.955 ops/ms
Iteration   3: 104893.880 ops/ms
Iteration   4: 104201.116 ops/ms
Iteration   5: 104858.607 ops/ms
Iteration   6: 104217.369 ops/ms
Iteration   7: 105008.280 ops/ms
Iteration   8: 104235.258 ops/ms
Iteration   9: 104188.030 ops/ms
Iteration  10: 103317.132 ops/ms
Iteration  11: 104230.908 ops/ms
Iteration  12: 104897.598 ops/ms
Iteration  13: 104521.888 ops/ms
Iteration  14: 104523.959 ops/ms
Iteration  15: 104697.674 ops/ms
Iteration  16: 104240.771 ops/ms
Iteration  17: 104478.586 ops/ms
Iteration  18: 104542.008 ops/ms
Iteration  19: 104764.847 ops/ms
Iteration  20: 104858.220 ops/ms

Result : 104474.956 ?(95%) 183.769 ?(99%) 251.200 ops/ms
  Statistics: (min, avg, max) = (103317.132, 104474.956, 105008.280), stdev = 392.661
  Confidence intervals: 95% [104291.187, 104658.725], 99% [104223.756, 104726.156]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67112.648 ops/ms
# Warmup Iteration   2: 95467.894 ops/ms
# Warmup Iteration   3: 99855.950 ops/ms
# Warmup Iteration   4: 99436.139 ops/ms
# Warmup Iteration   5: 99410.022 ops/ms
# Warmup Iteration   6: 99677.027 ops/ms
# Warmup Iteration   7: 99947.560 ops/ms
# Warmup Iteration   8: 99714.248 ops/ms
# Warmup Iteration   9: 101665.046 ops/ms
# Warmup Iteration  10: 104520.704 ops/ms
# Warmup Iteration  11: 104716.722 ops/ms
# Warmup Iteration  12: 104614.476 ops/ms
# Warmup Iteration  13: 104842.221 ops/ms
# Warmup Iteration  14: 104844.732 ops/ms
# Warmup Iteration  15: 103358.113 ops/ms
# Warmup Iteration  16: 103959.436 ops/ms
# Warmup Iteration  17: 104303.967 ops/ms
# Warmup Iteration  18: 104862.784 ops/ms
# Warmup Iteration  19: 104913.205 ops/ms
# Warmup Iteration  20: 104745.230 ops/ms
Iteration   1: 104537.869 ops/ms
Iteration   2: 104744.413 ops/ms
Iteration   3: 105237.523 ops/ms
Iteration   4: 104262.694 ops/ms
Iteration   5: 104557.860 ops/ms
Iteration   6: 104303.144 ops/ms
Iteration   7: 104607.344 ops/ms
Iteration   8: 104305.912 ops/ms
Iteration   9: 104675.577 ops/ms
Iteration  10: 104616.023 ops/ms
Iteration  11: 104729.408 ops/ms
Iteration  12: 104313.949 ops/ms
Iteration  13: 104533.987 ops/ms
Iteration  14: 104004.477 ops/ms
Iteration  15: 104865.607 ops/ms
Iteration  16: 104133.644 ops/ms
Iteration  17: 104156.972 ops/ms
Iteration  18: 104472.028 ops/ms
Iteration  19: 104787.013 ops/ms
Iteration  20: 103888.011 ops/ms

Result : 104486.673 ?(95%) 150.724 ?(99%) 206.030 ops/ms
  Statistics: (min, avg, max) = (103888.011, 104486.673, 105237.523), stdev = 322.053
  Confidence intervals: 95% [104335.949, 104637.396], 99% [104280.643, 104692.703]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67304.225 ops/ms
# Warmup Iteration   2: 95575.973 ops/ms
# Warmup Iteration   3: 99726.905 ops/ms
# Warmup Iteration   4: 99522.922 ops/ms
# Warmup Iteration   5: 99798.092 ops/ms
# Warmup Iteration   6: 99553.289 ops/ms
# Warmup Iteration   7: 99835.020 ops/ms
# Warmup Iteration   8: 99820.710 ops/ms
# Warmup Iteration   9: 101843.417 ops/ms
# Warmup Iteration  10: 104219.027 ops/ms
# Warmup Iteration  11: 104430.851 ops/ms
# Warmup Iteration  12: 104915.531 ops/ms
# Warmup Iteration  13: 104719.477 ops/ms
# Warmup Iteration  14: 104450.663 ops/ms
# Warmup Iteration  15: 104337.720 ops/ms
# Warmup Iteration  16: 104372.536 ops/ms
# Warmup Iteration  17: 104605.849 ops/ms
# Warmup Iteration  18: 104538.751 ops/ms
# Warmup Iteration  19: 104677.700 ops/ms
# Warmup Iteration  20: 104571.507 ops/ms
Iteration   1: 104409.762 ops/ms
Iteration   2: 104317.059 ops/ms
Iteration   3: 104663.576 ops/ms
Iteration   4: 103132.594 ops/ms
Iteration   5: 104284.668 ops/ms
Iteration   6: 104561.209 ops/ms
Iteration   7: 104625.446 ops/ms
Iteration   8: 104281.956 ops/ms
Iteration   9: 104685.837 ops/ms
Iteration  10: 104243.313 ops/ms
Iteration  11: 104559.532 ops/ms
Iteration  12: 104531.415 ops/ms
Iteration  13: 104449.700 ops/ms
Iteration  14: 104534.502 ops/ms
Iteration  15: 104373.229 ops/ms
Iteration  16: 104481.573 ops/ms
Iteration  17: 104529.917 ops/ms
Iteration  18: 104726.425 ops/ms
Iteration  19: 104446.048 ops/ms
Iteration  20: 104100.177 ops/ms

Result : 104396.897 ?(95%) 158.491 ?(99%) 216.647 ops/ms
  Statistics: (min, avg, max) = (103132.594, 104396.897, 104726.425), stdev = 338.649
  Confidence intervals: 95% [104238.406, 104555.388], 99% [104180.250, 104613.544]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 68167.227 ops/ms
# Warmup Iteration   2: 95961.409 ops/ms
# Warmup Iteration   3: 98255.763 ops/ms
# Warmup Iteration   4: 98567.718 ops/ms
# Warmup Iteration   5: 99660.929 ops/ms
# Warmup Iteration   6: 98938.456 ops/ms
# Warmup Iteration   7: 98943.072 ops/ms
# Warmup Iteration   8: 98834.383 ops/ms
# Warmup Iteration   9: 99900.122 ops/ms
# Warmup Iteration  10: 104125.739 ops/ms
# Warmup Iteration  11: 103825.822 ops/ms
# Warmup Iteration  12: 103468.752 ops/ms
# Warmup Iteration  13: 103811.674 ops/ms
# Warmup Iteration  14: 103593.562 ops/ms
# Warmup Iteration  15: 103782.073 ops/ms
# Warmup Iteration  16: 103852.388 ops/ms
# Warmup Iteration  17: 104804.533 ops/ms
# Warmup Iteration  18: 104773.392 ops/ms
# Warmup Iteration  19: 104760.996 ops/ms
# Warmup Iteration  20: 105022.326 ops/ms
Iteration   1: 104903.989 ops/ms
Iteration   2: 105147.880 ops/ms
Iteration   3: 105208.328 ops/ms
Iteration   4: 104690.070 ops/ms
Iteration   5: 104854.633 ops/ms
Iteration   6: 104778.465 ops/ms
Iteration   7: 105332.671 ops/ms
Iteration   8: 105060.710 ops/ms
Iteration   9: 104983.326 ops/ms
Iteration  10: 104279.052 ops/ms
Iteration  11: 104577.364 ops/ms
Iteration  12: 104930.788 ops/ms
Iteration  13: 105085.917 ops/ms
Iteration  14: 103775.461 ops/ms
Iteration  15: 104958.792 ops/ms
Iteration  16: 105283.147 ops/ms
Iteration  17: 105180.567 ops/ms
Iteration  18: 105117.993 ops/ms
Iteration  19: 105157.416 ops/ms
Iteration  20: 105336.885 ops/ms

Result : 104932.173 ?(95%) 177.730 ?(99%) 242.946 ops/ms
  Statistics: (min, avg, max) = (103775.461, 104932.173, 105336.885), stdev = 379.757
  Confidence intervals: 95% [104754.443, 105109.903], 99% [104689.227, 105175.118]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67297.759 ops/ms
# Warmup Iteration   2: 96251.591 ops/ms
# Warmup Iteration   3: 99722.365 ops/ms
# Warmup Iteration   4: 99748.452 ops/ms
# Warmup Iteration   5: 99814.794 ops/ms
# Warmup Iteration   6: 99827.848 ops/ms
# Warmup Iteration   7: 99843.693 ops/ms
# Warmup Iteration   8: 99582.546 ops/ms
# Warmup Iteration   9: 101529.620 ops/ms
# Warmup Iteration  10: 105082.503 ops/ms
# Warmup Iteration  11: 104884.306 ops/ms
# Warmup Iteration  12: 96560.025 ops/ms
# Warmup Iteration  13: 104892.770 ops/ms
# Warmup Iteration  14: 104917.285 ops/ms
# Warmup Iteration  15: 104603.197 ops/ms
# Warmup Iteration  16: 104961.849 ops/ms
# Warmup Iteration  17: 105046.006 ops/ms
# Warmup Iteration  18: 104520.648 ops/ms
# Warmup Iteration  19: 105045.062 ops/ms
# Warmup Iteration  20: 104867.041 ops/ms
Iteration   1: 104834.134 ops/ms
Iteration   2: 105085.472 ops/ms
Iteration   3: 104888.929 ops/ms
Iteration   4: 104641.335 ops/ms
Iteration   5: 104500.742 ops/ms
Iteration   6: 104803.988 ops/ms
Iteration   7: 105026.731 ops/ms
Iteration   8: 93903.167 ops/ms
Iteration   9: 104967.395 ops/ms
Iteration  10: 104936.388 ops/ms
Iteration  11: 104758.069 ops/ms
Iteration  12: 104653.444 ops/ms
Iteration  13: 104306.165 ops/ms
Iteration  14: 104608.423 ops/ms
Iteration  15: 104667.201 ops/ms
Iteration  16: 104725.592 ops/ms
Iteration  17: 104393.853 ops/ms
Iteration  18: 104573.871 ops/ms
Iteration  19: 104908.153 ops/ms
Iteration  20: 104861.790 ops/ms

Result : 104202.242 ?(95%) 1138.597 ?(99%) 1556.390 ops/ms
  Statistics: (min, avg, max) = (93903.167, 104202.242, 105085.472), stdev = 2432.852
  Confidence intervals: 95% [103063.645, 105340.839], 99% [102645.852, 105758.632]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 27.246 ops/ms
# Warmup Iteration   2: 38.973 ops/ms
# Warmup Iteration   3: 43.875 ops/ms
# Warmup Iteration   4: 46.824 ops/ms
# Warmup Iteration   5: 47.818 ops/ms
# Warmup Iteration   6: 47.735 ops/ms
# Warmup Iteration   7: 48.041 ops/ms
# Warmup Iteration   8: 48.210 ops/ms
# Warmup Iteration   9: 48.451 ops/ms
# Warmup Iteration  10: 48.583 ops/ms
# Warmup Iteration  11: 48.651 ops/ms
# Warmup Iteration  12: 48.553 ops/ms
# Warmup Iteration  13: 48.568 ops/ms
# Warmup Iteration  14: 48.441 ops/ms
# Warmup Iteration  15: 48.377 ops/ms
# Warmup Iteration  16: 48.614 ops/ms
# Warmup Iteration  17: 48.534 ops/ms
# Warmup Iteration  18: 48.622 ops/ms
# Warmup Iteration  19: 48.693 ops/ms
# Warmup Iteration  20: 48.752 ops/ms
Iteration   1: 48.621 ops/ms
Iteration   2: 48.661 ops/ms
Iteration   3: 48.647 ops/ms
Iteration   4: 48.610 ops/ms
Iteration   5: 48.691 ops/ms
Iteration   6: 48.659 ops/ms
Iteration   7: 48.699 ops/ms
Iteration   8: 48.586 ops/ms
Iteration   9: 48.760 ops/ms
Iteration  10: 48.714 ops/ms
Iteration  11: 48.516 ops/ms
Iteration  12: 48.704 ops/ms
Iteration  13: 48.683 ops/ms
Iteration  14: 48.512 ops/ms
Iteration  15: 48.744 ops/ms
Iteration  16: 48.531 ops/ms
Iteration  17: 48.488 ops/ms
Iteration  18: 48.719 ops/ms
Iteration  19: 48.546 ops/ms
Iteration  20: 48.518 ops/ms

Result : 48.630 ?(95%) 0.041 ?(99%) 0.055 ops/ms
  Statistics: (min, avg, max) = (48.488, 48.630, 48.760), stdev = 0.087
  Confidence intervals: 95% [48.590, 48.671], 99% [48.575, 48.686]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 28.796 ops/ms
# Warmup Iteration   2: 40.955 ops/ms
# Warmup Iteration   3: 45.382 ops/ms
# Warmup Iteration   4: 48.608 ops/ms
# Warmup Iteration   5: 49.398 ops/ms
# Warmup Iteration   6: 49.383 ops/ms
# Warmup Iteration   7: 49.578 ops/ms
# Warmup Iteration   8: 49.743 ops/ms
# Warmup Iteration   9: 49.823 ops/ms
# Warmup Iteration  10: 50.090 ops/ms
# Warmup Iteration  11: 50.080 ops/ms
# Warmup Iteration  12: 49.943 ops/ms
# Warmup Iteration  13: 50.015 ops/ms
# Warmup Iteration  14: 50.168 ops/ms
# Warmup Iteration  15: 46.185 ops/ms
# Warmup Iteration  16: 46.629 ops/ms
# Warmup Iteration  17: 49.590 ops/ms
# Warmup Iteration  18: 49.865 ops/ms
# Warmup Iteration  19: 49.962 ops/ms
# Warmup Iteration  20: 50.113 ops/ms
Iteration   1: 49.892 ops/ms
Iteration   2: 50.000 ops/ms
Iteration   3: 50.167 ops/ms
Iteration   4: 50.231 ops/ms
Iteration   5: 50.183 ops/ms
Iteration   6: 50.107 ops/ms
Iteration   7: 50.194 ops/ms
Iteration   8: 49.983 ops/ms
Iteration   9: 50.019 ops/ms
Iteration  10: 50.176 ops/ms
Iteration  11: 50.172 ops/ms
Iteration  12: 50.233 ops/ms
Iteration  13: 50.193 ops/ms
Iteration  14: 50.063 ops/ms
Iteration  15: 50.290 ops/ms
Iteration  16: 50.237 ops/ms
Iteration  17: 49.876 ops/ms
Iteration  18: 50.041 ops/ms
Iteration  19: 50.162 ops/ms
Iteration  20: 50.097 ops/ms

Result : 50.116 ?(95%) 0.054 ?(99%) 0.074 ops/ms
  Statistics: (min, avg, max) = (49.876, 50.116, 50.290), stdev = 0.116
  Confidence intervals: 95% [50.061, 50.170], 99% [50.042, 50.190]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 27.903 ops/ms
# Warmup Iteration   2: 37.874 ops/ms
# Warmup Iteration   3: 43.352 ops/ms
# Warmup Iteration   4: 46.811 ops/ms
# Warmup Iteration   5: 48.031 ops/ms
# Warmup Iteration   6: 47.969 ops/ms
# Warmup Iteration   7: 48.297 ops/ms
# Warmup Iteration   8: 48.179 ops/ms
# Warmup Iteration   9: 48.623 ops/ms
# Warmup Iteration  10: 48.828 ops/ms
# Warmup Iteration  11: 48.906 ops/ms
# Warmup Iteration  12: 48.621 ops/ms
# Warmup Iteration  13: 48.626 ops/ms
# Warmup Iteration  14: 48.693 ops/ms
# Warmup Iteration  15: 48.723 ops/ms
# Warmup Iteration  16: 48.808 ops/ms
# Warmup Iteration  17: 48.896 ops/ms
# Warmup Iteration  18: 48.937 ops/ms
# Warmup Iteration  19: 48.861 ops/ms
# Warmup Iteration  20: 49.036 ops/ms
Iteration   1: 49.094 ops/ms
Iteration   2: 49.029 ops/ms
Iteration   3: 49.148 ops/ms
Iteration   4: 48.357 ops/ms
Iteration   5: 48.865 ops/ms
Iteration   6: 48.932 ops/ms
Iteration   7: 49.057 ops/ms
Iteration   8: 48.578 ops/ms
Iteration   9: 48.789 ops/ms
Iteration  10: 49.178 ops/ms
Iteration  11: 48.957 ops/ms
Iteration  12: 49.094 ops/ms
Iteration  13: 49.153 ops/ms
Iteration  14: 49.133 ops/ms
Iteration  15: 48.954 ops/ms
Iteration  16: 49.131 ops/ms
Iteration  17: 49.052 ops/ms
Iteration  18: 49.105 ops/ms
Iteration  19: 48.874 ops/ms
Iteration  20: 48.963 ops/ms

Result : 48.972 ?(95%) 0.097 ?(99%) 0.132 ops/ms
  Statistics: (min, avg, max) = (48.357, 48.972, 49.178), stdev = 0.207
  Confidence intervals: 95% [48.875, 49.069], 99% [48.840, 49.104]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 28.680 ops/ms
# Warmup Iteration   2: 41.067 ops/ms
# Warmup Iteration   3: 46.726 ops/ms
# Warmup Iteration   4: 49.795 ops/ms
# Warmup Iteration   5: 50.434 ops/ms
# Warmup Iteration   6: 50.626 ops/ms
# Warmup Iteration   7: 51.084 ops/ms
# Warmup Iteration   8: 51.183 ops/ms
# Warmup Iteration   9: 51.244 ops/ms
# Warmup Iteration  10: 51.324 ops/ms
# Warmup Iteration  11: 50.023 ops/ms
# Warmup Iteration  12: 51.232 ops/ms
# Warmup Iteration  13: 51.318 ops/ms
# Warmup Iteration  14: 51.370 ops/ms
# Warmup Iteration  15: 51.381 ops/ms
# Warmup Iteration  16: 51.459 ops/ms
# Warmup Iteration  17: 51.305 ops/ms
# Warmup Iteration  18: 51.373 ops/ms
# Warmup Iteration  19: 51.495 ops/ms
# Warmup Iteration  20: 51.425 ops/ms
Iteration   1: 51.197 ops/ms
Iteration   2: 51.505 ops/ms
Iteration   3: 51.212 ops/ms
Iteration   4: 51.510 ops/ms
Iteration   5: 51.419 ops/ms
Iteration   6: 51.455 ops/ms
Iteration   7: 51.358 ops/ms
Iteration   8: 51.151 ops/ms
Iteration   9: 51.342 ops/ms
Iteration  10: 51.203 ops/ms
Iteration  11: 51.174 ops/ms
Iteration  12: 51.269 ops/ms
Iteration  13: 51.460 ops/ms
Iteration  14: 51.493 ops/ms
Iteration  15: 51.428 ops/ms
Iteration  16: 51.224 ops/ms
Iteration  17: 51.495 ops/ms
Iteration  18: 51.156 ops/ms
Iteration  19: 51.197 ops/ms
Iteration  20: 51.227 ops/ms

Result : 51.324 ?(95%) 0.063 ?(99%) 0.086 ops/ms
  Statistics: (min, avg, max) = (51.151, 51.324, 51.510), stdev = 0.135
  Confidence intervals: 95% [51.261, 51.387], 99% [51.238, 51.410]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 28.699 ops/ms
# Warmup Iteration   2: 41.109 ops/ms
# Warmup Iteration   3: 45.444 ops/ms
# Warmup Iteration   4: 48.584 ops/ms
# Warmup Iteration   5: 49.574 ops/ms
# Warmup Iteration   6: 49.695 ops/ms
# Warmup Iteration   7: 50.132 ops/ms
# Warmup Iteration   8: 50.092 ops/ms
# Warmup Iteration   9: 50.274 ops/ms
# Warmup Iteration  10: 50.165 ops/ms
# Warmup Iteration  11: 50.277 ops/ms
# Warmup Iteration  12: 50.258 ops/ms
# Warmup Iteration  13: 50.286 ops/ms
# Warmup Iteration  14: 50.209 ops/ms
# Warmup Iteration  15: 50.465 ops/ms
# Warmup Iteration  16: 50.167 ops/ms
# Warmup Iteration  17: 50.187 ops/ms
# Warmup Iteration  18: 50.167 ops/ms
# Warmup Iteration  19: 50.217 ops/ms
# Warmup Iteration  20: 50.236 ops/ms
Iteration   1: 49.733 ops/ms
Iteration   2: 50.167 ops/ms
Iteration   3: 50.273 ops/ms
Iteration   4: 50.363 ops/ms
Iteration   5: 50.385 ops/ms
Iteration   6: 50.125 ops/ms
Iteration   7: 50.416 ops/ms
Iteration   8: 50.367 ops/ms
Iteration   9: 50.138 ops/ms
Iteration  10: 50.401 ops/ms
Iteration  11: 50.161 ops/ms
Iteration  12: 50.272 ops/ms
Iteration  13: 50.348 ops/ms
Iteration  14: 50.375 ops/ms
Iteration  15: 50.216 ops/ms
Iteration  16: 50.203 ops/ms
Iteration  17: 50.195 ops/ms
Iteration  18: 50.400 ops/ms
Iteration  19: 50.453 ops/ms
Iteration  20: 50.472 ops/ms

Result : 50.273 ?(95%) 0.079 ?(99%) 0.108 ops/ms
  Statistics: (min, avg, max) = (49.733, 50.273, 50.472), stdev = 0.169
  Confidence intervals: 95% [50.194, 50.352], 99% [50.165, 50.381]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.965 ops/ms
# Warmup Iteration   2: 41.700 ops/ms
# Warmup Iteration   3: 48.242 ops/ms
# Warmup Iteration   4: 51.583 ops/ms
# Warmup Iteration   5: 52.792 ops/ms
# Warmup Iteration   6: 52.813 ops/ms
# Warmup Iteration   7: 53.254 ops/ms
# Warmup Iteration   8: 53.114 ops/ms
# Warmup Iteration   9: 53.270 ops/ms
# Warmup Iteration  10: 53.518 ops/ms
# Warmup Iteration  11: 53.458 ops/ms
# Warmup Iteration  12: 53.433 ops/ms
# Warmup Iteration  13: 53.514 ops/ms
# Warmup Iteration  14: 53.643 ops/ms
# Warmup Iteration  15: 53.451 ops/ms
# Warmup Iteration  16: 53.679 ops/ms
# Warmup Iteration  17: 53.609 ops/ms
# Warmup Iteration  18: 53.755 ops/ms
# Warmup Iteration  19: 53.756 ops/ms
# Warmup Iteration  20: 53.549 ops/ms
Iteration   1: 53.609 ops/ms
Iteration   2: 53.731 ops/ms
Iteration   3: 53.790 ops/ms
Iteration   4: 53.734 ops/ms
Iteration   5: 53.316 ops/ms
Iteration   6: 53.603 ops/ms
Iteration   7: 53.515 ops/ms
Iteration   8: 53.823 ops/ms
Iteration   9: 53.483 ops/ms
Iteration  10: 53.472 ops/ms
Iteration  11: 53.543 ops/ms
Iteration  12: 53.508 ops/ms
Iteration  13: 53.778 ops/ms
Iteration  14: 53.781 ops/ms
Iteration  15: 53.514 ops/ms
Iteration  16: 53.543 ops/ms
Iteration  17: 53.474 ops/ms
Iteration  18: 53.546 ops/ms
Iteration  19: 53.540 ops/ms
Iteration  20: 53.555 ops/ms

Result : 53.593 ?(95%) 0.063 ?(99%) 0.087 ops/ms
  Statistics: (min, avg, max) = (53.316, 53.593, 53.823), stdev = 0.136
  Confidence intervals: 95% [53.529, 53.656], 99% [53.506, 53.680]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.625 ops/ms
# Warmup Iteration   2: 41.570 ops/ms
# Warmup Iteration   3: 47.769 ops/ms
# Warmup Iteration   4: 51.417 ops/ms
# Warmup Iteration   5: 52.613 ops/ms
# Warmup Iteration   6: 52.478 ops/ms
# Warmup Iteration   7: 53.036 ops/ms
# Warmup Iteration   8: 53.021 ops/ms
# Warmup Iteration   9: 52.944 ops/ms
# Warmup Iteration  10: 53.267 ops/ms
# Warmup Iteration  11: 53.421 ops/ms
# Warmup Iteration  12: 53.402 ops/ms
# Warmup Iteration  13: 53.416 ops/ms
# Warmup Iteration  14: 53.474 ops/ms
# Warmup Iteration  15: 53.259 ops/ms
# Warmup Iteration  16: 53.422 ops/ms
# Warmup Iteration  17: 53.543 ops/ms
# Warmup Iteration  18: 53.389 ops/ms
# Warmup Iteration  19: 53.327 ops/ms
# Warmup Iteration  20: 53.429 ops/ms
Iteration   1: 53.326 ops/ms
Iteration   2: 53.249 ops/ms
Iteration   3: 53.333 ops/ms
Iteration   4: 53.154 ops/ms
Iteration   5: 53.134 ops/ms
Iteration   6: 53.394 ops/ms
Iteration   7: 53.452 ops/ms
Iteration   8: 53.233 ops/ms
Iteration   9: 53.362 ops/ms
Iteration  10: 53.342 ops/ms
Iteration  11: 53.405 ops/ms
Iteration  12: 53.192 ops/ms
Iteration  13: 53.383 ops/ms
Iteration  14: 53.075 ops/ms
Iteration  15: 53.407 ops/ms
Iteration  16: 53.203 ops/ms
Iteration  17: 53.326 ops/ms
Iteration  18: 53.095 ops/ms
Iteration  19: 53.193 ops/ms
Iteration  20: 53.136 ops/ms

Result : 53.270 ?(95%) 0.055 ?(99%) 0.075 ops/ms
  Statistics: (min, avg, max) = (53.075, 53.270, 53.452), stdev = 0.117
  Confidence intervals: 95% [53.215, 53.324], 99% [53.195, 53.344]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.403 ops/ms
# Warmup Iteration   2: 41.427 ops/ms
# Warmup Iteration   3: 47.481 ops/ms
# Warmup Iteration   4: 50.983 ops/ms
# Warmup Iteration   5: 52.118 ops/ms
# Warmup Iteration   6: 52.218 ops/ms
# Warmup Iteration   7: 52.385 ops/ms
# Warmup Iteration   8: 52.628 ops/ms
# Warmup Iteration   9: 52.833 ops/ms
# Warmup Iteration  10: 53.099 ops/ms
# Warmup Iteration  11: 52.813 ops/ms
# Warmup Iteration  12: 53.012 ops/ms
# Warmup Iteration  13: 53.124 ops/ms
# Warmup Iteration  14: 52.957 ops/ms
# Warmup Iteration  15: 53.145 ops/ms
# Warmup Iteration  16: 52.903 ops/ms
# Warmup Iteration  17: 53.121 ops/ms
# Warmup Iteration  18: 52.987 ops/ms
# Warmup Iteration  19: 53.156 ops/ms
# Warmup Iteration  20: 53.248 ops/ms
Iteration   1: 51.194 ops/ms
Iteration   2: 50.165 ops/ms
Iteration   3: 50.233 ops/ms
Iteration   4: 53.066 ops/ms
Iteration   5: 53.138 ops/ms
Iteration   6: 53.116 ops/ms
Iteration   7: 53.218 ops/ms
Iteration   8: 53.128 ops/ms
Iteration   9: 53.198 ops/ms
Iteration  10: 53.130 ops/ms
Iteration  11: 53.266 ops/ms
Iteration  12: 53.131 ops/ms
Iteration  13: 53.401 ops/ms
Iteration  14: 53.345 ops/ms
Iteration  15: 53.282 ops/ms
Iteration  16: 53.194 ops/ms
Iteration  17: 53.142 ops/ms
Iteration  18: 53.286 ops/ms
Iteration  19: 53.145 ops/ms
Iteration  20: 53.284 ops/ms

Result : 52.803 ?(95%) 0.468 ?(99%) 0.640 ops/ms
  Statistics: (min, avg, max) = (50.165, 52.803, 53.401), stdev = 1.001
  Confidence intervals: 95% [52.335, 53.271], 99% [52.163, 53.443]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 30.054 ops/ms
# Warmup Iteration   2: 42.620 ops/ms
# Warmup Iteration   3: 48.264 ops/ms
# Warmup Iteration   4: 51.642 ops/ms
# Warmup Iteration   5: 52.689 ops/ms
# Warmup Iteration   6: 52.678 ops/ms
# Warmup Iteration   7: 52.891 ops/ms
# Warmup Iteration   8: 52.778 ops/ms
# Warmup Iteration   9: 53.241 ops/ms
# Warmup Iteration  10: 53.403 ops/ms
# Warmup Iteration  11: 53.315 ops/ms
# Warmup Iteration  12: 53.475 ops/ms
# Warmup Iteration  13: 53.443 ops/ms
# Warmup Iteration  14: 53.504 ops/ms
# Warmup Iteration  15: 53.408 ops/ms
# Warmup Iteration  16: 53.587 ops/ms
# Warmup Iteration  17: 53.118 ops/ms
# Warmup Iteration  18: 53.557 ops/ms
# Warmup Iteration  19: 53.237 ops/ms
# Warmup Iteration  20: 53.263 ops/ms
Iteration   1: 53.322 ops/ms
Iteration   2: 53.319 ops/ms
Iteration   3: 53.507 ops/ms
Iteration   4: 53.198 ops/ms
Iteration   5: 53.514 ops/ms
Iteration   6: 53.267 ops/ms
Iteration   7: 53.492 ops/ms
Iteration   8: 53.566 ops/ms
Iteration   9: 53.355 ops/ms
Iteration  10: 52.661 ops/ms
Iteration  11: 53.528 ops/ms
Iteration  12: 53.323 ops/ms
Iteration  13: 53.102 ops/ms
Iteration  14: 53.286 ops/ms
Iteration  15: 53.558 ops/ms
Iteration  16: 53.298 ops/ms
Iteration  17: 53.224 ops/ms
Iteration  18: 53.548 ops/ms
Iteration  19: 53.318 ops/ms
Iteration  20: 53.544 ops/ms

Result : 53.347 ?(95%) 0.100 ?(99%) 0.136 ops/ms
  Statistics: (min, avg, max) = (52.661, 53.347, 53.566), stdev = 0.213
  Confidence intervals: 95% [53.247, 53.446], 99% [53.210, 53.483]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.662 ops/ms
# Warmup Iteration   2: 42.003 ops/ms
# Warmup Iteration   3: 47.793 ops/ms
# Warmup Iteration   4: 51.316 ops/ms
# Warmup Iteration   5: 52.286 ops/ms
# Warmup Iteration   6: 52.331 ops/ms
# Warmup Iteration   7: 52.544 ops/ms
# Warmup Iteration   8: 52.740 ops/ms
# Warmup Iteration   9: 52.935 ops/ms
# Warmup Iteration  10: 53.162 ops/ms
# Warmup Iteration  11: 53.246 ops/ms
# Warmup Iteration  12: 53.086 ops/ms
# Warmup Iteration  13: 53.114 ops/ms
# Warmup Iteration  14: 53.272 ops/ms
# Warmup Iteration  15: 53.132 ops/ms
# Warmup Iteration  16: 53.181 ops/ms
# Warmup Iteration  17: 52.860 ops/ms
# Warmup Iteration  18: 53.179 ops/ms
# Warmup Iteration  19: 53.207 ops/ms
# Warmup Iteration  20: 52.913 ops/ms
Iteration   1: 53.099 ops/ms
Iteration   2: 53.022 ops/ms
Iteration   3: 52.985 ops/ms
Iteration   4: 53.035 ops/ms
Iteration   5: 53.145 ops/ms
Iteration   6: 53.264 ops/ms
Iteration   7: 53.222 ops/ms
Iteration   8: 53.165 ops/ms
Iteration   9: 53.173 ops/ms
Iteration  10: 53.203 ops/ms
Iteration  11: 53.073 ops/ms
Iteration  12: 53.229 ops/ms
Iteration  13: 53.231 ops/ms
Iteration  14: 52.929 ops/ms
Iteration  15: 53.224 ops/ms
Iteration  16: 53.088 ops/ms
Iteration  17: 53.052 ops/ms
Iteration  18: 52.896 ops/ms
Iteration  19: 52.976 ops/ms
Iteration  20: 53.186 ops/ms

Result : 53.110 ?(95%) 0.052 ?(99%) 0.071 ops/ms
  Statistics: (min, avg, max) = (52.896, 53.110, 53.264), stdev = 0.110
  Confidence intervals: 95% [53.058, 53.162], 99% [53.039, 53.181]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 45.856 ops/ms
# Warmup Iteration   2: 69.001 ops/ms
# Warmup Iteration   3: 77.561 ops/ms
# Warmup Iteration   4: 81.638 ops/ms
# Warmup Iteration   5: 82.949 ops/ms
# Warmup Iteration   6: 82.899 ops/ms
# Warmup Iteration   7: 83.198 ops/ms
# Warmup Iteration   8: 83.068 ops/ms
# Warmup Iteration   9: 83.959 ops/ms
# Warmup Iteration  10: 83.781 ops/ms
# Warmup Iteration  11: 84.178 ops/ms
# Warmup Iteration  12: 84.232 ops/ms
# Warmup Iteration  13: 84.104 ops/ms
# Warmup Iteration  14: 83.893 ops/ms
# Warmup Iteration  15: 83.969 ops/ms
# Warmup Iteration  16: 84.288 ops/ms
# Warmup Iteration  17: 83.907 ops/ms
# Warmup Iteration  18: 83.954 ops/ms
# Warmup Iteration  19: 84.261 ops/ms
# Warmup Iteration  20: 84.017 ops/ms
Iteration   1: 84.061 ops/ms
Iteration   2: 84.192 ops/ms
Iteration   3: 84.026 ops/ms
Iteration   4: 83.822 ops/ms
Iteration   5: 83.942 ops/ms
Iteration   6: 84.301 ops/ms
Iteration   7: 83.911 ops/ms
Iteration   8: 84.016 ops/ms
Iteration   9: 84.166 ops/ms
Iteration  10: 83.971 ops/ms
Iteration  11: 84.271 ops/ms
Iteration  12: 84.109 ops/ms
Iteration  13: 84.215 ops/ms
Iteration  14: 83.923 ops/ms
Iteration  15: 83.846 ops/ms
Iteration  16: 83.968 ops/ms
Iteration  17: 83.809 ops/ms
Iteration  18: 84.351 ops/ms
Iteration  19: 83.778 ops/ms
Iteration  20: 83.997 ops/ms

Result : 84.034 ?(95%) 0.080 ?(99%) 0.109 ops/ms
  Statistics: (min, avg, max) = (83.778, 84.034, 84.351), stdev = 0.170
  Confidence intervals: 95% [83.954, 84.114], 99% [83.925, 84.143]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 45.439 ops/ms
# Warmup Iteration   2: 67.092 ops/ms
# Warmup Iteration   3: 76.579 ops/ms
# Warmup Iteration   4: 81.050 ops/ms
# Warmup Iteration   5: 82.314 ops/ms
# Warmup Iteration   6: 81.975 ops/ms
# Warmup Iteration   7: 82.748 ops/ms
# Warmup Iteration   8: 82.844 ops/ms
# Warmup Iteration   9: 83.049 ops/ms
# Warmup Iteration  10: 83.390 ops/ms
# Warmup Iteration  11: 83.475 ops/ms
# Warmup Iteration  12: 83.296 ops/ms
# Warmup Iteration  13: 83.546 ops/ms
# Warmup Iteration  14: 83.394 ops/ms
# Warmup Iteration  15: 83.364 ops/ms
# Warmup Iteration  16: 83.465 ops/ms
# Warmup Iteration  17: 83.151 ops/ms
# Warmup Iteration  18: 83.411 ops/ms
# Warmup Iteration  19: 83.161 ops/ms
# Warmup Iteration  20: 83.507 ops/ms
Iteration   1: 83.436 ops/ms
Iteration   2: 83.189 ops/ms
Iteration   3: 83.441 ops/ms
Iteration   4: 83.087 ops/ms
Iteration   5: 83.339 ops/ms
Iteration   6: 83.437 ops/ms
Iteration   7: 83.430 ops/ms
Iteration   8: 83.624 ops/ms
Iteration   9: 83.317 ops/ms
Iteration  10: 83.475 ops/ms
Iteration  11: 83.387 ops/ms
Iteration  12: 83.282 ops/ms
Iteration  13: 83.394 ops/ms
Iteration  14: 83.572 ops/ms
Iteration  15: 83.588 ops/ms
Iteration  16: 83.315 ops/ms
Iteration  17: 83.217 ops/ms
Iteration  18: 83.614 ops/ms
Iteration  19: 83.403 ops/ms
Iteration  20: 83.252 ops/ms

Result : 83.390 ?(95%) 0.068 ?(99%) 0.093 ops/ms
  Statistics: (min, avg, max) = (83.087, 83.390, 83.624), stdev = 0.145
  Confidence intervals: 95% [83.322, 83.458], 99% [83.297, 83.483]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 45.716 ops/ms
# Warmup Iteration   2: 67.772 ops/ms
# Warmup Iteration   3: 76.204 ops/ms
# Warmup Iteration   4: 81.585 ops/ms
# Warmup Iteration   5: 82.953 ops/ms
# Warmup Iteration   6: 83.107 ops/ms
# Warmup Iteration   7: 83.507 ops/ms
# Warmup Iteration   8: 83.578 ops/ms
# Warmup Iteration   9: 83.999 ops/ms
# Warmup Iteration  10: 83.972 ops/ms
# Warmup Iteration  11: 84.055 ops/ms
# Warmup Iteration  12: 84.344 ops/ms
# Warmup Iteration  13: 84.313 ops/ms
# Warmup Iteration  14: 84.009 ops/ms
# Warmup Iteration  15: 83.980 ops/ms
# Warmup Iteration  16: 84.345 ops/ms
# Warmup Iteration  17: 84.043 ops/ms
# Warmup Iteration  18: 84.037 ops/ms
# Warmup Iteration  19: 84.113 ops/ms
# Warmup Iteration  20: 84.400 ops/ms
Iteration   1: 83.948 ops/ms
Iteration   2: 84.368 ops/ms
Iteration   3: 84.289 ops/ms
Iteration   4: 84.061 ops/ms
Iteration   5: 84.159 ops/ms
Iteration   6: 84.323 ops/ms
Iteration   7: 84.405 ops/ms
Iteration   8: 84.023 ops/ms
Iteration   9: 84.333 ops/ms
Iteration  10: 84.408 ops/ms
Iteration  11: 84.374 ops/ms
Iteration  12: 84.300 ops/ms
Iteration  13: 84.349 ops/ms
Iteration  14: 84.147 ops/ms
Iteration  15: 84.355 ops/ms
Iteration  16: 84.063 ops/ms
Iteration  17: 84.123 ops/ms
Iteration  18: 84.073 ops/ms
Iteration  19: 84.361 ops/ms
Iteration  20: 84.264 ops/ms

Result : 84.236 ?(95%) 0.068 ?(99%) 0.093 ops/ms
  Statistics: (min, avg, max) = (83.948, 84.236, 84.408), stdev = 0.146
  Confidence intervals: 95% [84.168, 84.304], 99% [84.143, 84.329]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 44.973 ops/ms
# Warmup Iteration   2: 66.558 ops/ms
# Warmup Iteration   3: 73.523 ops/ms
# Warmup Iteration   4: 77.964 ops/ms
# Warmup Iteration   5: 79.211 ops/ms
# Warmup Iteration   6: 78.923 ops/ms
# Warmup Iteration   7: 79.748 ops/ms
# Warmup Iteration   8: 79.642 ops/ms
# Warmup Iteration   9: 79.854 ops/ms
# Warmup Iteration  10: 80.188 ops/ms
# Warmup Iteration  11: 80.252 ops/ms
# Warmup Iteration  12: 80.301 ops/ms
# Warmup Iteration  13: 80.052 ops/ms
# Warmup Iteration  14: 80.339 ops/ms
# Warmup Iteration  15: 80.230 ops/ms
# Warmup Iteration  16: 80.153 ops/ms
# Warmup Iteration  17: 80.172 ops/ms
# Warmup Iteration  18: 80.158 ops/ms
# Warmup Iteration  19: 80.374 ops/ms
# Warmup Iteration  20: 80.341 ops/ms
Iteration   1: 80.347 ops/ms
Iteration   2: 80.363 ops/ms
Iteration   3: 80.341 ops/ms
Iteration   4: 79.933 ops/ms
Iteration   5: 80.077 ops/ms
Iteration   6: 80.272 ops/ms
Iteration   7: 80.332 ops/ms
Iteration   8: 75.837 ops/ms
Iteration   9: 77.956 ops/ms
Iteration  10: 73.992 ops/ms
Iteration  11: 79.221 ops/ms
Iteration  12: 80.481 ops/ms
Iteration  13: 80.090 ops/ms
Iteration  14: 79.840 ops/ms
Iteration  15: 80.346 ops/ms
Iteration  16: 80.093 ops/ms
Iteration  17: 80.031 ops/ms
Iteration  18: 80.394 ops/ms
Iteration  19: 80.088 ops/ms
Iteration  20: 80.195 ops/ms

Result : 79.512 ?(95%) 0.793 ?(99%) 1.084 ops/ms
  Statistics: (min, avg, max) = (73.992, 79.512, 80.481), stdev = 1.695
  Confidence intervals: 95% [78.718, 80.305], 99% [78.427, 80.596]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 45.684 ops/ms
# Warmup Iteration   2: 67.584 ops/ms
# Warmup Iteration   3: 74.889 ops/ms
# Warmup Iteration   4: 80.048 ops/ms
# Warmup Iteration   5: 81.240 ops/ms
# Warmup Iteration   6: 81.020 ops/ms
# Warmup Iteration   7: 81.920 ops/ms
# Warmup Iteration   8: 82.002 ops/ms
# Warmup Iteration   9: 82.026 ops/ms
# Warmup Iteration  10: 82.267 ops/ms
# Warmup Iteration  11: 82.545 ops/ms
# Warmup Iteration  12: 82.336 ops/ms
# Warmup Iteration  13: 82.479 ops/ms
# Warmup Iteration  14: 81.983 ops/ms
# Warmup Iteration  15: 82.027 ops/ms
# Warmup Iteration  16: 82.338 ops/ms
# Warmup Iteration  17: 82.407 ops/ms
# Warmup Iteration  18: 82.439 ops/ms
# Warmup Iteration  19: 82.322 ops/ms
# Warmup Iteration  20: 82.729 ops/ms
Iteration   1: 82.332 ops/ms
Iteration   2: 82.379 ops/ms
Iteration   3: 82.780 ops/ms
Iteration   4: 82.176 ops/ms
Iteration   5: 82.354 ops/ms
Iteration   6: 82.746 ops/ms
Iteration   7: 82.589 ops/ms
Iteration   8: 82.395 ops/ms
Iteration   9: 82.470 ops/ms
Iteration  10: 82.365 ops/ms
Iteration  11: 82.766 ops/ms
Iteration  12: 82.586 ops/ms
Iteration  13: 82.276 ops/ms
Iteration  14: 82.401 ops/ms
Iteration  15: 82.280 ops/ms
Iteration  16: 82.281 ops/ms
Iteration  17: 81.948 ops/ms
Iteration  18: 82.804 ops/ms
Iteration  19: 82.638 ops/ms
Iteration  20: 82.365 ops/ms

Result : 82.447 ?(95%) 0.105 ?(99%) 0.144 ops/ms
  Statistics: (min, avg, max) = (81.948, 82.447, 82.804), stdev = 0.225
  Confidence intervals: 95% [82.341, 82.552], 99% [82.303, 82.590]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38231.007 ops/ms
# Warmup Iteration   2: 50646.597 ops/ms
# Warmup Iteration   3: 54984.303 ops/ms
# Warmup Iteration   4: 54770.466 ops/ms
# Warmup Iteration   5: 54724.720 ops/ms
# Warmup Iteration   6: 54825.757 ops/ms
# Warmup Iteration   7: 54878.813 ops/ms
# Warmup Iteration   8: 54932.718 ops/ms
# Warmup Iteration   9: 55498.832 ops/ms
# Warmup Iteration  10: 56032.329 ops/ms
# Warmup Iteration  11: 56283.400 ops/ms
# Warmup Iteration  12: 56213.205 ops/ms
# Warmup Iteration  13: 56196.363 ops/ms
# Warmup Iteration  14: 55119.106 ops/ms
# Warmup Iteration  15: 56290.813 ops/ms
# Warmup Iteration  16: 56238.875 ops/ms
# Warmup Iteration  17: 56268.815 ops/ms
# Warmup Iteration  18: 56081.145 ops/ms
# Warmup Iteration  19: 55997.124 ops/ms
# Warmup Iteration  20: 55902.104 ops/ms
Iteration   1: 56095.009 ops/ms
Iteration   2: 56276.049 ops/ms
Iteration   3: 56197.185 ops/ms
Iteration   4: 56288.542 ops/ms
Iteration   5: 56177.928 ops/ms
Iteration   6: 56272.998 ops/ms
Iteration   7: 56384.316 ops/ms
Iteration   8: 56226.448 ops/ms
Iteration   9: 55643.618 ops/ms
Iteration  10: 56155.440 ops/ms
Iteration  11: 56272.645 ops/ms
Iteration  12: 56250.230 ops/ms
Iteration  13: 56248.869 ops/ms
Iteration  14: 56306.426 ops/ms
Iteration  15: 56134.947 ops/ms
Iteration  16: 56093.535 ops/ms
Iteration  17: 56371.180 ops/ms
Iteration  18: 56186.692 ops/ms
Iteration  19: 55811.932 ops/ms
Iteration  20: 56181.143 ops/ms

Result : 56178.757 ?(95%) 82.134 ?(99%) 112.271 ops/ms
  Statistics: (min, avg, max) = (55643.618, 56178.757, 56384.316), stdev = 175.496
  Confidence intervals: 95% [56096.623, 56260.890], 99% [56066.485, 56291.028]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38640.925 ops/ms
# Warmup Iteration   2: 51034.910 ops/ms
# Warmup Iteration   3: 54787.065 ops/ms
# Warmup Iteration   4: 54860.119 ops/ms
# Warmup Iteration   5: 54812.765 ops/ms
# Warmup Iteration   6: 54937.645 ops/ms
# Warmup Iteration   7: 54781.822 ops/ms
# Warmup Iteration   8: 54726.100 ops/ms
# Warmup Iteration   9: 55290.357 ops/ms
# Warmup Iteration  10: 56080.066 ops/ms
# Warmup Iteration  11: 56312.367 ops/ms
# Warmup Iteration  12: 56175.108 ops/ms
# Warmup Iteration  13: 56314.472 ops/ms
# Warmup Iteration  14: 56364.206 ops/ms
# Warmup Iteration  15: 56361.979 ops/ms
# Warmup Iteration  16: 56304.365 ops/ms
# Warmup Iteration  17: 56107.113 ops/ms
# Warmup Iteration  18: 56293.041 ops/ms
# Warmup Iteration  19: 56316.307 ops/ms
# Warmup Iteration  20: 56396.222 ops/ms
Iteration   1: 56175.893 ops/ms
Iteration   2: 56011.006 ops/ms
Iteration   3: 56267.001 ops/ms
Iteration   4: 56165.454 ops/ms
Iteration   5: 56290.999 ops/ms
Iteration   6: 56204.835 ops/ms
Iteration   7: 56195.809 ops/ms
Iteration   8: 56343.312 ops/ms
Iteration   9: 56141.584 ops/ms
Iteration  10: 56198.434 ops/ms
Iteration  11: 56188.615 ops/ms
Iteration  12: 56129.162 ops/ms
Iteration  13: 56169.200 ops/ms
Iteration  14: 56245.097 ops/ms
Iteration  15: 56389.046 ops/ms
Iteration  16: 56274.460 ops/ms
Iteration  17: 56260.719 ops/ms
Iteration  18: 56313.959 ops/ms
Iteration  19: 56312.260 ops/ms
Iteration  20: 56310.798 ops/ms

Result : 56229.382 ?(95%) 41.299 ?(99%) 56.454 ops/ms
  Statistics: (min, avg, max) = (56011.006, 56229.382, 56389.046), stdev = 88.245
  Confidence intervals: 95% [56188.083, 56270.681], 99% [56172.928, 56285.836]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38495.801 ops/ms
# Warmup Iteration   2: 50718.400 ops/ms
# Warmup Iteration   3: 54938.499 ops/ms
# Warmup Iteration   4: 54974.945 ops/ms
# Warmup Iteration   5: 54713.053 ops/ms
# Warmup Iteration   6: 54971.195 ops/ms
# Warmup Iteration   7: 54683.621 ops/ms
# Warmup Iteration   8: 54695.793 ops/ms
# Warmup Iteration   9: 55160.113 ops/ms
# Warmup Iteration  10: 56121.201 ops/ms
# Warmup Iteration  11: 56197.501 ops/ms
# Warmup Iteration  12: 56194.163 ops/ms
# Warmup Iteration  13: 56263.145 ops/ms
# Warmup Iteration  14: 56095.809 ops/ms
# Warmup Iteration  15: 56276.860 ops/ms
# Warmup Iteration  16: 56356.634 ops/ms
# Warmup Iteration  17: 56248.946 ops/ms
# Warmup Iteration  18: 56080.264 ops/ms
# Warmup Iteration  19: 56080.068 ops/ms
# Warmup Iteration  20: 56118.198 ops/ms
Iteration   1: 55847.959 ops/ms
Iteration   2: 56150.311 ops/ms
Iteration   3: 56303.775 ops/ms
Iteration   4: 56279.282 ops/ms
Iteration   5: 56078.139 ops/ms
Iteration   6: 56219.818 ops/ms
Iteration   7: 56119.390 ops/ms
Iteration   8: 55914.264 ops/ms
Iteration   9: 56080.748 ops/ms
Iteration  10: 56086.346 ops/ms
Iteration  11: 56182.480 ops/ms
Iteration  12: 56335.403 ops/ms
Iteration  13: 56196.454 ops/ms
Iteration  14: 56227.647 ops/ms
Iteration  15: 56182.007 ops/ms
Iteration  16: 56278.198 ops/ms
Iteration  17: 56173.138 ops/ms
Iteration  18: 56261.831 ops/ms
Iteration  19: 56142.398 ops/ms
Iteration  20: 56228.020 ops/ms

Result : 56164.381 ?(95%) 57.129 ?(99%) 78.091 ops/ms
  Statistics: (min, avg, max) = (55847.959, 56164.381, 56335.403), stdev = 122.068
  Confidence intervals: 95% [56107.252, 56221.509], 99% [56086.289, 56242.472]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38751.005 ops/ms
# Warmup Iteration   2: 50487.585 ops/ms
# Warmup Iteration   3: 54745.485 ops/ms
# Warmup Iteration   4: 54814.073 ops/ms
# Warmup Iteration   5: 54752.704 ops/ms
# Warmup Iteration   6: 54748.962 ops/ms
# Warmup Iteration   7: 54839.659 ops/ms
# Warmup Iteration   8: 54808.710 ops/ms
# Warmup Iteration   9: 55413.335 ops/ms
# Warmup Iteration  10: 56145.257 ops/ms
# Warmup Iteration  11: 56475.129 ops/ms
# Warmup Iteration  12: 56332.403 ops/ms
# Warmup Iteration  13: 56220.865 ops/ms
# Warmup Iteration  14: 56111.129 ops/ms
# Warmup Iteration  15: 56354.542 ops/ms
# Warmup Iteration  16: 56321.177 ops/ms
# Warmup Iteration  17: 56291.425 ops/ms
# Warmup Iteration  18: 56189.596 ops/ms
# Warmup Iteration  19: 55249.418 ops/ms
# Warmup Iteration  20: 56162.746 ops/ms
Iteration   1: 56340.765 ops/ms
Iteration   2: 54994.676 ops/ms
Iteration   3: 56066.008 ops/ms
Iteration   4: 56017.577 ops/ms
Iteration   5: 56208.876 ops/ms
Iteration   6: 56143.531 ops/ms
Iteration   7: 56179.665 ops/ms
Iteration   8: 56224.820 ops/ms
Iteration   9: 56221.883 ops/ms
Iteration  10: 56334.123 ops/ms
Iteration  11: 56337.804 ops/ms
Iteration  12: 56139.135 ops/ms
Iteration  13: 56425.944 ops/ms
Iteration  14: 56058.118 ops/ms
Iteration  15: 55975.688 ops/ms
Iteration  16: 56217.135 ops/ms
Iteration  17: 56229.896 ops/ms
Iteration  18: 55165.458 ops/ms
Iteration  19: 56295.817 ops/ms
Iteration  20: 55839.157 ops/ms

Result : 56070.804 ?(95%) 172.052 ?(99%) 235.185 ops/ms
  Statistics: (min, avg, max) = (54994.676, 56070.804, 56425.944), stdev = 367.626
  Confidence intervals: 95% [55898.751, 56242.856], 99% [55835.619, 56305.989]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38453.745 ops/ms
# Warmup Iteration   2: 50619.001 ops/ms
# Warmup Iteration   3: 54850.792 ops/ms
# Warmup Iteration   4: 54912.343 ops/ms
# Warmup Iteration   5: 55006.852 ops/ms
# Warmup Iteration   6: 54911.342 ops/ms
# Warmup Iteration   7: 54901.596 ops/ms
# Warmup Iteration   8: 54007.790 ops/ms
# Warmup Iteration   9: 55639.028 ops/ms
# Warmup Iteration  10: 56290.626 ops/ms
# Warmup Iteration  11: 56378.467 ops/ms
# Warmup Iteration  12: 56076.533 ops/ms
# Warmup Iteration  13: 56381.618 ops/ms
# Warmup Iteration  14: 56237.996 ops/ms
# Warmup Iteration  15: 56258.178 ops/ms
# Warmup Iteration  16: 56308.524 ops/ms
# Warmup Iteration  17: 56263.206 ops/ms
# Warmup Iteration  18: 56089.048 ops/ms
# Warmup Iteration  19: 56232.286 ops/ms
# Warmup Iteration  20: 56297.984 ops/ms
Iteration   1: 56236.837 ops/ms
Iteration   2: 56155.936 ops/ms
Iteration   3: 56221.932 ops/ms
Iteration   4: 56328.042 ops/ms
Iteration   5: 56249.338 ops/ms
Iteration   6: 56203.598 ops/ms
Iteration   7: 56258.726 ops/ms
Iteration   8: 56300.523 ops/ms
Iteration   9: 56199.694 ops/ms
Iteration  10: 56250.640 ops/ms
Iteration  11: 55908.003 ops/ms
Iteration  12: 55832.655 ops/ms
Iteration  13: 56115.545 ops/ms
Iteration  14: 54219.732 ops/ms
Iteration  15: 51950.582 ops/ms
Iteration  16: 53771.580 ops/ms
Iteration  17: 55767.022 ops/ms
Iteration  18: 56196.088 ops/ms
Iteration  19: 55950.970 ops/ms
Iteration  20: 56236.912 ops/ms

Result : 55717.718 ?(95%) 523.154 ?(99%) 715.118 ops/ms
  Statistics: (min, avg, max) = (51950.583, 55717.718, 56328.042), stdev = 1117.828
  Confidence intervals: 95% [55194.564, 56240.871], 99% [55002.600, 56432.836]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 820.276 ops/ms
# Warmup Iteration   2: 1295.934 ops/ms
# Warmup Iteration   3: 1229.325 ops/ms
# Warmup Iteration   4: 1230.595 ops/ms
# Warmup Iteration   5: 1301.558 ops/ms
# Warmup Iteration   6: 1261.081 ops/ms
# Warmup Iteration   7: 1294.674 ops/ms
# Warmup Iteration   8: 1303.669 ops/ms
# Warmup Iteration   9: 1311.197 ops/ms
# Warmup Iteration  10: 1312.404 ops/ms
# Warmup Iteration  11: 1317.906 ops/ms
# Warmup Iteration  12: 1313.062 ops/ms
# Warmup Iteration  13: 1315.441 ops/ms
# Warmup Iteration  14: 1294.785 ops/ms
# Warmup Iteration  15: 1294.349 ops/ms
# Warmup Iteration  16: 1306.556 ops/ms
# Warmup Iteration  17: 1305.865 ops/ms
# Warmup Iteration  18: 1315.163 ops/ms
# Warmup Iteration  19: 1310.188 ops/ms
# Warmup Iteration  20: 1304.519 ops/ms
Iteration   1: 1311.374 ops/ms
Iteration   2: 1315.873 ops/ms
Iteration   3: 1317.517 ops/ms
Iteration   4: 1312.371 ops/ms
Iteration   5: 1316.216 ops/ms
Iteration   6: 1310.788 ops/ms
Iteration   7: 1312.880 ops/ms
Iteration   8: 1314.357 ops/ms
Iteration   9: 1312.490 ops/ms
Iteration  10: 1315.517 ops/ms
Iteration  11: 1306.964 ops/ms
Iteration  12: 1313.353 ops/ms
Iteration  13: 1315.711 ops/ms
Iteration  14: 1316.642 ops/ms
Iteration  15: 1313.972 ops/ms
Iteration  16: 1313.474 ops/ms
Iteration  17: 1311.223 ops/ms
Iteration  18: 1313.120 ops/ms
Iteration  19: 1316.532 ops/ms
Iteration  20: 1311.352 ops/ms

Result : 1313.586 ?(95%) 1.201 ?(99%) 1.642 ops/ms
  Statistics: (min, avg, max) = (1306.964, 1313.586, 1317.517), stdev = 2.567
  Confidence intervals: 95% [1312.385, 1314.788], 99% [1311.944, 1315.229]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 790.229 ops/ms
# Warmup Iteration   2: 1299.289 ops/ms
# Warmup Iteration   3: 1229.861 ops/ms
# Warmup Iteration   4: 1226.443 ops/ms
# Warmup Iteration   5: 1307.527 ops/ms
# Warmup Iteration   6: 1303.108 ops/ms
# Warmup Iteration   7: 1302.092 ops/ms
# Warmup Iteration   8: 1307.072 ops/ms
# Warmup Iteration   9: 1312.887 ops/ms
# Warmup Iteration  10: 1324.978 ops/ms
# Warmup Iteration  11: 1323.748 ops/ms
# Warmup Iteration  12: 1321.158 ops/ms
# Warmup Iteration  13: 1319.863 ops/ms
# Warmup Iteration  14: 1325.818 ops/ms
# Warmup Iteration  15: 1321.165 ops/ms
# Warmup Iteration  16: 1325.516 ops/ms
# Warmup Iteration  17: 1324.089 ops/ms
# Warmup Iteration  18: 1322.676 ops/ms
# Warmup Iteration  19: 1324.595 ops/ms
# Warmup Iteration  20: 1329.059 ops/ms
Iteration   1: 1322.507 ops/ms
Iteration   2: 1323.678 ops/ms
Iteration   3: 1322.409 ops/ms
Iteration   4: 1322.091 ops/ms
Iteration   5: 1322.978 ops/ms
Iteration   6: 1325.521 ops/ms
Iteration   7: 1323.783 ops/ms
Iteration   8: 1320.527 ops/ms
Iteration   9: 1316.477 ops/ms
Iteration  10: 1308.171 ops/ms
Iteration  11: 1325.206 ops/ms
Iteration  12: 1321.458 ops/ms
Iteration  13: 1320.857 ops/ms
Iteration  14: 1323.729 ops/ms
Iteration  15: 1321.774 ops/ms
Iteration  16: 1321.932 ops/ms
Iteration  17: 1323.093 ops/ms
Iteration  18: 1321.562 ops/ms
Iteration  19: 1322.958 ops/ms
Iteration  20: 1320.951 ops/ms

Result : 1321.583 ?(95%) 1.726 ?(99%) 2.360 ops/ms
  Statistics: (min, avg, max) = (1308.171, 1321.583, 1325.521), stdev = 3.689
  Confidence intervals: 95% [1319.857, 1323.310], 99% [1319.223, 1323.943]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 822.217 ops/ms
# Warmup Iteration   2: 1269.780 ops/ms
# Warmup Iteration   3: 1205.457 ops/ms
# Warmup Iteration   4: 1199.931 ops/ms
# Warmup Iteration   5: 1273.445 ops/ms
# Warmup Iteration   6: 1266.371 ops/ms
# Warmup Iteration   7: 1272.592 ops/ms
# Warmup Iteration   8: 1274.556 ops/ms
# Warmup Iteration   9: 1277.784 ops/ms
# Warmup Iteration  10: 1287.098 ops/ms
# Warmup Iteration  11: 1288.706 ops/ms
# Warmup Iteration  12: 1281.766 ops/ms
# Warmup Iteration  13: 1287.240 ops/ms
# Warmup Iteration  14: 1283.204 ops/ms
# Warmup Iteration  15: 1281.998 ops/ms
# Warmup Iteration  16: 1288.841 ops/ms
# Warmup Iteration  17: 1291.093 ops/ms
# Warmup Iteration  18: 1287.015 ops/ms
# Warmup Iteration  19: 1286.752 ops/ms
# Warmup Iteration  20: 1283.811 ops/ms
Iteration   1: 1287.291 ops/ms
Iteration   2: 1287.925 ops/ms
Iteration   3: 1287.919 ops/ms
Iteration   4: 1290.199 ops/ms
Iteration   5: 1286.338 ops/ms
Iteration   6: 1287.962 ops/ms
Iteration   7: 1288.924 ops/ms
Iteration   8: 1291.078 ops/ms
Iteration   9: 1287.680 ops/ms
Iteration  10: 1291.245 ops/ms
Iteration  11: 1290.467 ops/ms
Iteration  12: 1288.736 ops/ms
Iteration  13: 1287.538 ops/ms
Iteration  14: 1282.987 ops/ms
Iteration  15: 1285.305 ops/ms
Iteration  16: 1288.107 ops/ms
Iteration  17: 1288.176 ops/ms
Iteration  18: 1288.831 ops/ms
Iteration  19: 1289.549 ops/ms
Iteration  20: 1285.578 ops/ms

Result : 1288.092 ?(95%) 0.943 ?(99%) 1.289 ops/ms
  Statistics: (min, avg, max) = (1282.987, 1288.092, 1291.245), stdev = 2.015
  Confidence intervals: 95% [1287.149, 1289.035], 99% [1286.803, 1289.381]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 793.117 ops/ms
# Warmup Iteration   2: 1265.338 ops/ms
# Warmup Iteration   3: 1259.267 ops/ms
# Warmup Iteration   4: 1106.498 ops/ms
# Warmup Iteration   5: 1259.643 ops/ms
# Warmup Iteration   6: 1253.537 ops/ms
# Warmup Iteration   7: 1253.967 ops/ms
# Warmup Iteration   8: 1252.813 ops/ms
# Warmup Iteration   9: 1258.687 ops/ms
# Warmup Iteration  10: 1271.185 ops/ms
# Warmup Iteration  11: 1275.048 ops/ms
# Warmup Iteration  12: 1271.899 ops/ms
# Warmup Iteration  13: 1273.520 ops/ms
# Warmup Iteration  14: 1270.729 ops/ms
# Warmup Iteration  15: 1274.129 ops/ms
# Warmup Iteration  16: 1272.678 ops/ms
# Warmup Iteration  17: 1275.030 ops/ms
# Warmup Iteration  18: 1276.586 ops/ms
# Warmup Iteration  19: 1279.165 ops/ms
# Warmup Iteration  20: 1276.479 ops/ms
Iteration   1: 1274.085 ops/ms
Iteration   2: 1280.258 ops/ms
Iteration   3: 1281.514 ops/ms
Iteration   4: 1278.568 ops/ms
Iteration   5: 1275.126 ops/ms
Iteration   6: 1276.336 ops/ms
Iteration   7: 1277.828 ops/ms
Iteration   8: 1279.401 ops/ms
Iteration   9: 1275.768 ops/ms
Iteration  10: 1274.714 ops/ms
Iteration  11: 1277.214 ops/ms
Iteration  12: 1279.287 ops/ms
Iteration  13: 1274.740 ops/ms
Iteration  14: 1275.072 ops/ms
Iteration  15: 1280.744 ops/ms
Iteration  16: 1276.499 ops/ms
Iteration  17: 1280.474 ops/ms
Iteration  18: 1278.215 ops/ms
Iteration  19: 1278.333 ops/ms
Iteration  20: 1274.429 ops/ms

Result : 1277.430 ?(95%) 1.104 ?(99%) 1.509 ops/ms
  Statistics: (min, avg, max) = (1274.085, 1277.430, 1281.514), stdev = 2.359
  Confidence intervals: 95% [1276.326, 1278.534], 99% [1275.921, 1278.939]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 829.400 ops/ms
# Warmup Iteration   2: 1307.569 ops/ms
# Warmup Iteration   3: 1171.623 ops/ms
# Warmup Iteration   4: 1314.657 ops/ms
# Warmup Iteration   5: 1312.500 ops/ms
# Warmup Iteration   6: 1312.125 ops/ms
# Warmup Iteration   7: 1313.110 ops/ms
# Warmup Iteration   8: 1313.516 ops/ms
# Warmup Iteration   9: 1323.103 ops/ms
# Warmup Iteration  10: 1328.762 ops/ms
# Warmup Iteration  11: 1328.406 ops/ms
# Warmup Iteration  12: 1333.537 ops/ms
# Warmup Iteration  13: 1327.028 ops/ms
# Warmup Iteration  14: 1332.002 ops/ms
# Warmup Iteration  15: 1331.818 ops/ms
# Warmup Iteration  16: 1324.073 ops/ms
# Warmup Iteration  17: 1328.262 ops/ms
# Warmup Iteration  18: 1329.203 ops/ms
# Warmup Iteration  19: 1330.753 ops/ms
# Warmup Iteration  20: 1330.348 ops/ms
Iteration   1: 1327.536 ops/ms
Iteration   2: 1325.982 ops/ms
Iteration   3: 1329.836 ops/ms
Iteration   4: 1328.377 ops/ms
Iteration   5: 1331.464 ops/ms
Iteration   6: 1330.239 ops/ms
Iteration   7: 1330.687 ops/ms
Iteration   8: 1328.156 ops/ms
Iteration   9: 1328.624 ops/ms
Iteration  10: 1324.913 ops/ms
Iteration  11: 1331.783 ops/ms
Iteration  12: 1333.242 ops/ms
Iteration  13: 1330.711 ops/ms
Iteration  14: 1332.348 ops/ms
Iteration  15: 1330.942 ops/ms
Iteration  16: 1331.365 ops/ms
Iteration  17: 1328.296 ops/ms
Iteration  18: 1331.599 ops/ms
Iteration  19: 1330.335 ops/ms
Iteration  20: 1326.625 ops/ms

Result : 1329.653 ?(95%) 1.051 ?(99%) 1.436 ops/ms
  Statistics: (min, avg, max) = (1324.913, 1329.653, 1333.242), stdev = 2.245
  Confidence intervals: 95% [1328.603, 1330.704], 99% [1328.217, 1331.089]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1292.056 ops/ms
# Warmup Iteration   2: 1608.405 ops/ms
# Warmup Iteration   3: 1663.141 ops/ms
# Warmup Iteration   4: 1733.378 ops/ms
# Warmup Iteration   5: 1748.556 ops/ms
# Warmup Iteration   6: 1752.591 ops/ms
# Warmup Iteration   7: 1752.982 ops/ms
# Warmup Iteration   8: 1754.894 ops/ms
# Warmup Iteration   9: 1752.248 ops/ms
# Warmup Iteration  10: 1756.047 ops/ms
# Warmup Iteration  11: 1767.089 ops/ms
# Warmup Iteration  12: 1767.588 ops/ms
# Warmup Iteration  13: 1766.698 ops/ms
# Warmup Iteration  14: 1767.703 ops/ms
# Warmup Iteration  15: 1759.508 ops/ms
# Warmup Iteration  16: 1755.558 ops/ms
# Warmup Iteration  17: 1748.986 ops/ms
# Warmup Iteration  18: 1745.578 ops/ms
# Warmup Iteration  19: 1748.821 ops/ms
# Warmup Iteration  20: 1746.944 ops/ms
Iteration   1: 1743.183 ops/ms
Iteration   2: 1750.193 ops/ms
Iteration   3: 1750.291 ops/ms
Iteration   4: 1743.120 ops/ms
Iteration   5: 1744.017 ops/ms
Iteration   6: 1749.512 ops/ms
Iteration   7: 1744.985 ops/ms
Iteration   8: 1743.958 ops/ms
Iteration   9: 1750.131 ops/ms
Iteration  10: 1745.557 ops/ms
Iteration  11: 1740.415 ops/ms
Iteration  12: 1744.635 ops/ms
Iteration  13: 1743.383 ops/ms
Iteration  14: 1741.417 ops/ms
Iteration  15: 1744.867 ops/ms
Iteration  16: 1750.726 ops/ms
Iteration  17: 1742.800 ops/ms
Iteration  18: 1743.608 ops/ms
Iteration  19: 1744.441 ops/ms
Iteration  20: 1746.096 ops/ms

Result : 1745.367 ?(95%) 1.464 ?(99%) 2.001 ops/ms
  Statistics: (min, avg, max) = (1740.415, 1745.367, 1750.726), stdev = 3.128
  Confidence intervals: 95% [1743.903, 1746.831], 99% [1743.366, 1747.368]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1177.682 ops/ms
# Warmup Iteration   2: 1557.791 ops/ms
# Warmup Iteration   3: 1640.110 ops/ms
# Warmup Iteration   4: 1666.921 ops/ms
# Warmup Iteration   5: 1678.548 ops/ms
# Warmup Iteration   6: 1682.447 ops/ms
# Warmup Iteration   7: 1685.995 ops/ms
# Warmup Iteration   8: 1684.739 ops/ms
# Warmup Iteration   9: 1690.556 ops/ms
# Warmup Iteration  10: 1685.861 ops/ms
# Warmup Iteration  11: 1697.341 ops/ms
# Warmup Iteration  12: 1697.807 ops/ms
# Warmup Iteration  13: 1698.348 ops/ms
# Warmup Iteration  14: 1697.338 ops/ms
# Warmup Iteration  15: 1691.516 ops/ms
# Warmup Iteration  16: 1694.684 ops/ms
# Warmup Iteration  17: 1762.361 ops/ms
# Warmup Iteration  18: 1768.838 ops/ms
# Warmup Iteration  19: 1770.199 ops/ms
# Warmup Iteration  20: 1771.774 ops/ms
Iteration   1: 1767.070 ops/ms
Iteration   2: 1765.271 ops/ms
Iteration   3: 1770.379 ops/ms
Iteration   4: 1769.907 ops/ms
Iteration   5: 1765.443 ops/ms
Iteration   6: 1760.672 ops/ms
Iteration   7: 1766.449 ops/ms
Iteration   8: 1771.138 ops/ms
Iteration   9: 1767.386 ops/ms
Iteration  10: 1768.385 ops/ms
Iteration  11: 1765.215 ops/ms
Iteration  12: 1760.891 ops/ms
Iteration  13: 1772.659 ops/ms
Iteration  14: 1766.611 ops/ms
Iteration  15: 1766.444 ops/ms
Iteration  16: 1773.414 ops/ms
Iteration  17: 1773.120 ops/ms
Iteration  18: 1773.514 ops/ms
Iteration  19: 1773.429 ops/ms
Iteration  20: 1769.674 ops/ms

Result : 1768.354 ?(95%) 1.831 ?(99%) 2.502 ops/ms
  Statistics: (min, avg, max) = (1760.672, 1768.354, 1773.514), stdev = 3.911
  Confidence intervals: 95% [1766.523, 1770.184], 99% [1765.851, 1770.856]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1289.555 ops/ms
# Warmup Iteration   2: 1586.843 ops/ms
# Warmup Iteration   3: 1716.314 ops/ms
# Warmup Iteration   4: 1758.236 ops/ms
# Warmup Iteration   5: 1767.606 ops/ms
# Warmup Iteration   6: 1762.106 ops/ms
# Warmup Iteration   7: 1762.752 ops/ms
# Warmup Iteration   8: 1761.857 ops/ms
# Warmup Iteration   9: 1764.866 ops/ms
# Warmup Iteration  10: 1762.093 ops/ms
# Warmup Iteration  11: 1776.056 ops/ms
# Warmup Iteration  12: 1779.809 ops/ms
# Warmup Iteration  13: 1781.041 ops/ms
# Warmup Iteration  14: 1775.516 ops/ms
# Warmup Iteration  15: 1777.643 ops/ms
# Warmup Iteration  16: 1777.586 ops/ms
# Warmup Iteration  17: 1754.454 ops/ms
# Warmup Iteration  18: 1759.351 ops/ms
# Warmup Iteration  19: 1754.690 ops/ms
# Warmup Iteration  20: 1751.020 ops/ms
Iteration   1: 1752.676 ops/ms
Iteration   2: 1758.654 ops/ms
Iteration   3: 1751.800 ops/ms
Iteration   4: 1752.802 ops/ms
Iteration   5: 1752.482 ops/ms
Iteration   6: 1760.103 ops/ms
Iteration   7: 1755.166 ops/ms
Iteration   8: 1759.285 ops/ms
Iteration   9: 1760.090 ops/ms
Iteration  10: 1760.612 ops/ms
Iteration  11: 1747.879 ops/ms
Iteration  12: 1761.477 ops/ms
Iteration  13: 1752.528 ops/ms
Iteration  14: 1749.910 ops/ms
Iteration  15: 1759.501 ops/ms
Iteration  16: 1752.146 ops/ms
Iteration  17: 1753.375 ops/ms
Iteration  18: 1754.468 ops/ms
Iteration  19: 1760.217 ops/ms
Iteration  20: 1753.940 ops/ms

Result : 1755.456 ?(95%) 1.927 ?(99%) 2.634 ops/ms
  Statistics: (min, avg, max) = (1747.879, 1755.456, 1761.477), stdev = 4.118
  Confidence intervals: 95% [1753.528, 1757.383], 99% [1752.821, 1758.090]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1291.400 ops/ms
# Warmup Iteration   2: 1638.516 ops/ms
# Warmup Iteration   3: 1707.081 ops/ms
# Warmup Iteration   4: 1666.479 ops/ms
# Warmup Iteration   5: 1668.500 ops/ms
# Warmup Iteration   6: 1669.837 ops/ms
# Warmup Iteration   7: 1667.675 ops/ms
# Warmup Iteration   8: 1676.350 ops/ms
# Warmup Iteration   9: 1668.057 ops/ms
# Warmup Iteration  10: 1685.246 ops/ms
# Warmup Iteration  11: 1685.180 ops/ms
# Warmup Iteration  12: 1685.733 ops/ms
# Warmup Iteration  13: 1684.276 ops/ms
# Warmup Iteration  14: 1677.742 ops/ms
# Warmup Iteration  15: 1676.043 ops/ms
# Warmup Iteration  16: 1676.434 ops/ms
# Warmup Iteration  17: 1688.359 ops/ms
# Warmup Iteration  18: 1681.513 ops/ms
# Warmup Iteration  19: 1683.441 ops/ms
# Warmup Iteration  20: 1680.962 ops/ms
Iteration   1: 1684.001 ops/ms
Iteration   2: 1685.839 ops/ms
Iteration   3: 1691.074 ops/ms
Iteration   4: 1690.514 ops/ms
Iteration   5: 1682.131 ops/ms
Iteration   6: 1691.043 ops/ms
Iteration   7: 1691.393 ops/ms
Iteration   8: 1693.146 ops/ms
Iteration   9: 1684.659 ops/ms
Iteration  10: 1684.692 ops/ms
Iteration  11: 1696.878 ops/ms
Iteration  12: 1682.467 ops/ms
Iteration  13: 1690.246 ops/ms
Iteration  14: 1684.984 ops/ms
Iteration  15: 1691.600 ops/ms
Iteration  16: 1685.087 ops/ms
Iteration  17: 1689.364 ops/ms
Iteration  18: 1682.044 ops/ms
Iteration  19: 1682.282 ops/ms
Iteration  20: 1685.973 ops/ms

Result : 1687.471 ?(95%) 2.020 ?(99%) 2.761 ops/ms
  Statistics: (min, avg, max) = (1682.044, 1687.471, 1696.878), stdev = 4.315
  Confidence intervals: 95% [1685.451, 1689.490], 99% [1684.710, 1690.231]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1325.691 ops/ms
# Warmup Iteration   2: 1692.917 ops/ms
# Warmup Iteration   3: 1738.388 ops/ms
# Warmup Iteration   4: 1766.000 ops/ms
# Warmup Iteration   5: 1766.010 ops/ms
# Warmup Iteration   6: 1765.829 ops/ms
# Warmup Iteration   7: 1744.774 ops/ms
# Warmup Iteration   8: 1747.173 ops/ms
# Warmup Iteration   9: 1750.921 ops/ms
# Warmup Iteration  10: 1757.055 ops/ms
# Warmup Iteration  11: 1766.327 ops/ms
# Warmup Iteration  12: 1765.628 ops/ms
# Warmup Iteration  13: 1757.355 ops/ms
# Warmup Iteration  14: 1766.108 ops/ms
# Warmup Iteration  15: 1757.858 ops/ms
# Warmup Iteration  16: 1766.303 ops/ms
# Warmup Iteration  17: 1753.457 ops/ms
# Warmup Iteration  18: 1752.839 ops/ms
# Warmup Iteration  19: 1759.414 ops/ms
# Warmup Iteration  20: 1759.001 ops/ms
Iteration   1: 1744.050 ops/ms
Iteration   2: 1750.077 ops/ms
Iteration   3: 1751.637 ops/ms
Iteration   4: 1752.652 ops/ms
Iteration   5: 1749.055 ops/ms
Iteration   6: 1761.338 ops/ms
Iteration   7: 1758.839 ops/ms
Iteration   8: 1747.731 ops/ms
Iteration   9: 1751.964 ops/ms
Iteration  10: 1750.950 ops/ms
Iteration  11: 1760.644 ops/ms
Iteration  12: 1759.771 ops/ms
Iteration  13: 1757.907 ops/ms
Iteration  14: 1761.221 ops/ms
Iteration  15: 1751.460 ops/ms
Iteration  16: 1759.883 ops/ms
Iteration  17: 1759.468 ops/ms
Iteration  18: 1759.950 ops/ms
Iteration  19: 1753.044 ops/ms
Iteration  20: 1760.008 ops/ms

Result : 1755.083 ?(95%) 2.497 ?(99%) 3.414 ops/ms
  Statistics: (min, avg, max) = (1744.050, 1755.083, 1761.338), stdev = 5.336
  Confidence intervals: 95% [1752.585, 1757.580], 99% [1751.669, 1758.496]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 5.858 ops/ms
# Warmup Iteration   2: 13.039 ops/ms
# Warmup Iteration   3: 18.123 ops/ms
# Warmup Iteration   4: 18.138 ops/ms
# Warmup Iteration   5: 18.211 ops/ms
# Warmup Iteration   6: 18.200 ops/ms
# Warmup Iteration   7: 15.544 ops/ms
# Warmup Iteration   8: 17.399 ops/ms
# Warmup Iteration   9: 18.248 ops/ms
# Warmup Iteration  10: 18.283 ops/ms
# Warmup Iteration  11: 18.308 ops/ms
# Warmup Iteration  12: 18.266 ops/ms
# Warmup Iteration  13: 18.279 ops/ms
# Warmup Iteration  14: 18.314 ops/ms
# Warmup Iteration  15: 18.268 ops/ms
# Warmup Iteration  16: 18.321 ops/ms
# Warmup Iteration  17: 18.158 ops/ms
# Warmup Iteration  18: 18.257 ops/ms
# Warmup Iteration  19: 18.257 ops/ms
# Warmup Iteration  20: 18.259 ops/ms
Iteration   1: 18.204 ops/ms
Iteration   2: 18.285 ops/ms
Iteration   3: 18.288 ops/ms
Iteration   4: 18.184 ops/ms
Iteration   5: 18.258 ops/ms
Iteration   6: 18.276 ops/ms
Iteration   7: 18.193 ops/ms
Iteration   8: 18.270 ops/ms
Iteration   9: 18.121 ops/ms
Iteration  10: 18.204 ops/ms
Iteration  11: 18.197 ops/ms
Iteration  12: 18.204 ops/ms
Iteration  13: 18.275 ops/ms
Iteration  14: 18.263 ops/ms
Iteration  15: 18.306 ops/ms
Iteration  16: 18.262 ops/ms
Iteration  17: 18.171 ops/ms
Iteration  18: 18.124 ops/ms
Iteration  19: 18.194 ops/ms
Iteration  20: 18.265 ops/ms

Result : 18.227 ?(95%) 0.025 ?(99%) 0.035 ops/ms
  Statistics: (min, avg, max) = (18.121, 18.227, 18.306), stdev = 0.054
  Confidence intervals: 95% [18.202, 18.253], 99% [18.192, 18.262]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 6.230 ops/ms
# Warmup Iteration   2: 13.114 ops/ms
# Warmup Iteration   3: 17.927 ops/ms
# Warmup Iteration   4: 17.835 ops/ms
# Warmup Iteration   5: 17.954 ops/ms
# Warmup Iteration   6: 17.901 ops/ms
# Warmup Iteration   7: 15.534 ops/ms
# Warmup Iteration   8: 17.242 ops/ms
# Warmup Iteration   9: 17.098 ops/ms
# Warmup Iteration  10: 17.197 ops/ms
# Warmup Iteration  11: 17.259 ops/ms
# Warmup Iteration  12: 17.237 ops/ms
# Warmup Iteration  13: 17.243 ops/ms
# Warmup Iteration  14: 17.114 ops/ms
# Warmup Iteration  15: 17.173 ops/ms
# Warmup Iteration  16: 17.182 ops/ms
# Warmup Iteration  17: 17.108 ops/ms
# Warmup Iteration  18: 17.163 ops/ms
# Warmup Iteration  19: 17.078 ops/ms
# Warmup Iteration  20: 17.101 ops/ms
Iteration   1: 17.136 ops/ms
Iteration   2: 17.063 ops/ms
Iteration   3: 17.106 ops/ms
Iteration   4: 17.145 ops/ms
Iteration   5: 17.116 ops/ms
Iteration   6: 17.140 ops/ms
Iteration   7: 17.146 ops/ms
Iteration   8: 17.066 ops/ms
Iteration   9: 17.076 ops/ms
Iteration  10: 17.076 ops/ms
Iteration  11: 17.145 ops/ms
Iteration  12: 17.134 ops/ms
Iteration  13: 17.146 ops/ms
Iteration  14: 17.100 ops/ms
Iteration  15: 17.143 ops/ms
Iteration  16: 17.150 ops/ms
Iteration  17: 17.132 ops/ms
Iteration  18: 17.029 ops/ms
Iteration  19: 17.100 ops/ms
Iteration  20: 17.145 ops/ms

Result : 17.115 ?(95%) 0.017 ?(99%) 0.023 ops/ms
  Statistics: (min, avg, max) = (17.029, 17.115, 17.150), stdev = 0.036
  Confidence intervals: 95% [17.098, 17.132], 99% [17.092, 17.138]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 4.950 ops/ms
# Warmup Iteration   2: 13.068 ops/ms
# Warmup Iteration   3: 19.057 ops/ms
# Warmup Iteration   4: 19.080 ops/ms
# Warmup Iteration   5: 19.252 ops/ms
# Warmup Iteration   6: 19.380 ops/ms
# Warmup Iteration   7: 15.437 ops/ms
# Warmup Iteration   8: 16.998 ops/ms
# Warmup Iteration   9: 19.110 ops/ms
# Warmup Iteration  10: 19.504 ops/ms
# Warmup Iteration  11: 19.559 ops/ms
# Warmup Iteration  12: 19.529 ops/ms
# Warmup Iteration  13: 19.593 ops/ms
# Warmup Iteration  14: 19.610 ops/ms
# Warmup Iteration  15: 19.532 ops/ms
# Warmup Iteration  16: 19.526 ops/ms
# Warmup Iteration  17: 19.457 ops/ms
# Warmup Iteration  18: 19.457 ops/ms
# Warmup Iteration  19: 19.490 ops/ms
# Warmup Iteration  20: 19.497 ops/ms
Iteration   1: 19.460 ops/ms
Iteration   2: 19.513 ops/ms
Iteration   3: 19.526 ops/ms
Iteration   4: 19.534 ops/ms
Iteration   5: 19.521 ops/ms
Iteration   6: 19.433 ops/ms
Iteration   7: 19.439 ops/ms
Iteration   8: 19.469 ops/ms
Iteration   9: 19.499 ops/ms
Iteration  10: 19.522 ops/ms
Iteration  11: 19.499 ops/ms
Iteration  12: 19.382 ops/ms
Iteration  13: 19.459 ops/ms
Iteration  14: 19.537 ops/ms
Iteration  15: 19.462 ops/ms
Iteration  16: 19.426 ops/ms
Iteration  17: 19.520 ops/ms
Iteration  18: 19.436 ops/ms
Iteration  19: 19.532 ops/ms
Iteration  20: 19.503 ops/ms

Result : 19.484 ?(95%) 0.021 ?(99%) 0.029 ops/ms
  Statistics: (min, avg, max) = (19.382, 19.484, 19.537), stdev = 0.045
  Confidence intervals: 95% [19.463, 19.505], 99% [19.455, 19.512]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 6.048 ops/ms
# Warmup Iteration   2: 12.370 ops/ms
# Warmup Iteration   3: 17.049 ops/ms
# Warmup Iteration   4: 16.900 ops/ms
# Warmup Iteration   5: 16.939 ops/ms
# Warmup Iteration   6: 16.800 ops/ms
# Warmup Iteration   7: 15.015 ops/ms
# Warmup Iteration   8: 16.107 ops/ms
# Warmup Iteration   9: 16.728 ops/ms
# Warmup Iteration  10: 17.046 ops/ms
# Warmup Iteration  11: 17.093 ops/ms
# Warmup Iteration  12: 16.975 ops/ms
# Warmup Iteration  13: 17.088 ops/ms
# Warmup Iteration  14: 17.097 ops/ms
# Warmup Iteration  15: 17.007 ops/ms
# Warmup Iteration  16: 16.920 ops/ms
# Warmup Iteration  17: 17.007 ops/ms
# Warmup Iteration  18: 17.054 ops/ms
# Warmup Iteration  19: 17.091 ops/ms
# Warmup Iteration  20: 17.123 ops/ms
Iteration   1: 17.105 ops/ms
Iteration   2: 17.129 ops/ms
Iteration   3: 17.097 ops/ms
Iteration   4: 17.125 ops/ms
Iteration   5: 17.002 ops/ms
Iteration   6: 17.095 ops/ms
Iteration   7: 17.037 ops/ms
Iteration   8: 17.052 ops/ms
Iteration   9: 17.055 ops/ms
Iteration  10: 17.074 ops/ms
Iteration  11: 17.063 ops/ms
Iteration  12: 17.042 ops/ms
Iteration  13: 17.103 ops/ms
Iteration  14: 17.115 ops/ms
Iteration  15: 17.079 ops/ms
Iteration  16: 17.046 ops/ms
Iteration  17: 17.033 ops/ms
Iteration  18: 17.056 ops/ms
Iteration  19: 17.048 ops/ms
Iteration  20: 17.067 ops/ms

Result : 17.071 ?(95%) 0.016 ?(99%) 0.022 ops/ms
  Statistics: (min, avg, max) = (17.002, 17.071, 17.129), stdev = 0.034
  Confidence intervals: 95% [17.055, 17.087], 99% [17.049, 17.093]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 6.386 ops/ms
# Warmup Iteration   2: 13.677 ops/ms
# Warmup Iteration   3: 18.471 ops/ms
# Warmup Iteration   4: 18.479 ops/ms
# Warmup Iteration   5: 18.641 ops/ms
# Warmup Iteration   6: 18.588 ops/ms
# Warmup Iteration   7: 15.826 ops/ms
# Warmup Iteration   8: 18.332 ops/ms
# Warmup Iteration   9: 18.614 ops/ms
# Warmup Iteration  10: 18.921 ops/ms
# Warmup Iteration  11: 18.993 ops/ms
# Warmup Iteration  12: 18.902 ops/ms
# Warmup Iteration  13: 18.966 ops/ms
# Warmup Iteration  14: 18.979 ops/ms
# Warmup Iteration  15: 18.978 ops/ms
# Warmup Iteration  16: 18.919 ops/ms
# Warmup Iteration  17: 18.850 ops/ms
# Warmup Iteration  18: 18.988 ops/ms
# Warmup Iteration  19: 18.868 ops/ms
# Warmup Iteration  20: 18.903 ops/ms
Iteration   1: 18.805 ops/ms
Iteration   2: 18.867 ops/ms
Iteration   3: 18.893 ops/ms
Iteration   4: 18.854 ops/ms
Iteration   5: 18.806 ops/ms
Iteration   6: 18.872 ops/ms
Iteration   7: 18.941 ops/ms
Iteration   8: 18.950 ops/ms
Iteration   9: 18.938 ops/ms
Iteration  10: 18.924 ops/ms
Iteration  11: 18.912 ops/ms
Iteration  12: 18.885 ops/ms
Iteration  13: 18.838 ops/ms
Iteration  14: 18.911 ops/ms
Iteration  15: 18.852 ops/ms
Iteration  16: 18.926 ops/ms
Iteration  17: 18.915 ops/ms
Iteration  18: 18.922 ops/ms
Iteration  19: 18.871 ops/ms
Iteration  20: 18.928 ops/ms

Result : 18.891 ?(95%) 0.020 ?(99%) 0.028 ops/ms
  Statistics: (min, avg, max) = (18.805, 18.891, 18.950), stdev = 0.043
  Confidence intervals: 95% [18.870, 18.911], 99% [18.863, 18.918]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1544.044 ops/ms
# Warmup Iteration   2: 2155.766 ops/ms
# Warmup Iteration   3: 2385.325 ops/ms
# Warmup Iteration   4: 2418.260 ops/ms
# Warmup Iteration   5: 2411.617 ops/ms
# Warmup Iteration   6: 2417.851 ops/ms
# Warmup Iteration   7: 2450.822 ops/ms
# Warmup Iteration   8: 2443.786 ops/ms
# Warmup Iteration   9: 2448.350 ops/ms
# Warmup Iteration  10: 2443.499 ops/ms
# Warmup Iteration  11: 2472.283 ops/ms
# Warmup Iteration  12: 2462.275 ops/ms
# Warmup Iteration  13: 2464.154 ops/ms
# Warmup Iteration  14: 2464.390 ops/ms
# Warmup Iteration  15: 2466.309 ops/ms
# Warmup Iteration  16: 2466.758 ops/ms
# Warmup Iteration  17: 2468.639 ops/ms
# Warmup Iteration  18: 2470.969 ops/ms
# Warmup Iteration  19: 2454.626 ops/ms
# Warmup Iteration  20: 2468.937 ops/ms
Iteration   1: 2458.500 ops/ms
Iteration   2: 2458.941 ops/ms
Iteration   3: 2459.518 ops/ms
Iteration   4: 2467.836 ops/ms
Iteration   5: 2457.519 ops/ms
Iteration   6: 2460.417 ops/ms
Iteration   7: 2469.085 ops/ms
Iteration   8: 2468.670 ops/ms
Iteration   9: 2468.430 ops/ms
Iteration  10: 2471.550 ops/ms
Iteration  11: 2467.916 ops/ms
Iteration  12: 2461.646 ops/ms
Iteration  13: 2451.129 ops/ms
Iteration  14: 2456.107 ops/ms
Iteration  15: 2473.263 ops/ms
Iteration  16: 2460.042 ops/ms
Iteration  17: 2474.349 ops/ms
Iteration  18: 2471.443 ops/ms
Iteration  19: 2468.104 ops/ms
Iteration  20: 2471.112 ops/ms

Result : 2464.779 ?(95%) 3.108 ?(99%) 4.248 ops/ms
  Statistics: (min, avg, max) = (2451.129, 2464.779, 2474.349), stdev = 6.641
  Confidence intervals: 95% [2461.671, 2467.887], 99% [2460.531, 2469.027]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1424.126 ops/ms
# Warmup Iteration   2: 2028.045 ops/ms
# Warmup Iteration   3: 2080.215 ops/ms
# Warmup Iteration   4: 2087.643 ops/ms
# Warmup Iteration   5: 2110.997 ops/ms
# Warmup Iteration   6: 2117.281 ops/ms
# Warmup Iteration   7: 2106.282 ops/ms
# Warmup Iteration   8: 2120.395 ops/ms
# Warmup Iteration   9: 2114.551 ops/ms
# Warmup Iteration  10: 2111.587 ops/ms
# Warmup Iteration  11: 2120.529 ops/ms
# Warmup Iteration  12: 2113.807 ops/ms
# Warmup Iteration  13: 2115.758 ops/ms
# Warmup Iteration  14: 2127.509 ops/ms
# Warmup Iteration  15: 2129.205 ops/ms
# Warmup Iteration  16: 2117.652 ops/ms
# Warmup Iteration  17: 2140.557 ops/ms
# Warmup Iteration  18: 2143.324 ops/ms
# Warmup Iteration  19: 2129.000 ops/ms
# Warmup Iteration  20: 2135.861 ops/ms
Iteration   1: 2135.211 ops/ms
Iteration   2: 2138.853 ops/ms
Iteration   3: 2141.886 ops/ms
Iteration   4: 2142.179 ops/ms
Iteration   5: 2132.947 ops/ms
Iteration   6: 2147.634 ops/ms
Iteration   7: 2135.590 ops/ms
Iteration   8: 2141.207 ops/ms
Iteration   9: 2132.992 ops/ms
Iteration  10: 2130.619 ops/ms
Iteration  11: 2131.712 ops/ms
Iteration  12: 2147.112 ops/ms
Iteration  13: 2141.377 ops/ms
Iteration  14: 2134.294 ops/ms
Iteration  15: 2130.923 ops/ms
Iteration  16: 2136.512 ops/ms
Iteration  17: 2132.079 ops/ms
Iteration  18: 2148.589 ops/ms
Iteration  19: 2140.519 ops/ms
Iteration  20: 2139.425 ops/ms

Result : 2138.083 ?(95%) 2.653 ?(99%) 3.626 ops/ms
  Statistics: (min, avg, max) = (2130.619, 2138.083, 2148.589), stdev = 5.668
  Confidence intervals: 95% [2135.430, 2140.736], 99% [2134.457, 2141.709]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1424.492 ops/ms
# Warmup Iteration   2: 2158.888 ops/ms
# Warmup Iteration   3: 2219.123 ops/ms
# Warmup Iteration   4: 2249.124 ops/ms
# Warmup Iteration   5: 2251.778 ops/ms
# Warmup Iteration   6: 2242.656 ops/ms
# Warmup Iteration   7: 2251.289 ops/ms
# Warmup Iteration   8: 2252.857 ops/ms
# Warmup Iteration   9: 2274.318 ops/ms
# Warmup Iteration  10: 2258.539 ops/ms
# Warmup Iteration  11: 2274.324 ops/ms
# Warmup Iteration  12: 2282.634 ops/ms
# Warmup Iteration  13: 2265.482 ops/ms
# Warmup Iteration  14: 2275.786 ops/ms
# Warmup Iteration  15: 2266.411 ops/ms
# Warmup Iteration  16: 2268.605 ops/ms
# Warmup Iteration  17: 2294.239 ops/ms
# Warmup Iteration  18: 2285.155 ops/ms
# Warmup Iteration  19: 2284.830 ops/ms
# Warmup Iteration  20: 2275.447 ops/ms
Iteration   1: 2287.391 ops/ms
Iteration   2: 2284.124 ops/ms
Iteration   3: 2274.733 ops/ms
Iteration   4: 2287.353 ops/ms
Iteration   5: 2281.807 ops/ms
Iteration   6: 2295.046 ops/ms
Iteration   7: 2279.187 ops/ms
Iteration   8: 2288.650 ops/ms
Iteration   9: 2286.854 ops/ms
Iteration  10: 2273.640 ops/ms
Iteration  11: 2278.232 ops/ms
Iteration  12: 2285.358 ops/ms
Iteration  13: 2283.450 ops/ms
Iteration  14: 2284.807 ops/ms
Iteration  15: 2265.986 ops/ms
Iteration  16: 2277.226 ops/ms
Iteration  17: 2277.472 ops/ms
Iteration  18: 2277.167 ops/ms
Iteration  19: 2278.139 ops/ms
Iteration  20: 2283.891 ops/ms

Result : 2281.526 ?(95%) 3.043 ?(99%) 4.160 ops/ms
  Statistics: (min, avg, max) = (2265.986, 2281.526, 2295.046), stdev = 6.503
  Confidence intervals: 95% [2278.482, 2284.569], 99% [2277.366, 2285.686]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1564.120 ops/ms
# Warmup Iteration   2: 2442.890 ops/ms
# Warmup Iteration   3: 2401.682 ops/ms
# Warmup Iteration   4: 2449.173 ops/ms
# Warmup Iteration   5: 2477.520 ops/ms
# Warmup Iteration   6: 2470.968 ops/ms
# Warmup Iteration   7: 2381.962 ops/ms
# Warmup Iteration   8: 2378.400 ops/ms
# Warmup Iteration   9: 2375.585 ops/ms
# Warmup Iteration  10: 2403.009 ops/ms
# Warmup Iteration  11: 2394.480 ops/ms
# Warmup Iteration  12: 2396.183 ops/ms
# Warmup Iteration  13: 2267.546 ops/ms
# Warmup Iteration  14: 2215.052 ops/ms
# Warmup Iteration  15: 2332.052 ops/ms
# Warmup Iteration  16: 2398.202 ops/ms
# Warmup Iteration  17: 2485.386 ops/ms
# Warmup Iteration  18: 2476.640 ops/ms
# Warmup Iteration  19: 2483.110 ops/ms
# Warmup Iteration  20: 2484.491 ops/ms
Iteration   1: 2474.224 ops/ms
Iteration   2: 2484.931 ops/ms
Iteration   3: 2474.850 ops/ms
Iteration   4: 2474.861 ops/ms
Iteration   5: 2474.687 ops/ms
Iteration   6: 2475.373 ops/ms
Iteration   7: 2483.957 ops/ms
Iteration   8: 2484.231 ops/ms
Iteration   9: 2483.047 ops/ms
Iteration  10: 2484.959 ops/ms
Iteration  11: 2482.285 ops/ms
Iteration  12: 2476.680 ops/ms
Iteration  13: 2483.020 ops/ms
Iteration  14: 2482.722 ops/ms
Iteration  15: 2484.663 ops/ms
Iteration  16: 2485.048 ops/ms
Iteration  17: 2483.253 ops/ms
Iteration  18: 2467.866 ops/ms
Iteration  19: 2471.686 ops/ms
Iteration  20: 2472.833 ops/ms

Result : 2479.259 ?(95%) 2.575 ?(99%) 3.519 ops/ms
  Statistics: (min, avg, max) = (2467.866, 2479.259, 2485.048), stdev = 5.501
  Confidence intervals: 95% [2476.684, 2481.833], 99% [2475.740, 2482.778]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1425.583 ops/ms
# Warmup Iteration   2: 1992.509 ops/ms
# Warmup Iteration   3: 2192.890 ops/ms
# Warmup Iteration   4: 2219.976 ops/ms
# Warmup Iteration   5: 2200.005 ops/ms
# Warmup Iteration   6: 2216.596 ops/ms
# Warmup Iteration   7: 2193.606 ops/ms
# Warmup Iteration   8: 2193.398 ops/ms
# Warmup Iteration   9: 2197.597 ops/ms
# Warmup Iteration  10: 2201.302 ops/ms
# Warmup Iteration  11: 2214.359 ops/ms
# Warmup Iteration  12: 2205.936 ops/ms
# Warmup Iteration  13: 2215.713 ops/ms
# Warmup Iteration  14: 2206.682 ops/ms
# Warmup Iteration  15: 2202.140 ops/ms
# Warmup Iteration  16: 2215.982 ops/ms
# Warmup Iteration  17: 2205.882 ops/ms
# Warmup Iteration  18: 2211.444 ops/ms
# Warmup Iteration  19: 2210.216 ops/ms
# Warmup Iteration  20: 2202.668 ops/ms
Iteration   1: 2209.508 ops/ms
Iteration   2: 2190.120 ops/ms
Iteration   3: 2211.313 ops/ms
Iteration   4: 2196.860 ops/ms
Iteration   5: 2201.336 ops/ms
Iteration   6: 2196.178 ops/ms
Iteration   7: 2207.248 ops/ms
Iteration   8: 2201.004 ops/ms
Iteration   9: 2211.107 ops/ms
Iteration  10: 2210.188 ops/ms
Iteration  11: 2211.721 ops/ms
Iteration  12: 2198.575 ops/ms
Iteration  13: 2211.871 ops/ms
Iteration  14: 2211.573 ops/ms
Iteration  15: 2195.659 ops/ms
Iteration  16: 2212.193 ops/ms
Iteration  17: 2212.717 ops/ms
Iteration  18: 2212.400 ops/ms
Iteration  19: 2210.124 ops/ms
Iteration  20: 2200.996 ops/ms

Result : 2205.634 ?(95%) 3.376 ?(99%) 4.615 ops/ms
  Statistics: (min, avg, max) = (2190.120, 2205.634, 2212.717), stdev = 7.214
  Confidence intervals: 95% [2202.258, 2209.011], 99% [2201.020, 2210.249]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 50.705 ops/ms
# Warmup Iteration   2: 118.590 ops/ms
# Warmup Iteration   3: 148.500 ops/ms
# Warmup Iteration   4: 150.560 ops/ms
# Warmup Iteration   5: 150.466 ops/ms
# Warmup Iteration   6: 151.100 ops/ms
# Warmup Iteration   7: 125.708 ops/ms
# Warmup Iteration   8: 150.788 ops/ms
# Warmup Iteration   9: 152.555 ops/ms
# Warmup Iteration  10: 151.478 ops/ms
# Warmup Iteration  11: 152.025 ops/ms
# Warmup Iteration  12: 153.021 ops/ms
# Warmup Iteration  13: 152.383 ops/ms
# Warmup Iteration  14: 152.798 ops/ms
# Warmup Iteration  15: 152.028 ops/ms
# Warmup Iteration  16: 152.833 ops/ms
# Warmup Iteration  17: 151.148 ops/ms
# Warmup Iteration  18: 150.927 ops/ms
# Warmup Iteration  19: 151.061 ops/ms
# Warmup Iteration  20: 150.381 ops/ms
Iteration   1: 150.413 ops/ms
Iteration   2: 151.059 ops/ms
Iteration   3: 150.671 ops/ms
Iteration   4: 150.518 ops/ms
Iteration   5: 150.513 ops/ms
Iteration   6: 150.165 ops/ms
Iteration   7: 151.293 ops/ms
Iteration   8: 150.357 ops/ms
Iteration   9: 151.107 ops/ms
Iteration  10: 151.045 ops/ms
Iteration  11: 150.901 ops/ms
Iteration  12: 151.063 ops/ms
Iteration  13: 151.141 ops/ms
Iteration  14: 151.193 ops/ms
Iteration  15: 150.704 ops/ms
Iteration  16: 151.001 ops/ms
Iteration  17: 150.615 ops/ms
Iteration  18: 150.770 ops/ms
Iteration  19: 151.107 ops/ms
Iteration  20: 151.144 ops/ms

Result : 150.839 ?(95%) 0.152 ?(99%) 0.208 ops/ms
  Statistics: (min, avg, max) = (150.165, 150.839, 151.293), stdev = 0.325
  Confidence intervals: 95% [150.687, 150.991], 99% [150.631, 151.047]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 50.162 ops/ms
# Warmup Iteration   2: 119.974 ops/ms
# Warmup Iteration   3: 151.595 ops/ms
# Warmup Iteration   4: 152.120 ops/ms
# Warmup Iteration   5: 151.969 ops/ms
# Warmup Iteration   6: 151.163 ops/ms
# Warmup Iteration   7: 129.947 ops/ms
# Warmup Iteration   8: 151.835 ops/ms
# Warmup Iteration   9: 152.838 ops/ms
# Warmup Iteration  10: 153.180 ops/ms
# Warmup Iteration  11: 152.840 ops/ms
# Warmup Iteration  12: 152.935 ops/ms
# Warmup Iteration  13: 152.974 ops/ms
# Warmup Iteration  14: 153.446 ops/ms
# Warmup Iteration  15: 153.410 ops/ms
# Warmup Iteration  16: 153.207 ops/ms
# Warmup Iteration  17: 152.124 ops/ms
# Warmup Iteration  18: 153.534 ops/ms
# Warmup Iteration  19: 153.676 ops/ms
# Warmup Iteration  20: 153.360 ops/ms
Iteration   1: 153.204 ops/ms
Iteration   2: 153.835 ops/ms
Iteration   3: 153.845 ops/ms
Iteration   4: 153.300 ops/ms
Iteration   5: 153.314 ops/ms
Iteration   6: 153.690 ops/ms
Iteration   7: 153.327 ops/ms
Iteration   8: 153.863 ops/ms
Iteration   9: 153.391 ops/ms
Iteration  10: 153.553 ops/ms
Iteration  11: 153.802 ops/ms
Iteration  12: 153.246 ops/ms
Iteration  13: 153.862 ops/ms
Iteration  14: 153.137 ops/ms
Iteration  15: 153.781 ops/ms
Iteration  16: 153.437 ops/ms
Iteration  17: 153.285 ops/ms
Iteration  18: 153.014 ops/ms
Iteration  19: 153.902 ops/ms
Iteration  20: 153.757 ops/ms

Result : 153.527 ?(95%) 0.136 ?(99%) 0.186 ops/ms
  Statistics: (min, avg, max) = (153.014, 153.527, 153.902), stdev = 0.290
  Confidence intervals: 95% [153.391, 153.663], 99% [153.342, 153.713]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 49.607 ops/ms
# Warmup Iteration   2: 119.571 ops/ms
# Warmup Iteration   3: 153.168 ops/ms
# Warmup Iteration   4: 153.028 ops/ms
# Warmup Iteration   5: 152.674 ops/ms
# Warmup Iteration   6: 152.660 ops/ms
# Warmup Iteration   7: 130.716 ops/ms
# Warmup Iteration   8: 152.143 ops/ms
# Warmup Iteration   9: 153.536 ops/ms
# Warmup Iteration  10: 153.534 ops/ms
# Warmup Iteration  11: 153.475 ops/ms
# Warmup Iteration  12: 153.657 ops/ms
# Warmup Iteration  13: 153.353 ops/ms
# Warmup Iteration  14: 153.406 ops/ms
# Warmup Iteration  15: 154.236 ops/ms
# Warmup Iteration  16: 153.595 ops/ms
# Warmup Iteration  17: 153.765 ops/ms
# Warmup Iteration  18: 153.937 ops/ms
# Warmup Iteration  19: 153.940 ops/ms
# Warmup Iteration  20: 154.150 ops/ms
Iteration   1: 153.239 ops/ms
Iteration   2: 153.855 ops/ms
Iteration   3: 153.481 ops/ms
Iteration   4: 154.346 ops/ms
Iteration   5: 153.512 ops/ms
Iteration   6: 153.877 ops/ms
Iteration   7: 154.472 ops/ms
Iteration   8: 153.527 ops/ms
Iteration   9: 153.968 ops/ms
Iteration  10: 153.775 ops/ms
Iteration  11: 153.779 ops/ms
Iteration  12: 153.604 ops/ms
Iteration  13: 154.087 ops/ms
Iteration  14: 153.616 ops/ms
Iteration  15: 154.237 ops/ms
Iteration  16: 154.174 ops/ms
Iteration  17: 154.061 ops/ms
Iteration  18: 153.687 ops/ms
Iteration  19: 153.652 ops/ms
Iteration  20: 153.714 ops/ms

Result : 153.833 ?(95%) 0.149 ?(99%) 0.204 ops/ms
  Statistics: (min, avg, max) = (153.239, 153.833, 154.472), stdev = 0.319
  Confidence intervals: 95% [153.684, 153.982], 99% [153.629, 154.037]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 49.834 ops/ms
# Warmup Iteration   2: 119.805 ops/ms
# Warmup Iteration   3: 154.499 ops/ms
# Warmup Iteration   4: 155.289 ops/ms
# Warmup Iteration   5: 155.433 ops/ms
# Warmup Iteration   6: 154.859 ops/ms
# Warmup Iteration   7: 132.597 ops/ms
# Warmup Iteration   8: 155.189 ops/ms
# Warmup Iteration   9: 155.419 ops/ms
# Warmup Iteration  10: 156.741 ops/ms
# Warmup Iteration  11: 156.109 ops/ms
# Warmup Iteration  12: 156.467 ops/ms
# Warmup Iteration  13: 156.640 ops/ms
# Warmup Iteration  14: 156.517 ops/ms
# Warmup Iteration  15: 155.843 ops/ms
# Warmup Iteration  16: 156.353 ops/ms
# Warmup Iteration  17: 156.516 ops/ms
# Warmup Iteration  18: 156.307 ops/ms
# Warmup Iteration  19: 156.419 ops/ms
# Warmup Iteration  20: 155.874 ops/ms
Iteration   1: 155.657 ops/ms
Iteration   2: 155.586 ops/ms
Iteration   3: 156.313 ops/ms
Iteration   4: 156.161 ops/ms
Iteration   5: 156.399 ops/ms
Iteration   6: 156.350 ops/ms
Iteration   7: 155.563 ops/ms
Iteration   8: 156.480 ops/ms
Iteration   9: 156.484 ops/ms
Iteration  10: 156.008 ops/ms
Iteration  11: 155.686 ops/ms
Iteration  12: 156.389 ops/ms
Iteration  13: 155.968 ops/ms
Iteration  14: 155.220 ops/ms
Iteration  15: 156.383 ops/ms
Iteration  16: 156.316 ops/ms
Iteration  17: 155.754 ops/ms
Iteration  18: 155.847 ops/ms
Iteration  19: 155.746 ops/ms
Iteration  20: 156.422 ops/ms

Result : 156.037 ?(95%) 0.178 ?(99%) 0.244 ops/ms
  Statistics: (min, avg, max) = (155.220, 156.037, 156.484), stdev = 0.381
  Confidence intervals: 95% [155.858, 156.215], 99% [155.793, 156.280]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 50.676 ops/ms
# Warmup Iteration   2: 122.660 ops/ms
# Warmup Iteration   3: 156.828 ops/ms
# Warmup Iteration   4: 157.142 ops/ms
# Warmup Iteration   5: 155.587 ops/ms
# Warmup Iteration   6: 155.751 ops/ms
# Warmup Iteration   7: 133.015 ops/ms
# Warmup Iteration   8: 155.855 ops/ms
# Warmup Iteration   9: 156.834 ops/ms
# Warmup Iteration  10: 157.456 ops/ms
# Warmup Iteration  11: 157.362 ops/ms
# Warmup Iteration  12: 156.644 ops/ms
# Warmup Iteration  13: 156.729 ops/ms
# Warmup Iteration  14: 157.393 ops/ms
# Warmup Iteration  15: 157.156 ops/ms
# Warmup Iteration  16: 157.194 ops/ms
# Warmup Iteration  17: 156.001 ops/ms
# Warmup Iteration  18: 155.516 ops/ms
# Warmup Iteration  19: 147.559 ops/ms
# Warmup Iteration  20: 146.520 ops/ms
Iteration   1: 151.481 ops/ms
Iteration   2: 156.339 ops/ms
Iteration   3: 156.182 ops/ms
Iteration   4: 155.717 ops/ms
Iteration   5: 155.907 ops/ms
Iteration   6: 156.609 ops/ms
Iteration   7: 155.899 ops/ms
Iteration   8: 156.085 ops/ms
Iteration   9: 156.106 ops/ms
Iteration  10: 155.934 ops/ms
Iteration  11: 155.797 ops/ms
Iteration  12: 156.187 ops/ms
Iteration  13: 155.995 ops/ms
Iteration  14: 156.601 ops/ms
Iteration  15: 156.077 ops/ms
Iteration  16: 155.977 ops/ms
Iteration  17: 156.017 ops/ms
Iteration  18: 156.152 ops/ms
Iteration  19: 156.534 ops/ms
Iteration  20: 156.504 ops/ms

Result : 155.905 ?(95%) 0.502 ?(99%) 0.687 ops/ms
  Statistics: (min, avg, max) = (151.481, 155.905, 156.609), stdev = 1.073
  Confidence intervals: 95% [155.403, 156.407], 99% [155.218, 156.591]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61150.889 ops/ms
# Warmup Iteration   2: 87174.380 ops/ms
# Warmup Iteration   3: 84681.918 ops/ms
# Warmup Iteration   4: 89650.446 ops/ms
# Warmup Iteration   5: 90595.469 ops/ms
# Warmup Iteration   6: 90232.445 ops/ms
# Warmup Iteration   7: 90574.491 ops/ms
# Warmup Iteration   8: 89444.125 ops/ms
# Warmup Iteration   9: 92602.148 ops/ms
# Warmup Iteration  10: 94875.239 ops/ms
# Warmup Iteration  11: 94895.207 ops/ms
# Warmup Iteration  12: 94657.070 ops/ms
# Warmup Iteration  13: 94454.276 ops/ms
# Warmup Iteration  14: 94600.204 ops/ms
# Warmup Iteration  15: 94503.014 ops/ms
# Warmup Iteration  16: 95352.939 ops/ms
# Warmup Iteration  17: 94405.565 ops/ms
# Warmup Iteration  18: 94967.368 ops/ms
# Warmup Iteration  19: 94934.781 ops/ms
# Warmup Iteration  20: 95197.192 ops/ms
Iteration   1: 94883.940 ops/ms
Iteration   2: 94743.842 ops/ms
Iteration   3: 94811.293 ops/ms
Iteration   4: 93896.991 ops/ms
Iteration   5: 94459.383 ops/ms
Iteration   6: 94592.419 ops/ms
Iteration   7: 95142.197 ops/ms
Iteration   8: 93639.463 ops/ms
Iteration   9: 94281.142 ops/ms
Iteration  10: 94725.249 ops/ms
Iteration  11: 94489.172 ops/ms
Iteration  12: 94808.465 ops/ms
Iteration  13: 95096.258 ops/ms
Iteration  14: 94731.430 ops/ms
Iteration  15: 94442.413 ops/ms
Iteration  16: 94924.108 ops/ms
Iteration  17: 94901.850 ops/ms
Iteration  18: 94817.898 ops/ms
Iteration  19: 94878.803 ops/ms
Iteration  20: 95033.936 ops/ms

Result : 94665.013 ?(95%) 178.479 ?(99%) 243.969 ops/ms
  Statistics: (min, avg, max) = (93639.463, 94665.013, 95142.197), stdev = 381.357
  Confidence intervals: 95% [94486.534, 94843.491], 99% [94421.043, 94908.982]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60820.472 ops/ms
# Warmup Iteration   2: 86911.873 ops/ms
# Warmup Iteration   3: 90635.857 ops/ms
# Warmup Iteration   4: 89966.831 ops/ms
# Warmup Iteration   5: 90201.312 ops/ms
# Warmup Iteration   6: 90769.070 ops/ms
# Warmup Iteration   7: 90234.006 ops/ms
# Warmup Iteration   8: 89962.561 ops/ms
# Warmup Iteration   9: 91870.789 ops/ms
# Warmup Iteration  10: 94386.681 ops/ms
# Warmup Iteration  11: 94507.923 ops/ms
# Warmup Iteration  12: 94582.928 ops/ms
# Warmup Iteration  13: 94786.256 ops/ms
# Warmup Iteration  14: 94619.769 ops/ms
# Warmup Iteration  15: 94362.486 ops/ms
# Warmup Iteration  16: 94534.930 ops/ms
# Warmup Iteration  17: 94609.654 ops/ms
# Warmup Iteration  18: 94837.190 ops/ms
# Warmup Iteration  19: 94549.253 ops/ms
# Warmup Iteration  20: 94614.011 ops/ms
Iteration   1: 94948.578 ops/ms
Iteration   2: 94302.148 ops/ms
Iteration   3: 94787.117 ops/ms
Iteration   4: 95038.030 ops/ms
Iteration   5: 94547.439 ops/ms
Iteration   6: 94448.008 ops/ms
Iteration   7: 94506.199 ops/ms
Iteration   8: 94801.164 ops/ms
Iteration   9: 94813.059 ops/ms
Iteration  10: 94556.136 ops/ms
Iteration  11: 94643.015 ops/ms
Iteration  12: 94722.610 ops/ms
Iteration  13: 94491.331 ops/ms
Iteration  14: 94685.766 ops/ms
Iteration  15: 94632.191 ops/ms
Iteration  16: 94823.582 ops/ms
Iteration  17: 94210.519 ops/ms
Iteration  18: 94710.438 ops/ms
Iteration  19: 95024.274 ops/ms
Iteration  20: 94541.134 ops/ms

Result : 94661.637 ?(95%) 102.873 ?(99%) 140.621 ops/ms
  Statistics: (min, avg, max) = (94210.519, 94661.637, 95038.030), stdev = 219.810
  Confidence intervals: 95% [94558.764, 94764.510], 99% [94521.016, 94802.258]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60098.194 ops/ms
# Warmup Iteration   2: 86931.380 ops/ms
# Warmup Iteration   3: 90539.975 ops/ms
# Warmup Iteration   4: 90358.280 ops/ms
# Warmup Iteration   5: 90614.385 ops/ms
# Warmup Iteration   6: 90019.062 ops/ms
# Warmup Iteration   7: 91057.774 ops/ms
# Warmup Iteration   8: 90821.213 ops/ms
# Warmup Iteration   9: 91821.568 ops/ms
# Warmup Iteration  10: 94207.668 ops/ms
# Warmup Iteration  11: 94542.866 ops/ms
# Warmup Iteration  12: 94718.759 ops/ms
# Warmup Iteration  13: 94744.211 ops/ms
# Warmup Iteration  14: 94643.951 ops/ms
# Warmup Iteration  15: 94342.685 ops/ms
# Warmup Iteration  16: 94831.411 ops/ms
# Warmup Iteration  17: 94168.699 ops/ms
# Warmup Iteration  18: 95007.157 ops/ms
# Warmup Iteration  19: 93911.213 ops/ms
# Warmup Iteration  20: 94595.468 ops/ms
Iteration   1: 94495.903 ops/ms
Iteration   2: 93816.539 ops/ms
Iteration   3: 94438.158 ops/ms
Iteration   4: 94973.396 ops/ms
Iteration   5: 94736.890 ops/ms
Iteration   6: 94861.818 ops/ms
Iteration   7: 93798.726 ops/ms
Iteration   8: 94326.532 ops/ms
Iteration   9: 94884.181 ops/ms
Iteration  10: 94508.525 ops/ms
Iteration  11: 94388.618 ops/ms
Iteration  12: 94646.763 ops/ms
Iteration  13: 94760.610 ops/ms
Iteration  14: 94955.997 ops/ms
Iteration  15: 94389.168 ops/ms
Iteration  16: 94461.375 ops/ms
Iteration  17: 94956.106 ops/ms
Iteration  18: 94796.481 ops/ms
Iteration  19: 94645.321 ops/ms
Iteration  20: 94866.525 ops/ms

Result : 94585.382 ?(95%) 158.557 ?(99%) 216.738 ops/ms
  Statistics: (min, avg, max) = (93798.726, 94585.382, 94973.396), stdev = 338.791
  Confidence intervals: 95% [94426.825, 94743.939], 99% [94368.644, 94802.119]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60663.343 ops/ms
# Warmup Iteration   2: 86903.659 ops/ms
# Warmup Iteration   3: 90310.159 ops/ms
# Warmup Iteration   4: 90129.358 ops/ms
# Warmup Iteration   5: 90826.520 ops/ms
# Warmup Iteration   6: 90123.311 ops/ms
# Warmup Iteration   7: 89904.720 ops/ms
# Warmup Iteration   8: 90004.707 ops/ms
# Warmup Iteration   9: 91796.009 ops/ms
# Warmup Iteration  10: 94374.159 ops/ms
# Warmup Iteration  11: 94253.129 ops/ms
# Warmup Iteration  12: 94660.898 ops/ms
# Warmup Iteration  13: 94676.038 ops/ms
# Warmup Iteration  14: 94590.174 ops/ms
# Warmup Iteration  15: 94433.905 ops/ms
# Warmup Iteration  16: 94340.702 ops/ms
# Warmup Iteration  17: 94528.782 ops/ms
# Warmup Iteration  18: 94006.485 ops/ms
# Warmup Iteration  19: 94129.964 ops/ms
# Warmup Iteration  20: 94343.905 ops/ms
Iteration   1: 94613.621 ops/ms
Iteration   2: 94245.067 ops/ms
Iteration   3: 94408.536 ops/ms
Iteration   4: 94528.180 ops/ms
Iteration   5: 94446.544 ops/ms
Iteration   6: 94252.562 ops/ms
Iteration   7: 94267.244 ops/ms
Iteration   8: 94355.039 ops/ms
Iteration   9: 94088.173 ops/ms
Iteration  10: 94553.822 ops/ms
Iteration  11: 94543.523 ops/ms
Iteration  12: 94572.509 ops/ms
Iteration  13: 93801.922 ops/ms
Iteration  14: 94601.465 ops/ms
Iteration  15: 94336.870 ops/ms
Iteration  16: 94473.763 ops/ms
Iteration  17: 94331.030 ops/ms
Iteration  18: 94132.319 ops/ms
Iteration  19: 93939.679 ops/ms
Iteration  20: 94410.258 ops/ms

Result : 94345.106 ?(95%) 103.920 ?(99%) 142.053 ops/ms
  Statistics: (min, avg, max) = (93801.922, 94345.106, 94613.621), stdev = 222.048
  Confidence intervals: 95% [94241.186, 94449.027], 99% [94203.053, 94487.159]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60137.518 ops/ms
# Warmup Iteration   2: 86962.836 ops/ms
# Warmup Iteration   3: 90270.794 ops/ms
# Warmup Iteration   4: 90278.284 ops/ms
# Warmup Iteration   5: 91034.235 ops/ms
# Warmup Iteration   6: 81420.918 ops/ms
# Warmup Iteration   7: 90292.909 ops/ms
# Warmup Iteration   8: 89741.175 ops/ms
# Warmup Iteration   9: 91699.856 ops/ms
# Warmup Iteration  10: 88005.990 ops/ms
# Warmup Iteration  11: 94618.608 ops/ms
# Warmup Iteration  12: 94852.095 ops/ms
# Warmup Iteration  13: 95225.196 ops/ms
# Warmup Iteration  14: 94818.876 ops/ms
# Warmup Iteration  15: 95357.709 ops/ms
# Warmup Iteration  16: 94222.433 ops/ms
# Warmup Iteration  17: 94717.126 ops/ms
# Warmup Iteration  18: 94949.392 ops/ms
# Warmup Iteration  19: 94722.855 ops/ms
# Warmup Iteration  20: 94612.399 ops/ms
Iteration   1: 95072.618 ops/ms
Iteration   2: 95111.854 ops/ms
Iteration   3: 95062.087 ops/ms
Iteration   4: 94860.605 ops/ms
Iteration   5: 94933.423 ops/ms
Iteration   6: 94810.603 ops/ms
Iteration   7: 94473.266 ops/ms
Iteration   8: 94834.500 ops/ms
Iteration   9: 94596.725 ops/ms
Iteration  10: 94949.132 ops/ms
Iteration  11: 95039.977 ops/ms
Iteration  12: 93949.407 ops/ms
Iteration  13: 94979.458 ops/ms
Iteration  14: 94709.298 ops/ms
Iteration  15: 94400.680 ops/ms
Iteration  16: 95246.350 ops/ms
Iteration  17: 93967.695 ops/ms
Iteration  18: 94525.772 ops/ms
Iteration  19: 94747.318 ops/ms
Iteration  20: 95055.433 ops/ms

Result : 94766.310 ?(95%) 167.262 ?(99%) 228.636 ops/ms
  Statistics: (min, avg, max) = (93949.407, 94766.310, 95246.350), stdev = 357.390
  Confidence intervals: 95% [94599.048, 94933.572], 99% [94537.674, 94994.946]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 22.951 ops/ms
# Warmup Iteration   2: 33.250 ops/ms
# Warmup Iteration   3: 37.622 ops/ms
# Warmup Iteration   4: 40.496 ops/ms
# Warmup Iteration   5: 41.477 ops/ms
# Warmup Iteration   6: 41.375 ops/ms
# Warmup Iteration   7: 41.874 ops/ms
# Warmup Iteration   8: 41.660 ops/ms
# Warmup Iteration   9: 42.044 ops/ms
# Warmup Iteration  10: 42.082 ops/ms
# Warmup Iteration  11: 42.163 ops/ms
# Warmup Iteration  12: 42.041 ops/ms
# Warmup Iteration  13: 41.978 ops/ms
# Warmup Iteration  14: 42.191 ops/ms
# Warmup Iteration  15: 42.154 ops/ms
# Warmup Iteration  16: 42.084 ops/ms
# Warmup Iteration  17: 42.148 ops/ms
# Warmup Iteration  18: 42.084 ops/ms
# Warmup Iteration  19: 41.870 ops/ms
# Warmup Iteration  20: 42.068 ops/ms
Iteration   1: 41.936 ops/ms
Iteration   2: 42.282 ops/ms
Iteration   3: 42.211 ops/ms
Iteration   4: 42.094 ops/ms
Iteration   5: 39.808 ops/ms
Iteration   6: 39.167 ops/ms
Iteration   7: 41.161 ops/ms
Iteration   8: 42.046 ops/ms
Iteration   9: 42.266 ops/ms
Iteration  10: 42.100 ops/ms
Iteration  11: 42.215 ops/ms
Iteration  12: 42.188 ops/ms
Iteration  13: 42.139 ops/ms
Iteration  14: 42.227 ops/ms
Iteration  15: 42.262 ops/ms
Iteration  16: 42.236 ops/ms
Iteration  17: 42.191 ops/ms
Iteration  18: 42.231 ops/ms
Iteration  19: 42.062 ops/ms
Iteration  20: 42.026 ops/ms

Result : 41.842 ?(95%) 0.396 ?(99%) 0.542 ops/ms
  Statistics: (min, avg, max) = (39.167, 41.842, 42.282), stdev = 0.847
  Confidence intervals: 95% [41.446, 42.239], 99% [41.301, 42.384]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 22.869 ops/ms
# Warmup Iteration   2: 30.807 ops/ms
# Warmup Iteration   3: 35.601 ops/ms
# Warmup Iteration   4: 38.670 ops/ms
# Warmup Iteration   5: 39.410 ops/ms
# Warmup Iteration   6: 39.623 ops/ms
# Warmup Iteration   7: 39.889 ops/ms
# Warmup Iteration   8: 39.657 ops/ms
# Warmup Iteration   9: 39.939 ops/ms
# Warmup Iteration  10: 39.866 ops/ms
# Warmup Iteration  11: 39.898 ops/ms
# Warmup Iteration  12: 40.240 ops/ms
# Warmup Iteration  13: 39.950 ops/ms
# Warmup Iteration  14: 40.181 ops/ms
# Warmup Iteration  15: 40.186 ops/ms
# Warmup Iteration  16: 40.160 ops/ms
# Warmup Iteration  17: 40.008 ops/ms
# Warmup Iteration  18: 40.277 ops/ms
# Warmup Iteration  19: 40.255 ops/ms
# Warmup Iteration  20: 40.239 ops/ms
Iteration   1: 40.105 ops/ms
Iteration   2: 40.253 ops/ms
Iteration   3: 40.156 ops/ms
Iteration   4: 40.199 ops/ms
Iteration   5: 40.254 ops/ms
Iteration   6: 40.216 ops/ms
Iteration   7: 39.980 ops/ms
Iteration   8: 40.278 ops/ms
Iteration   9: 40.008 ops/ms
Iteration  10: 40.034 ops/ms
Iteration  11: 40.102 ops/ms
Iteration  12: 40.191 ops/ms
Iteration  13: 40.096 ops/ms
Iteration  14: 39.858 ops/ms
Iteration  15: 40.176 ops/ms
Iteration  16: 40.185 ops/ms
Iteration  17: 40.241 ops/ms
Iteration  18: 39.868 ops/ms
Iteration  19: 40.127 ops/ms
Iteration  20: 40.253 ops/ms

Result : 40.129 ?(95%) 0.058 ?(99%) 0.079 ops/ms
  Statistics: (min, avg, max) = (39.858, 40.129, 40.278), stdev = 0.124
  Confidence intervals: 95% [40.071, 40.187], 99% [40.049, 40.208]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 22.467 ops/ms
# Warmup Iteration   2: 33.798 ops/ms
# Warmup Iteration   3: 38.151 ops/ms
# Warmup Iteration   4: 41.035 ops/ms
# Warmup Iteration   5: 42.091 ops/ms
# Warmup Iteration   6: 42.291 ops/ms
# Warmup Iteration   7: 42.625 ops/ms
# Warmup Iteration   8: 42.651 ops/ms
# Warmup Iteration   9: 42.675 ops/ms
# Warmup Iteration  10: 42.993 ops/ms
# Warmup Iteration  11: 42.989 ops/ms
# Warmup Iteration  12: 42.994 ops/ms
# Warmup Iteration  13: 43.051 ops/ms
# Warmup Iteration  14: 42.869 ops/ms
# Warmup Iteration  15: 43.041 ops/ms
# Warmup Iteration  16: 43.017 ops/ms
# Warmup Iteration  17: 43.091 ops/ms
# Warmup Iteration  18: 42.966 ops/ms
# Warmup Iteration  19: 43.011 ops/ms
# Warmup Iteration  20: 43.166 ops/ms
Iteration   1: 43.180 ops/ms
Iteration   2: 42.942 ops/ms
Iteration   3: 43.126 ops/ms
Iteration   4: 43.114 ops/ms
Iteration   5: 42.953 ops/ms
Iteration   6: 43.134 ops/ms
Iteration   7: 43.022 ops/ms
Iteration   8: 43.205 ops/ms
Iteration   9: 42.943 ops/ms
Iteration  10: 43.039 ops/ms
Iteration  11: 43.199 ops/ms
Iteration  12: 43.089 ops/ms
Iteration  13: 42.979 ops/ms
Iteration  14: 42.978 ops/ms
Iteration  15: 43.199 ops/ms
Iteration  16: 43.167 ops/ms
Iteration  17: 42.906 ops/ms
Iteration  18: 43.015 ops/ms
Iteration  19: 43.105 ops/ms
Iteration  20: 42.942 ops/ms

Result : 43.062 ?(95%) 0.047 ?(99%) 0.065 ops/ms
  Statistics: (min, avg, max) = (42.906, 43.062, 43.205), stdev = 0.101
  Confidence intervals: 95% [43.015, 43.109], 99% [42.997, 43.127]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 23.591 ops/ms
# Warmup Iteration   2: 33.808 ops/ms
# Warmup Iteration   3: 37.358 ops/ms
# Warmup Iteration   4: 40.207 ops/ms
# Warmup Iteration   5: 41.112 ops/ms
# Warmup Iteration   6: 41.123 ops/ms
# Warmup Iteration   7: 41.283 ops/ms
# Warmup Iteration   8: 41.186 ops/ms
# Warmup Iteration   9: 41.629 ops/ms
# Warmup Iteration  10: 41.567 ops/ms
# Warmup Iteration  11: 41.700 ops/ms
# Warmup Iteration  12: 41.725 ops/ms
# Warmup Iteration  13: 41.733 ops/ms
# Warmup Iteration  14: 41.808 ops/ms
# Warmup Iteration  15: 41.549 ops/ms
# Warmup Iteration  16: 41.792 ops/ms
# Warmup Iteration  17: 41.750 ops/ms
# Warmup Iteration  18: 41.658 ops/ms
# Warmup Iteration  19: 41.839 ops/ms
# Warmup Iteration  20: 41.685 ops/ms
Iteration   1: 41.688 ops/ms
Iteration   2: 41.648 ops/ms
Iteration   3: 41.706 ops/ms
Iteration   4: 41.778 ops/ms
Iteration   5: 41.876 ops/ms
Iteration   6: 41.851 ops/ms
Iteration   7: 41.696 ops/ms
Iteration   8: 41.873 ops/ms
Iteration   9: 41.812 ops/ms
Iteration  10: 41.819 ops/ms
Iteration  11: 41.794 ops/ms
Iteration  12: 41.676 ops/ms
Iteration  13: 41.797 ops/ms
Iteration  14: 41.660 ops/ms
Iteration  15: 41.674 ops/ms
Iteration  16: 41.661 ops/ms
Iteration  17: 41.655 ops/ms
Iteration  18: 41.813 ops/ms
Iteration  19: 41.862 ops/ms
Iteration  20: 41.769 ops/ms

Result : 41.755 ?(95%) 0.038 ?(99%) 0.052 ops/ms
  Statistics: (min, avg, max) = (41.648, 41.755, 41.876), stdev = 0.082
  Confidence intervals: 95% [41.717, 41.794], 99% [41.703, 41.808]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 23.540 ops/ms
# Warmup Iteration   2: 32.805 ops/ms
# Warmup Iteration   3: 37.579 ops/ms
# Warmup Iteration   4: 40.454 ops/ms
# Warmup Iteration   5: 41.295 ops/ms
# Warmup Iteration   6: 41.443 ops/ms
# Warmup Iteration   7: 41.856 ops/ms
# Warmup Iteration   8: 41.869 ops/ms
# Warmup Iteration   9: 41.891 ops/ms
# Warmup Iteration  10: 42.184 ops/ms
# Warmup Iteration  11: 42.204 ops/ms
# Warmup Iteration  12: 42.251 ops/ms
# Warmup Iteration  13: 42.190 ops/ms
# Warmup Iteration  14: 42.430 ops/ms
# Warmup Iteration  15: 42.279 ops/ms
# Warmup Iteration  16: 42.041 ops/ms
# Warmup Iteration  17: 42.286 ops/ms
# Warmup Iteration  18: 42.009 ops/ms
# Warmup Iteration  19: 42.246 ops/ms
# Warmup Iteration  20: 42.131 ops/ms
Iteration   1: 42.213 ops/ms
Iteration   2: 42.289 ops/ms
Iteration   3: 42.184 ops/ms
Iteration   4: 42.273 ops/ms
Iteration   5: 41.990 ops/ms
Iteration   6: 42.235 ops/ms
Iteration   7: 42.181 ops/ms
Iteration   8: 42.245 ops/ms
Iteration   9: 42.240 ops/ms
Iteration  10: 42.152 ops/ms
Iteration  11: 42.216 ops/ms
Iteration  12: 42.272 ops/ms
Iteration  13: 42.093 ops/ms
Iteration  14: 42.087 ops/ms
Iteration  15: 41.880 ops/ms
Iteration  16: 42.089 ops/ms
Iteration  17: 42.039 ops/ms
Iteration  18: 42.179 ops/ms
Iteration  19: 42.168 ops/ms
Iteration  20: 42.010 ops/ms

Result : 42.152 ?(95%) 0.051 ?(99%) 0.070 ops/ms
  Statistics: (min, avg, max) = (41.880, 42.152, 42.289), stdev = 0.109
  Confidence intervals: 95% [42.101, 42.203], 99% [42.082, 42.222]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.136 ops/ms
# Warmup Iteration   2: 14.612 ops/ms
# Warmup Iteration   3: 16.613 ops/ms
# Warmup Iteration   4: 18.006 ops/ms
# Warmup Iteration   5: 18.407 ops/ms
# Warmup Iteration   6: 18.429 ops/ms
# Warmup Iteration   7: 18.535 ops/ms
# Warmup Iteration   8: 18.603 ops/ms
# Warmup Iteration   9: 18.616 ops/ms
# Warmup Iteration  10: 18.675 ops/ms
# Warmup Iteration  11: 18.687 ops/ms
# Warmup Iteration  12: 18.680 ops/ms
# Warmup Iteration  13: 18.779 ops/ms
# Warmup Iteration  14: 18.777 ops/ms
# Warmup Iteration  15: 18.772 ops/ms
# Warmup Iteration  16: 18.781 ops/ms
# Warmup Iteration  17: 18.698 ops/ms
# Warmup Iteration  18: 18.650 ops/ms
# Warmup Iteration  19: 18.678 ops/ms
# Warmup Iteration  20: 18.722 ops/ms
Iteration   1: 18.731 ops/ms
Iteration   2: 18.740 ops/ms
Iteration   3: 18.695 ops/ms
Iteration   4: 18.751 ops/ms
Iteration   5: 18.666 ops/ms
Iteration   6: 18.746 ops/ms
Iteration   7: 18.706 ops/ms
Iteration   8: 18.738 ops/ms
Iteration   9: 18.744 ops/ms
Iteration  10: 18.653 ops/ms
Iteration  11: 18.745 ops/ms
Iteration  12: 18.729 ops/ms
Iteration  13: 18.729 ops/ms
Iteration  14: 18.740 ops/ms
Iteration  15: 18.708 ops/ms
Iteration  16: 18.653 ops/ms
Iteration  17: 18.655 ops/ms
Iteration  18: 18.652 ops/ms
Iteration  19: 18.649 ops/ms
Iteration  20: 18.739 ops/ms

Result : 18.708 ?(95%) 0.018 ?(99%) 0.025 ops/ms
  Statistics: (min, avg, max) = (18.649, 18.708, 18.751), stdev = 0.039
  Confidence intervals: 95% [18.690, 18.727], 99% [18.684, 18.733]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.410 ops/ms
# Warmup Iteration   2: 13.465 ops/ms
# Warmup Iteration   3: 15.855 ops/ms
# Warmup Iteration   4: 17.488 ops/ms
# Warmup Iteration   5: 17.986 ops/ms
# Warmup Iteration   6: 18.019 ops/ms
# Warmup Iteration   7: 18.088 ops/ms
# Warmup Iteration   8: 18.013 ops/ms
# Warmup Iteration   9: 18.139 ops/ms
# Warmup Iteration  10: 18.186 ops/ms
# Warmup Iteration  11: 18.177 ops/ms
# Warmup Iteration  12: 18.270 ops/ms
# Warmup Iteration  13: 18.220 ops/ms
# Warmup Iteration  14: 18.196 ops/ms
# Warmup Iteration  15: 18.279 ops/ms
# Warmup Iteration  16: 18.270 ops/ms
# Warmup Iteration  17: 18.341 ops/ms
# Warmup Iteration  18: 18.288 ops/ms
# Warmup Iteration  19: 18.224 ops/ms
# Warmup Iteration  20: 18.278 ops/ms
Iteration   1: 18.242 ops/ms
Iteration   2: 18.258 ops/ms
Iteration   3: 18.259 ops/ms
Iteration   4: 18.235 ops/ms
Iteration   5: 18.220 ops/ms
Iteration   6: 18.203 ops/ms
Iteration   7: 18.358 ops/ms
Iteration   8: 18.295 ops/ms
Iteration   9: 18.304 ops/ms
Iteration  10: 18.223 ops/ms
Iteration  11: 18.088 ops/ms
Iteration  12: 16.664 ops/ms
Iteration  13: 16.989 ops/ms
Iteration  14: 18.263 ops/ms
Iteration  15: 18.330 ops/ms
Iteration  16: 18.206 ops/ms
Iteration  17: 18.175 ops/ms
Iteration  18: 18.297 ops/ms
Iteration  19: 18.254 ops/ms
Iteration  20: 18.320 ops/ms

Result : 18.109 ?(95%) 0.209 ?(99%) 0.285 ops/ms
  Statistics: (min, avg, max) = (16.664, 18.109, 18.358), stdev = 0.446
  Confidence intervals: 95% [17.900, 18.318], 99% [17.824, 18.394]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.540 ops/ms
# Warmup Iteration   2: 13.892 ops/ms
# Warmup Iteration   3: 15.910 ops/ms
# Warmup Iteration   4: 17.167 ops/ms
# Warmup Iteration   5: 17.545 ops/ms
# Warmup Iteration   6: 17.563 ops/ms
# Warmup Iteration   7: 17.694 ops/ms
# Warmup Iteration   8: 17.768 ops/ms
# Warmup Iteration   9: 17.755 ops/ms
# Warmup Iteration  10: 17.896 ops/ms
# Warmup Iteration  11: 17.867 ops/ms
# Warmup Iteration  12: 17.827 ops/ms
# Warmup Iteration  13: 17.851 ops/ms
# Warmup Iteration  14: 17.880 ops/ms
# Warmup Iteration  15: 17.860 ops/ms
# Warmup Iteration  16: 17.872 ops/ms
# Warmup Iteration  17: 17.690 ops/ms
# Warmup Iteration  18: 17.813 ops/ms
# Warmup Iteration  19: 17.768 ops/ms
# Warmup Iteration  20: 17.846 ops/ms
Iteration   1: 17.824 ops/ms
Iteration   2: 17.828 ops/ms
Iteration   3: 17.751 ops/ms
Iteration   4: 17.711 ops/ms
Iteration   5: 17.842 ops/ms
Iteration   6: 17.786 ops/ms
Iteration   7: 17.832 ops/ms
Iteration   8: 17.849 ops/ms
Iteration   9: 17.756 ops/ms
Iteration  10: 17.808 ops/ms
Iteration  11: 17.830 ops/ms
Iteration  12: 17.779 ops/ms
Iteration  13: 17.813 ops/ms
Iteration  14: 17.748 ops/ms
Iteration  15: 17.831 ops/ms
Iteration  16: 17.831 ops/ms
Iteration  17: 17.773 ops/ms
Iteration  18: 17.843 ops/ms
Iteration  19: 17.888 ops/ms
Iteration  20: 17.740 ops/ms

Result : 17.803 ?(95%) 0.021 ?(99%) 0.029 ops/ms
  Statistics: (min, avg, max) = (17.711, 17.803, 17.888), stdev = 0.045
  Confidence intervals: 95% [17.782, 17.824], 99% [17.774, 17.832]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.663 ops/ms
# Warmup Iteration   2: 13.320 ops/ms
# Warmup Iteration   3: 15.520 ops/ms
# Warmup Iteration   4: 16.981 ops/ms
# Warmup Iteration   5: 17.395 ops/ms
# Warmup Iteration   6: 17.456 ops/ms
# Warmup Iteration   7: 17.579 ops/ms
# Warmup Iteration   8: 17.630 ops/ms
# Warmup Iteration   9: 17.729 ops/ms
# Warmup Iteration  10: 17.818 ops/ms
# Warmup Iteration  11: 17.750 ops/ms
# Warmup Iteration  12: 17.753 ops/ms
# Warmup Iteration  13: 17.765 ops/ms
# Warmup Iteration  14: 17.831 ops/ms
# Warmup Iteration  15: 17.752 ops/ms
# Warmup Iteration  16: 17.860 ops/ms
# Warmup Iteration  17: 17.781 ops/ms
# Warmup Iteration  18: 17.834 ops/ms
# Warmup Iteration  19: 17.756 ops/ms
# Warmup Iteration  20: 17.821 ops/ms
Iteration   1: 17.831 ops/ms
Iteration   2: 17.736 ops/ms
Iteration   3: 17.786 ops/ms
Iteration   4: 17.858 ops/ms
Iteration   5: 17.334 ops/ms
Iteration   6: 17.664 ops/ms
Iteration   7: 17.822 ops/ms
Iteration   8: 17.834 ops/ms
Iteration   9: 17.754 ops/ms
Iteration  10: 17.743 ops/ms
Iteration  11: 17.773 ops/ms
Iteration  12: 17.749 ops/ms
Iteration  13: 17.752 ops/ms
Iteration  14: 17.810 ops/ms
Iteration  15: 17.844 ops/ms
Iteration  16: 17.827 ops/ms
Iteration  17: 17.702 ops/ms
Iteration  18: 17.728 ops/ms
Iteration  19: 17.825 ops/ms
Iteration  20: 17.818 ops/ms

Result : 17.759 ?(95%) 0.053 ?(99%) 0.072 ops/ms
  Statistics: (min, avg, max) = (17.334, 17.759, 17.858), stdev = 0.113
  Confidence intervals: 95% [17.707, 17.812], 99% [17.687, 17.832]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.400 ops/ms
# Warmup Iteration   2: 12.894 ops/ms
# Warmup Iteration   3: 15.272 ops/ms
# Warmup Iteration   4: 16.763 ops/ms
# Warmup Iteration   5: 17.199 ops/ms
# Warmup Iteration   6: 17.184 ops/ms
# Warmup Iteration   7: 17.393 ops/ms
# Warmup Iteration   8: 17.417 ops/ms
# Warmup Iteration   9: 17.491 ops/ms
# Warmup Iteration  10: 17.577 ops/ms
# Warmup Iteration  11: 17.520 ops/ms
# Warmup Iteration  12: 17.511 ops/ms
# Warmup Iteration  13: 17.553 ops/ms
# Warmup Iteration  14: 17.530 ops/ms
# Warmup Iteration  15: 17.505 ops/ms
# Warmup Iteration  16: 17.569 ops/ms
# Warmup Iteration  17: 17.523 ops/ms
# Warmup Iteration  18: 17.618 ops/ms
# Warmup Iteration  19: 17.541 ops/ms
# Warmup Iteration  20: 17.576 ops/ms
Iteration   1: 17.529 ops/ms
Iteration   2: 17.631 ops/ms
Iteration   3: 17.570 ops/ms
Iteration   4: 17.615 ops/ms
Iteration   5: 17.532 ops/ms
Iteration   6: 17.555 ops/ms
Iteration   7: 17.510 ops/ms
Iteration   8: 17.614 ops/ms
Iteration   9: 17.529 ops/ms
Iteration  10: 17.570 ops/ms
Iteration  11: 17.581 ops/ms
Iteration  12: 17.416 ops/ms
Iteration  13: 17.511 ops/ms
Iteration  14: 17.477 ops/ms
Iteration  15: 17.453 ops/ms
Iteration  16: 17.510 ops/ms
Iteration  17: 17.546 ops/ms
Iteration  18: 17.471 ops/ms
Iteration  19: 17.567 ops/ms
Iteration  20: 17.611 ops/ms

Result : 17.540 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (17.416, 17.540, 17.631), stdev = 0.058
  Confidence intervals: 95% [17.513, 17.567], 99% [17.503, 17.577]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 43.775 ops/ms
# Warmup Iteration   2: 68.528 ops/ms
# Warmup Iteration   3: 77.118 ops/ms
# Warmup Iteration   4: 81.761 ops/ms
# Warmup Iteration   5: 83.543 ops/ms
# Warmup Iteration   6: 83.640 ops/ms
# Warmup Iteration   7: 84.088 ops/ms
# Warmup Iteration   8: 84.052 ops/ms
# Warmup Iteration   9: 84.287 ops/ms
# Warmup Iteration  10: 85.057 ops/ms
# Warmup Iteration  11: 85.097 ops/ms
# Warmup Iteration  12: 84.791 ops/ms
# Warmup Iteration  13: 85.187 ops/ms
# Warmup Iteration  14: 84.479 ops/ms
# Warmup Iteration  15: 85.004 ops/ms
# Warmup Iteration  16: 84.640 ops/ms
# Warmup Iteration  17: 84.442 ops/ms
# Warmup Iteration  18: 84.802 ops/ms
# Warmup Iteration  19: 85.183 ops/ms
# Warmup Iteration  20: 84.668 ops/ms
Iteration   1: 84.639 ops/ms
Iteration   2: 84.894 ops/ms
Iteration   3: 84.942 ops/ms
Iteration   4: 84.758 ops/ms
Iteration   5: 85.263 ops/ms
Iteration   6: 84.873 ops/ms
Iteration   7: 84.758 ops/ms
Iteration   8: 84.926 ops/ms
Iteration   9: 85.266 ops/ms
Iteration  10: 85.386 ops/ms
Iteration  11: 85.245 ops/ms
Iteration  12: 85.283 ops/ms
Iteration  13: 85.402 ops/ms
Iteration  14: 84.916 ops/ms
Iteration  15: 84.872 ops/ms
Iteration  16: 84.966 ops/ms
Iteration  17: 84.921 ops/ms
Iteration  18: 85.245 ops/ms
Iteration  19: 85.317 ops/ms
Iteration  20: 84.844 ops/ms

Result : 85.036 ?(95%) 0.111 ?(99%) 0.151 ops/ms
  Statistics: (min, avg, max) = (84.639, 85.036, 85.402), stdev = 0.237
  Confidence intervals: 95% [84.925, 85.147], 99% [84.884, 85.187]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 42.686 ops/ms
# Warmup Iteration   2: 67.074 ops/ms
# Warmup Iteration   3: 76.753 ops/ms
# Warmup Iteration   4: 81.500 ops/ms
# Warmup Iteration   5: 83.296 ops/ms
# Warmup Iteration   6: 83.340 ops/ms
# Warmup Iteration   7: 84.211 ops/ms
# Warmup Iteration   8: 83.861 ops/ms
# Warmup Iteration   9: 84.031 ops/ms
# Warmup Iteration  10: 84.727 ops/ms
# Warmup Iteration  11: 84.851 ops/ms
# Warmup Iteration  12: 84.472 ops/ms
# Warmup Iteration  13: 84.575 ops/ms
# Warmup Iteration  14: 84.882 ops/ms
# Warmup Iteration  15: 84.872 ops/ms
# Warmup Iteration  16: 84.587 ops/ms
# Warmup Iteration  17: 84.967 ops/ms
# Warmup Iteration  18: 84.997 ops/ms
# Warmup Iteration  19: 84.496 ops/ms
# Warmup Iteration  20: 85.029 ops/ms
Iteration   1: 84.671 ops/ms
Iteration   2: 85.025 ops/ms
Iteration   3: 84.810 ops/ms
Iteration   4: 84.604 ops/ms
Iteration   5: 84.685 ops/ms
Iteration   6: 84.835 ops/ms
Iteration   7: 84.981 ops/ms
Iteration   8: 84.991 ops/ms
Iteration   9: 84.530 ops/ms
Iteration  10: 84.506 ops/ms
Iteration  11: 84.767 ops/ms
Iteration  12: 85.216 ops/ms
Iteration  13: 84.620 ops/ms
Iteration  14: 85.122 ops/ms
Iteration  15: 85.114 ops/ms
Iteration  16: 85.060 ops/ms
Iteration  17: 84.709 ops/ms
Iteration  18: 85.086 ops/ms
Iteration  19: 85.117 ops/ms
Iteration  20: 84.993 ops/ms

Result : 84.872 ?(95%) 0.105 ?(99%) 0.143 ops/ms
  Statistics: (min, avg, max) = (84.506, 84.872, 85.216), stdev = 0.223
  Confidence intervals: 95% [84.768, 84.977], 99% [84.729, 85.015]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 41.894 ops/ms
# Warmup Iteration   2: 66.854 ops/ms
# Warmup Iteration   3: 75.468 ops/ms
# Warmup Iteration   4: 80.906 ops/ms
# Warmup Iteration   5: 82.263 ops/ms
# Warmup Iteration   6: 82.344 ops/ms
# Warmup Iteration   7: 83.157 ops/ms
# Warmup Iteration   8: 82.655 ops/ms
# Warmup Iteration   9: 83.209 ops/ms
# Warmup Iteration  10: 83.812 ops/ms
# Warmup Iteration  11: 83.190 ops/ms
# Warmup Iteration  12: 83.763 ops/ms
# Warmup Iteration  13: 83.893 ops/ms
# Warmup Iteration  14: 83.929 ops/ms
# Warmup Iteration  15: 83.588 ops/ms
# Warmup Iteration  16: 83.824 ops/ms
# Warmup Iteration  17: 83.607 ops/ms
# Warmup Iteration  18: 83.894 ops/ms
# Warmup Iteration  19: 83.822 ops/ms
# Warmup Iteration  20: 83.635 ops/ms
Iteration   1: 83.829 ops/ms
Iteration   2: 83.584 ops/ms
Iteration   3: 83.890 ops/ms
Iteration   4: 83.659 ops/ms
Iteration   5: 83.590 ops/ms
Iteration   6: 83.613 ops/ms
Iteration   7: 83.542 ops/ms
Iteration   8: 83.990 ops/ms
Iteration   9: 83.870 ops/ms
Iteration  10: 83.985 ops/ms
Iteration  11: 83.626 ops/ms
Iteration  12: 83.973 ops/ms
Iteration  13: 83.110 ops/ms
Iteration  14: 83.597 ops/ms
Iteration  15: 83.899 ops/ms
Iteration  16: 83.950 ops/ms
Iteration  17: 83.925 ops/ms
Iteration  18: 78.128 ops/ms
Iteration  19: 80.413 ops/ms
Iteration  20: 78.659 ops/ms

Result : 83.042 ?(95%) 0.828 ?(99%) 1.132 ops/ms
  Statistics: (min, avg, max) = (78.128, 83.042, 83.990), stdev = 1.769
  Confidence intervals: 95% [82.213, 83.870], 99% [81.910, 84.174]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 41.923 ops/ms
# Warmup Iteration   2: 67.021 ops/ms
# Warmup Iteration   3: 76.246 ops/ms
# Warmup Iteration   4: 81.161 ops/ms
# Warmup Iteration   5: 82.987 ops/ms
# Warmup Iteration   6: 82.956 ops/ms
# Warmup Iteration   7: 83.664 ops/ms
# Warmup Iteration   8: 83.288 ops/ms
# Warmup Iteration   9: 83.672 ops/ms
# Warmup Iteration  10: 84.369 ops/ms
# Warmup Iteration  11: 84.308 ops/ms
# Warmup Iteration  12: 84.176 ops/ms
# Warmup Iteration  13: 84.406 ops/ms
# Warmup Iteration  14: 84.179 ops/ms
# Warmup Iteration  15: 84.016 ops/ms
# Warmup Iteration  16: 84.516 ops/ms
# Warmup Iteration  17: 84.091 ops/ms
# Warmup Iteration  18: 84.207 ops/ms
# Warmup Iteration  19: 84.468 ops/ms
# Warmup Iteration  20: 84.496 ops/ms
Iteration   1: 84.549 ops/ms
Iteration   2: 84.200 ops/ms
Iteration   3: 84.256 ops/ms
Iteration   4: 84.123 ops/ms
Iteration   5: 84.125 ops/ms
Iteration   6: 84.512 ops/ms
Iteration   7: 84.061 ops/ms
Iteration   8: 84.118 ops/ms
Iteration   9: 84.216 ops/ms
Iteration  10: 84.535 ops/ms
Iteration  11: 84.471 ops/ms
Iteration  12: 84.134 ops/ms
Iteration  13: 84.118 ops/ms
Iteration  14: 84.332 ops/ms
Iteration  15: 84.382 ops/ms
Iteration  16: 84.472 ops/ms
Iteration  17: 84.138 ops/ms
Iteration  18: 84.517 ops/ms
Iteration  19: 84.121 ops/ms
Iteration  20: 84.091 ops/ms

Result : 84.274 ?(95%) 0.083 ?(99%) 0.113 ops/ms
  Statistics: (min, avg, max) = (84.061, 84.274, 84.549), stdev = 0.177
  Confidence intervals: 95% [84.191, 84.357], 99% [84.160, 84.387]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 43.385 ops/ms
# Warmup Iteration   2: 66.305 ops/ms
# Warmup Iteration   3: 75.786 ops/ms
# Warmup Iteration   4: 80.333 ops/ms
# Warmup Iteration   5: 81.405 ops/ms
# Warmup Iteration   6: 81.626 ops/ms
# Warmup Iteration   7: 80.923 ops/ms
# Warmup Iteration   8: 81.755 ops/ms
# Warmup Iteration   9: 82.403 ops/ms
# Warmup Iteration  10: 82.434 ops/ms
# Warmup Iteration  11: 82.408 ops/ms
# Warmup Iteration  12: 82.483 ops/ms
# Warmup Iteration  13: 82.483 ops/ms
# Warmup Iteration  14: 82.766 ops/ms
# Warmup Iteration  15: 82.609 ops/ms
# Warmup Iteration  16: 82.835 ops/ms
# Warmup Iteration  17: 82.171 ops/ms
# Warmup Iteration  18: 82.367 ops/ms
# Warmup Iteration  19: 82.686 ops/ms
# Warmup Iteration  20: 82.183 ops/ms
Iteration   1: 82.352 ops/ms
Iteration   2: 82.666 ops/ms
Iteration   3: 82.731 ops/ms
Iteration   4: 82.205 ops/ms
Iteration   5: 82.342 ops/ms
Iteration   6: 82.408 ops/ms
Iteration   7: 82.234 ops/ms
Iteration   8: 82.380 ops/ms
Iteration   9: 82.410 ops/ms
Iteration  10: 82.681 ops/ms
Iteration  11: 82.691 ops/ms
Iteration  12: 82.606 ops/ms
Iteration  13: 82.525 ops/ms
Iteration  14: 82.615 ops/ms
Iteration  15: 82.306 ops/ms
Iteration  16: 82.352 ops/ms
Iteration  17: 82.319 ops/ms
Iteration  18: 82.636 ops/ms
Iteration  19: 82.496 ops/ms
Iteration  20: 82.271 ops/ms

Result : 82.461 ?(95%) 0.079 ?(99%) 0.108 ops/ms
  Statistics: (min, avg, max) = (82.205, 82.461, 82.731), stdev = 0.169
  Confidence intervals: 95% [82.382, 82.541], 99% [82.353, 82.570]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36377.070 ops/ms
# Warmup Iteration   2: 47253.702 ops/ms
# Warmup Iteration   3: 53149.626 ops/ms
# Warmup Iteration   4: 52955.031 ops/ms
# Warmup Iteration   5: 53150.346 ops/ms
# Warmup Iteration   6: 53307.005 ops/ms
# Warmup Iteration   7: 53508.357 ops/ms
# Warmup Iteration   8: 53281.465 ops/ms
# Warmup Iteration   9: 53865.915 ops/ms
# Warmup Iteration  10: 54796.192 ops/ms
# Warmup Iteration  11: 54822.445 ops/ms
# Warmup Iteration  12: 54914.107 ops/ms
# Warmup Iteration  13: 54723.849 ops/ms
# Warmup Iteration  14: 54594.268 ops/ms
# Warmup Iteration  15: 54705.590 ops/ms
# Warmup Iteration  16: 54748.216 ops/ms
# Warmup Iteration  17: 54709.805 ops/ms
# Warmup Iteration  18: 54906.873 ops/ms
# Warmup Iteration  19: 54592.588 ops/ms
# Warmup Iteration  20: 54956.033 ops/ms
Iteration   1: 54748.890 ops/ms
Iteration   2: 54733.616 ops/ms
Iteration   3: 54984.899 ops/ms
Iteration   4: 54615.169 ops/ms
Iteration   5: 54772.812 ops/ms
Iteration   6: 54815.747 ops/ms
Iteration   7: 54863.747 ops/ms
Iteration   8: 54872.397 ops/ms
Iteration   9: 54667.464 ops/ms
Iteration  10: 54686.364 ops/ms
Iteration  11: 54882.341 ops/ms
Iteration  12: 54744.640 ops/ms
Iteration  13: 54825.379 ops/ms
Iteration  14: 54833.035 ops/ms
Iteration  15: 54547.395 ops/ms
Iteration  16: 54514.720 ops/ms
Iteration  17: 54786.634 ops/ms
Iteration  18: 54797.439 ops/ms
Iteration  19: 54812.054 ops/ms
Iteration  20: 54774.365 ops/ms

Result : 54763.955 ?(95%) 53.460 ?(99%) 73.077 ops/ms
  Statistics: (min, avg, max) = (54514.720, 54763.955, 54984.899), stdev = 114.229
  Confidence intervals: 95% [54710.495, 54817.416], 99% [54690.878, 54837.032]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36284.509 ops/ms
# Warmup Iteration   2: 47094.966 ops/ms
# Warmup Iteration   3: 53231.240 ops/ms
# Warmup Iteration   4: 53047.470 ops/ms
# Warmup Iteration   5: 53271.667 ops/ms
# Warmup Iteration   6: 53444.335 ops/ms
# Warmup Iteration   7: 53205.114 ops/ms
# Warmup Iteration   8: 52984.951 ops/ms
# Warmup Iteration   9: 53914.943 ops/ms
# Warmup Iteration  10: 54710.972 ops/ms
# Warmup Iteration  11: 54724.910 ops/ms
# Warmup Iteration  12: 54821.206 ops/ms
# Warmup Iteration  13: 54713.783 ops/ms
# Warmup Iteration  14: 54769.264 ops/ms
# Warmup Iteration  15: 55018.665 ops/ms
# Warmup Iteration  16: 54351.293 ops/ms
# Warmup Iteration  17: 54598.969 ops/ms
# Warmup Iteration  18: 54769.860 ops/ms
# Warmup Iteration  19: 54725.795 ops/ms
# Warmup Iteration  20: 54984.784 ops/ms
Iteration   1: 54997.012 ops/ms
Iteration   2: 54592.184 ops/ms
Iteration   3: 54719.664 ops/ms
Iteration   4: 54771.126 ops/ms
Iteration   5: 54840.264 ops/ms
Iteration   6: 54777.482 ops/ms
Iteration   7: 54662.666 ops/ms
Iteration   8: 54707.878 ops/ms
Iteration   9: 54750.442 ops/ms
Iteration  10: 54411.198 ops/ms
Iteration  11: 54702.963 ops/ms
Iteration  12: 54716.030 ops/ms
Iteration  13: 54772.980 ops/ms
Iteration  14: 54834.799 ops/ms
Iteration  15: 54683.693 ops/ms
Iteration  16: 54834.615 ops/ms
Iteration  17: 54709.447 ops/ms
Iteration  18: 54841.803 ops/ms
Iteration  19: 54891.326 ops/ms
Iteration  20: 54492.733 ops/ms

Result : 54735.515 ?(95%) 62.149 ?(99%) 84.954 ops/ms
  Statistics: (min, avg, max) = (54411.198, 54735.515, 54997.012), stdev = 132.795
  Confidence intervals: 95% [54673.366, 54797.665], 99% [54650.561, 54820.469]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36539.008 ops/ms
# Warmup Iteration   2: 46991.297 ops/ms
# Warmup Iteration   3: 53152.166 ops/ms
# Warmup Iteration   4: 52994.116 ops/ms
# Warmup Iteration   5: 53182.194 ops/ms
# Warmup Iteration   6: 53144.791 ops/ms
# Warmup Iteration   7: 53436.305 ops/ms
# Warmup Iteration   8: 52972.541 ops/ms
# Warmup Iteration   9: 54086.661 ops/ms
# Warmup Iteration  10: 54754.985 ops/ms
# Warmup Iteration  11: 54397.474 ops/ms
# Warmup Iteration  12: 54710.710 ops/ms
# Warmup Iteration  13: 54708.918 ops/ms
# Warmup Iteration  14: 54942.187 ops/ms
# Warmup Iteration  15: 54772.946 ops/ms
# Warmup Iteration  16: 54977.776 ops/ms
# Warmup Iteration  17: 54853.238 ops/ms
# Warmup Iteration  18: 54866.032 ops/ms
# Warmup Iteration  19: 54756.048 ops/ms
# Warmup Iteration  20: 54855.432 ops/ms
Iteration   1: 54797.332 ops/ms
Iteration   2: 54827.650 ops/ms
Iteration   3: 54750.378 ops/ms
Iteration   4: 54960.935 ops/ms
Iteration   5: 54729.995 ops/ms
Iteration   6: 54831.182 ops/ms
Iteration   7: 54837.767 ops/ms
Iteration   8: 54713.097 ops/ms
Iteration   9: 54767.093 ops/ms
Iteration  10: 54606.965 ops/ms
Iteration  11: 54549.643 ops/ms
Iteration  12: 54712.535 ops/ms
Iteration  13: 54398.496 ops/ms
Iteration  14: 54758.030 ops/ms
Iteration  15: 54756.780 ops/ms
Iteration  16: 54491.819 ops/ms
Iteration  17: 54600.861 ops/ms
Iteration  18: 54651.496 ops/ms
Iteration  19: 54805.286 ops/ms
Iteration  20: 54587.557 ops/ms

Result : 54706.745 ?(95%) 63.102 ?(99%) 86.257 ops/ms
  Statistics: (min, avg, max) = (54398.496, 54706.745, 54960.935), stdev = 134.831
  Confidence intervals: 95% [54643.643, 54769.847], 99% [54620.488, 54793.002]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36619.241 ops/ms
# Warmup Iteration   2: 47014.037 ops/ms
# Warmup Iteration   3: 53172.786 ops/ms
# Warmup Iteration   4: 53435.218 ops/ms
# Warmup Iteration   5: 53182.784 ops/ms
# Warmup Iteration   6: 53136.569 ops/ms
# Warmup Iteration   7: 53036.853 ops/ms
# Warmup Iteration   8: 53098.505 ops/ms
# Warmup Iteration   9: 53294.805 ops/ms
# Warmup Iteration  10: 54546.952 ops/ms
# Warmup Iteration  11: 54626.749 ops/ms
# Warmup Iteration  12: 54503.632 ops/ms
# Warmup Iteration  13: 54543.280 ops/ms
# Warmup Iteration  14: 54528.785 ops/ms
# Warmup Iteration  15: 54682.459 ops/ms
# Warmup Iteration  16: 54405.269 ops/ms
# Warmup Iteration  17: 54497.597 ops/ms
# Warmup Iteration  18: 54525.230 ops/ms
# Warmup Iteration  19: 54578.318 ops/ms
# Warmup Iteration  20: 54591.949 ops/ms
Iteration   1: 54154.637 ops/ms
Iteration   2: 54468.929 ops/ms
Iteration   3: 54380.941 ops/ms
Iteration   4: 54390.627 ops/ms
Iteration   5: 54568.019 ops/ms
Iteration   6: 54528.096 ops/ms
Iteration   7: 54574.348 ops/ms
Iteration   8: 54712.375 ops/ms
Iteration   9: 54584.350 ops/ms
Iteration  10: 54578.508 ops/ms
Iteration  11: 54359.288 ops/ms
Iteration  12: 54526.216 ops/ms
Iteration  13: 54620.363 ops/ms
Iteration  14: 54279.640 ops/ms
Iteration  15: 54516.622 ops/ms
Iteration  16: 54523.717 ops/ms
Iteration  17: 54387.294 ops/ms
Iteration  18: 54419.907 ops/ms
Iteration  19: 54418.575 ops/ms
Iteration  20: 54552.632 ops/ms

Result : 54477.254 ?(95%) 60.570 ?(99%) 82.796 ops/ms
  Statistics: (min, avg, max) = (54154.637, 54477.254, 54712.375), stdev = 129.421
  Confidence intervals: 95% [54416.684, 54537.824], 99% [54394.459, 54560.050]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36467.319 ops/ms
# Warmup Iteration   2: 47092.689 ops/ms
# Warmup Iteration   3: 53358.797 ops/ms
# Warmup Iteration   4: 51559.001 ops/ms
# Warmup Iteration   5: 49810.971 ops/ms
# Warmup Iteration   6: 50335.384 ops/ms
# Warmup Iteration   7: 52961.144 ops/ms
# Warmup Iteration   8: 53091.442 ops/ms
# Warmup Iteration   9: 53649.596 ops/ms
# Warmup Iteration  10: 54450.761 ops/ms
# Warmup Iteration  11: 54428.528 ops/ms
# Warmup Iteration  12: 54351.191 ops/ms
# Warmup Iteration  13: 54586.901 ops/ms
# Warmup Iteration  14: 54628.688 ops/ms
# Warmup Iteration  15: 54628.219 ops/ms
# Warmup Iteration  16: 54485.206 ops/ms
# Warmup Iteration  17: 54378.339 ops/ms
# Warmup Iteration  18: 54434.171 ops/ms
# Warmup Iteration  19: 54422.524 ops/ms
# Warmup Iteration  20: 54364.263 ops/ms
Iteration   1: 54215.960 ops/ms
Iteration   2: 54556.440 ops/ms
Iteration   3: 54281.503 ops/ms
Iteration   4: 54447.201 ops/ms
Iteration   5: 54319.557 ops/ms
Iteration   6: 54489.560 ops/ms
Iteration   7: 53991.697 ops/ms
Iteration   8: 54417.037 ops/ms
Iteration   9: 54172.537 ops/ms
Iteration  10: 54153.249 ops/ms
Iteration  11: 54157.644 ops/ms
Iteration  12: 54284.311 ops/ms
Iteration  13: 54353.699 ops/ms
Iteration  14: 54568.702 ops/ms
Iteration  15: 54535.478 ops/ms
Iteration  16: 54375.055 ops/ms
Iteration  17: 54227.806 ops/ms
Iteration  18: 54289.713 ops/ms
Iteration  19: 54300.259 ops/ms
Iteration  20: 54630.806 ops/ms

Result : 54338.411 ?(95%) 77.395 ?(99%) 105.794 ops/ms
  Statistics: (min, avg, max) = (53991.697, 54338.411, 54630.806), stdev = 165.371
  Confidence intervals: 95% [54261.016, 54415.806], 99% [54232.616, 54444.205]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1031.036 ops/ms
# Warmup Iteration   2: 1579.341 ops/ms
# Warmup Iteration   3: 1412.697 ops/ms
# Warmup Iteration   4: 1564.481 ops/ms
# Warmup Iteration   5: 1570.916 ops/ms
# Warmup Iteration   6: 1568.457 ops/ms
# Warmup Iteration   7: 1574.366 ops/ms
# Warmup Iteration   8: 1570.115 ops/ms
# Warmup Iteration   9: 1593.951 ops/ms
# Warmup Iteration  10: 1611.419 ops/ms
# Warmup Iteration  11: 1607.217 ops/ms
# Warmup Iteration  12: 1604.873 ops/ms
# Warmup Iteration  13: 1599.603 ops/ms
# Warmup Iteration  14: 1609.701 ops/ms
# Warmup Iteration  15: 1603.308 ops/ms
# Warmup Iteration  16: 1596.280 ops/ms
# Warmup Iteration  17: 1610.421 ops/ms
# Warmup Iteration  18: 1614.160 ops/ms
# Warmup Iteration  19: 1614.730 ops/ms
# Warmup Iteration  20: 1616.134 ops/ms
Iteration   1: 1612.105 ops/ms
Iteration   2: 1615.932 ops/ms
Iteration   3: 1616.166 ops/ms
Iteration   4: 1609.932 ops/ms
Iteration   5: 1611.334 ops/ms
Iteration   6: 1614.255 ops/ms
Iteration   7: 1613.866 ops/ms
Iteration   8: 1614.199 ops/ms
Iteration   9: 1614.201 ops/ms
Iteration  10: 1613.792 ops/ms
Iteration  11: 1610.743 ops/ms
Iteration  12: 1614.398 ops/ms
Iteration  13: 1616.609 ops/ms
Iteration  14: 1612.677 ops/ms
Iteration  15: 1612.346 ops/ms
Iteration  16: 1611.717 ops/ms
Iteration  17: 1610.718 ops/ms
Iteration  18: 1613.143 ops/ms
Iteration  19: 1612.729 ops/ms
Iteration  20: 1606.164 ops/ms

Result : 1612.851 ?(95%) 1.133 ?(99%) 1.548 ops/ms
  Statistics: (min, avg, max) = (1606.164, 1612.851, 1616.609), stdev = 2.420
  Confidence intervals: 95% [1611.719, 1613.984], 99% [1611.303, 1614.400]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1046.933 ops/ms
# Warmup Iteration   2: 1600.591 ops/ms
# Warmup Iteration   3: 1443.278 ops/ms
# Warmup Iteration   4: 1603.389 ops/ms
# Warmup Iteration   5: 1608.324 ops/ms
# Warmup Iteration   6: 1606.836 ops/ms
# Warmup Iteration   7: 1612.493 ops/ms
# Warmup Iteration   8: 1617.256 ops/ms
# Warmup Iteration   9: 1621.824 ops/ms
# Warmup Iteration  10: 1642.741 ops/ms
# Warmup Iteration  11: 1644.904 ops/ms
# Warmup Iteration  12: 1638.993 ops/ms
# Warmup Iteration  13: 1645.419 ops/ms
# Warmup Iteration  14: 1644.168 ops/ms
# Warmup Iteration  15: 1642.440 ops/ms
# Warmup Iteration  16: 1646.505 ops/ms
# Warmup Iteration  17: 1636.353 ops/ms
# Warmup Iteration  18: 1633.476 ops/ms
# Warmup Iteration  19: 1635.158 ops/ms
# Warmup Iteration  20: 1628.778 ops/ms
Iteration   1: 1631.102 ops/ms
Iteration   2: 1630.649 ops/ms
Iteration   3: 1633.050 ops/ms
Iteration   4: 1634.137 ops/ms
Iteration   5: 1631.825 ops/ms
Iteration   6: 1635.200 ops/ms
Iteration   7: 1635.665 ops/ms
Iteration   8: 1631.928 ops/ms
Iteration   9: 1629.021 ops/ms
Iteration  10: 1633.118 ops/ms
Iteration  11: 1631.223 ops/ms
Iteration  12: 1630.010 ops/ms
Iteration  13: 1635.512 ops/ms
Iteration  14: 1629.452 ops/ms
Iteration  15: 1635.829 ops/ms
Iteration  16: 1631.531 ops/ms
Iteration  17: 1635.197 ops/ms
Iteration  18: 1631.761 ops/ms
Iteration  19: 1632.743 ops/ms
Iteration  20: 1635.926 ops/ms

Result : 1632.744 ?(95%) 1.050 ?(99%) 1.435 ops/ms
  Statistics: (min, avg, max) = (1629.021, 1632.744, 1635.926), stdev = 2.243
  Confidence intervals: 95% [1631.694, 1633.794], 99% [1631.309, 1634.179]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1032.679 ops/ms
# Warmup Iteration   2: 1561.924 ops/ms
# Warmup Iteration   3: 1413.693 ops/ms
# Warmup Iteration   4: 1566.350 ops/ms
# Warmup Iteration   5: 1561.914 ops/ms
# Warmup Iteration   6: 1564.942 ops/ms
# Warmup Iteration   7: 1566.842 ops/ms
# Warmup Iteration   8: 1577.302 ops/ms
# Warmup Iteration   9: 1577.014 ops/ms
# Warmup Iteration  10: 1610.333 ops/ms
# Warmup Iteration  11: 1609.275 ops/ms
# Warmup Iteration  12: 1602.681 ops/ms
# Warmup Iteration  13: 1605.999 ops/ms
# Warmup Iteration  14: 1604.669 ops/ms
# Warmup Iteration  15: 1608.305 ops/ms
# Warmup Iteration  16: 1609.000 ops/ms
# Warmup Iteration  17: 1610.182 ops/ms
# Warmup Iteration  18: 1611.483 ops/ms
# Warmup Iteration  19: 1612.580 ops/ms
# Warmup Iteration  20: 1612.254 ops/ms
Iteration   1: 1612.647 ops/ms
Iteration   2: 1612.993 ops/ms
Iteration   3: 1614.161 ops/ms
Iteration   4: 1609.821 ops/ms
Iteration   5: 1610.624 ops/ms
Iteration   6: 1611.325 ops/ms
Iteration   7: 1612.802 ops/ms
Iteration   8: 1611.710 ops/ms
Iteration   9: 1615.924 ops/ms
Iteration  10: 1612.145 ops/ms
Iteration  11: 1609.587 ops/ms
Iteration  12: 1612.874 ops/ms
Iteration  13: 1612.921 ops/ms
Iteration  14: 1605.721 ops/ms
Iteration  15: 1609.171 ops/ms
Iteration  16: 1613.521 ops/ms
Iteration  17: 1612.155 ops/ms
Iteration  18: 1612.889 ops/ms
Iteration  19: 1613.169 ops/ms
Iteration  20: 1616.729 ops/ms

Result : 1612.144 ?(95%) 1.129 ?(99%) 1.544 ops/ms
  Statistics: (min, avg, max) = (1605.721, 1612.144, 1616.730), stdev = 2.413
  Confidence intervals: 95% [1611.015, 1613.274], 99% [1610.601, 1613.688]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 954.196 ops/ms
# Warmup Iteration   2: 1453.359 ops/ms
# Warmup Iteration   3: 1454.644 ops/ms
# Warmup Iteration   4: 1298.593 ops/ms
# Warmup Iteration   5: 1448.103 ops/ms
# Warmup Iteration   6: 1441.384 ops/ms
# Warmup Iteration   7: 1439.255 ops/ms
# Warmup Iteration   8: 1436.864 ops/ms
# Warmup Iteration   9: 1452.186 ops/ms
# Warmup Iteration  10: 1469.482 ops/ms
# Warmup Iteration  11: 1468.084 ops/ms
# Warmup Iteration  12: 1463.583 ops/ms
# Warmup Iteration  13: 1469.323 ops/ms
# Warmup Iteration  14: 1468.539 ops/ms
# Warmup Iteration  15: 1470.905 ops/ms
# Warmup Iteration  16: 1473.458 ops/ms
# Warmup Iteration  17: 1482.467 ops/ms
# Warmup Iteration  18: 1478.233 ops/ms
# Warmup Iteration  19: 1482.576 ops/ms
# Warmup Iteration  20: 1480.671 ops/ms
Iteration   1: 1484.266 ops/ms
Iteration   2: 1482.346 ops/ms
Iteration   3: 1483.990 ops/ms
Iteration   4: 1481.554 ops/ms
Iteration   5: 1480.979 ops/ms
Iteration   6: 1483.338 ops/ms
Iteration   7: 1480.536 ops/ms
Iteration   8: 1479.167 ops/ms
Iteration   9: 1483.047 ops/ms
Iteration  10: 1480.872 ops/ms
Iteration  11: 1481.403 ops/ms
Iteration  12: 1483.110 ops/ms
Iteration  13: 1476.896 ops/ms
Iteration  14: 1482.703 ops/ms
Iteration  15: 1483.587 ops/ms
Iteration  16: 1482.766 ops/ms
Iteration  17: 1480.663 ops/ms
Iteration  18: 1484.703 ops/ms
Iteration  19: 1481.606 ops/ms
Iteration  20: 1483.626 ops/ms

Result : 1482.058 ?(95%) 0.884 ?(99%) 1.209 ops/ms
  Statistics: (min, avg, max) = (1476.896, 1482.058, 1484.703), stdev = 1.890
  Confidence intervals: 95% [1481.173, 1482.942], 99% [1480.849, 1483.267]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1031.528 ops/ms
# Warmup Iteration   2: 1583.822 ops/ms
# Warmup Iteration   3: 1416.307 ops/ms
# Warmup Iteration   4: 1576.681 ops/ms
# Warmup Iteration   5: 1577.361 ops/ms
# Warmup Iteration   6: 1579.160 ops/ms
# Warmup Iteration   7: 1570.161 ops/ms
# Warmup Iteration   8: 1581.788 ops/ms
# Warmup Iteration   9: 1588.862 ops/ms
# Warmup Iteration  10: 1615.707 ops/ms
# Warmup Iteration  11: 1612.446 ops/ms
# Warmup Iteration  12: 1611.235 ops/ms
# Warmup Iteration  13: 1613.470 ops/ms
# Warmup Iteration  14: 1609.466 ops/ms
# Warmup Iteration  15: 1610.753 ops/ms
# Warmup Iteration  16: 1599.012 ops/ms
# Warmup Iteration  17: 1604.298 ops/ms
# Warmup Iteration  18: 1617.139 ops/ms
# Warmup Iteration  19: 1611.905 ops/ms
# Warmup Iteration  20: 1611.876 ops/ms
Iteration   1: 1609.282 ops/ms
Iteration   2: 1607.113 ops/ms
Iteration   3: 1610.702 ops/ms
Iteration   4: 1608.868 ops/ms
Iteration   5: 1611.968 ops/ms
Iteration   6: 1610.389 ops/ms
Iteration   7: 1613.358 ops/ms
Iteration   8: 1608.956 ops/ms
Iteration   9: 1611.887 ops/ms
Iteration  10: 1612.852 ops/ms
Iteration  11: 1613.487 ops/ms
Iteration  12: 1615.039 ops/ms
Iteration  13: 1615.368 ops/ms
Iteration  14: 1608.671 ops/ms
Iteration  15: 1614.360 ops/ms
Iteration  16: 1610.220 ops/ms
Iteration  17: 1612.217 ops/ms
Iteration  18: 1613.340 ops/ms
Iteration  19: 1611.453 ops/ms
Iteration  20: 1613.545 ops/ms

Result : 1611.654 ?(95%) 1.084 ?(99%) 1.482 ops/ms
  Statistics: (min, avg, max) = (1607.113, 1611.654, 1615.368), stdev = 2.316
  Confidence intervals: 95% [1610.570, 1612.738], 99% [1610.172, 1613.136]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3791.574 ops/ms
# Warmup Iteration   2: 4539.976 ops/ms
# Warmup Iteration   3: 4630.994 ops/ms
# Warmup Iteration   4: 4655.514 ops/ms
# Warmup Iteration   5: 4655.750 ops/ms
# Warmup Iteration   6: 4673.269 ops/ms
# Warmup Iteration   7: 4565.554 ops/ms
# Warmup Iteration   8: 4574.015 ops/ms
# Warmup Iteration   9: 4596.538 ops/ms
# Warmup Iteration  10: 4596.929 ops/ms
# Warmup Iteration  11: 4342.309 ops/ms
# Warmup Iteration  12: 4275.190 ops/ms
# Warmup Iteration  13: 4618.576 ops/ms
# Warmup Iteration  14: 4633.792 ops/ms
# Warmup Iteration  15: 4604.862 ops/ms
# Warmup Iteration  16: 4605.618 ops/ms
# Warmup Iteration  17: 4665.895 ops/ms
# Warmup Iteration  18: 4611.730 ops/ms
# Warmup Iteration  19: 4606.579 ops/ms
# Warmup Iteration  20: 4627.578 ops/ms
Iteration   1: 4650.329 ops/ms
Iteration   2: 4625.145 ops/ms
Iteration   3: 4623.106 ops/ms
Iteration   4: 4628.566 ops/ms
Iteration   5: 4622.327 ops/ms
Iteration   6: 4626.649 ops/ms
Iteration   7: 4611.339 ops/ms
Iteration   8: 4611.976 ops/ms
Iteration   9: 4624.731 ops/ms
Iteration  10: 4607.012 ops/ms
Iteration  11: 4604.527 ops/ms
Iteration  12: 4627.108 ops/ms
Iteration  13: 4628.930 ops/ms
Iteration  14: 4625.745 ops/ms
Iteration  15: 4606.937 ops/ms
Iteration  16: 4598.264 ops/ms
Iteration  17: 4592.073 ops/ms
Iteration  18: 4613.992 ops/ms
Iteration  19: 4610.256 ops/ms
Iteration  20: 4660.884 ops/ms

Result : 4619.995 ?(95%) 7.621 ?(99%) 10.417 ops/ms
  Statistics: (min, avg, max) = (4592.073, 4619.995, 4660.884), stdev = 16.283
  Confidence intervals: 95% [4612.374, 4627.616], 99% [4609.578, 4630.412]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3417.877 ops/ms
# Warmup Iteration   2: 4092.253 ops/ms
# Warmup Iteration   3: 4148.628 ops/ms
# Warmup Iteration   4: 4162.310 ops/ms
# Warmup Iteration   5: 4183.360 ops/ms
# Warmup Iteration   6: 4163.287 ops/ms
# Warmup Iteration   7: 4224.927 ops/ms
# Warmup Iteration   8: 4225.385 ops/ms
# Warmup Iteration   9: 4283.967 ops/ms
# Warmup Iteration  10: 4235.019 ops/ms
# Warmup Iteration  11: 4258.735 ops/ms
# Warmup Iteration  12: 4253.436 ops/ms
# Warmup Iteration  13: 4224.873 ops/ms
# Warmup Iteration  14: 4236.211 ops/ms
# Warmup Iteration  15: 4236.623 ops/ms
# Warmup Iteration  16: 4232.908 ops/ms
# Warmup Iteration  17: 4271.011 ops/ms
# Warmup Iteration  18: 4286.220 ops/ms
# Warmup Iteration  19: 4273.459 ops/ms
# Warmup Iteration  20: 4290.093 ops/ms
Iteration   1: 4301.014 ops/ms
Iteration   2: 4266.150 ops/ms
Iteration   3: 4285.367 ops/ms
Iteration   4: 4319.190 ops/ms
Iteration   5: 4260.657 ops/ms
Iteration   6: 4272.072 ops/ms
Iteration   7: 4296.630 ops/ms
Iteration   8: 4287.878 ops/ms
Iteration   9: 4270.835 ops/ms
Iteration  10: 4269.899 ops/ms
Iteration  11: 4319.976 ops/ms
Iteration  12: 4288.482 ops/ms
Iteration  13: 4284.492 ops/ms
Iteration  14: 4288.392 ops/ms
Iteration  15: 4265.615 ops/ms
Iteration  16: 4296.603 ops/ms
Iteration  17: 4294.041 ops/ms
Iteration  18: 4289.431 ops/ms
Iteration  19: 4283.937 ops/ms
Iteration  20: 4266.172 ops/ms

Result : 4285.342 ?(95%) 7.835 ?(99%) 10.710 ops/ms
  Statistics: (min, avg, max) = (4260.657, 4285.342, 4319.976), stdev = 16.741
  Confidence intervals: 95% [4277.507, 4293.177], 99% [4274.632, 4296.052]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3847.155 ops/ms
# Warmup Iteration   2: 4483.379 ops/ms
# Warmup Iteration   3: 4640.056 ops/ms
# Warmup Iteration   4: 4652.521 ops/ms
# Warmup Iteration   5: 4668.458 ops/ms
# Warmup Iteration   6: 4727.553 ops/ms
# Warmup Iteration   7: 4668.313 ops/ms
# Warmup Iteration   8: 4742.732 ops/ms
# Warmup Iteration   9: 4757.837 ops/ms
# Warmup Iteration  10: 4700.040 ops/ms
# Warmup Iteration  11: 4702.140 ops/ms
# Warmup Iteration  12: 4791.995 ops/ms
# Warmup Iteration  13: 4716.479 ops/ms
# Warmup Iteration  14: 4701.862 ops/ms
# Warmup Iteration  15: 4720.665 ops/ms
# Warmup Iteration  16: 4703.990 ops/ms
# Warmup Iteration  17: 4593.534 ops/ms
# Warmup Iteration  18: 4642.834 ops/ms
# Warmup Iteration  19: 4608.032 ops/ms
# Warmup Iteration  20: 4598.135 ops/ms
Iteration   1: 4614.553 ops/ms
Iteration   2: 4611.810 ops/ms
Iteration   3: 4609.361 ops/ms
Iteration   4: 4605.929 ops/ms
Iteration   5: 4604.368 ops/ms
Iteration   6: 4605.449 ops/ms
Iteration   7: 4612.505 ops/ms
Iteration   8: 4593.290 ops/ms
Iteration   9: 4659.950 ops/ms
Iteration  10: 4654.794 ops/ms
Iteration  11: 4594.139 ops/ms
Iteration  12: 4581.429 ops/ms
Iteration  13: 4607.266 ops/ms
Iteration  14: 4607.672 ops/ms
Iteration  15: 4596.677 ops/ms
Iteration  16: 4593.509 ops/ms
Iteration  17: 4593.381 ops/ms
Iteration  18: 4594.133 ops/ms
Iteration  19: 4604.729 ops/ms
Iteration  20: 4594.911 ops/ms

Result : 4606.993 ?(95%) 8.992 ?(99%) 12.291 ops/ms
  Statistics: (min, avg, max) = (4581.429, 4606.993, 4659.950), stdev = 19.212
  Confidence intervals: 95% [4598.001, 4615.984], 99% [4594.702, 4619.284]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3826.276 ops/ms
# Warmup Iteration   2: 4551.251 ops/ms
# Warmup Iteration   3: 4650.931 ops/ms
# Warmup Iteration   4: 4722.527 ops/ms
# Warmup Iteration   5: 4735.268 ops/ms
# Warmup Iteration   6: 4717.103 ops/ms
# Warmup Iteration   7: 4695.747 ops/ms
# Warmup Iteration   8: 4783.773 ops/ms
# Warmup Iteration   9: 4714.024 ops/ms
# Warmup Iteration  10: 4738.236 ops/ms
# Warmup Iteration  11: 4729.736 ops/ms
# Warmup Iteration  12: 4718.835 ops/ms
# Warmup Iteration  13: 4767.591 ops/ms
# Warmup Iteration  14: 4721.543 ops/ms
# Warmup Iteration  15: 4736.574 ops/ms
# Warmup Iteration  16: 4755.211 ops/ms
# Warmup Iteration  17: 4658.184 ops/ms
# Warmup Iteration  18: 4687.464 ops/ms
# Warmup Iteration  19: 4619.423 ops/ms
# Warmup Iteration  20: 4601.185 ops/ms
Iteration   1: 4659.496 ops/ms
Iteration   2: 4601.163 ops/ms
Iteration   3: 4620.245 ops/ms
Iteration   4: 4597.295 ops/ms
Iteration   5: 4603.906 ops/ms
Iteration   6: 4605.320 ops/ms
Iteration   7: 4620.727 ops/ms
Iteration   8: 4601.222 ops/ms
Iteration   9: 4619.069 ops/ms
Iteration  10: 4599.912 ops/ms
Iteration  11: 4614.714 ops/ms
Iteration  12: 4664.916 ops/ms
Iteration  13: 4622.325 ops/ms
Iteration  14: 4670.611 ops/ms
Iteration  15: 4620.975 ops/ms
Iteration  16: 4620.780 ops/ms
Iteration  17: 4592.544 ops/ms
Iteration  18: 4603.672 ops/ms
Iteration  19: 4604.277 ops/ms
Iteration  20: 4619.743 ops/ms

Result : 4618.146 ?(95%) 10.451 ?(99%) 14.286 ops/ms
  Statistics: (min, avg, max) = (4592.544, 4618.146, 4670.611), stdev = 22.331
  Confidence intervals: 95% [4607.694, 4628.597], 99% [4603.859, 4632.432]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3824.757 ops/ms
# Warmup Iteration   2: 4541.561 ops/ms
# Warmup Iteration   3: 4763.607 ops/ms
# Warmup Iteration   4: 4710.479 ops/ms
# Warmup Iteration   5: 4712.496 ops/ms
# Warmup Iteration   6: 4698.153 ops/ms
# Warmup Iteration   7: 4691.967 ops/ms
# Warmup Iteration   8: 4702.083 ops/ms
# Warmup Iteration   9: 4768.993 ops/ms
# Warmup Iteration  10: 4710.938 ops/ms
# Warmup Iteration  11: 4722.952 ops/ms
# Warmup Iteration  12: 4746.046 ops/ms
# Warmup Iteration  13: 4741.446 ops/ms
# Warmup Iteration  14: 4746.424 ops/ms
# Warmup Iteration  15: 4719.650 ops/ms
# Warmup Iteration  16: 4745.088 ops/ms
# Warmup Iteration  17: 4588.583 ops/ms
# Warmup Iteration  18: 4545.650 ops/ms
# Warmup Iteration  19: 4570.275 ops/ms
# Warmup Iteration  20: 4545.180 ops/ms
Iteration   1: 4542.789 ops/ms
Iteration   2: 4560.450 ops/ms
Iteration   3: 4564.768 ops/ms
Iteration   4: 4568.082 ops/ms
Iteration   5: 4544.095 ops/ms
Iteration   6: 4557.072 ops/ms
Iteration   7: 4555.429 ops/ms
Iteration   8: 4546.411 ops/ms
Iteration   9: 4553.533 ops/ms
Iteration  10: 4561.627 ops/ms
Iteration  11: 4551.715 ops/ms
Iteration  12: 4541.249 ops/ms
Iteration  13: 4565.213 ops/ms
Iteration  14: 4545.575 ops/ms
Iteration  15: 4561.947 ops/ms
Iteration  16: 4552.376 ops/ms
Iteration  17: 4549.773 ops/ms
Iteration  18: 4565.189 ops/ms
Iteration  19: 4550.472 ops/ms
Iteration  20: 4543.522 ops/ms

Result : 4554.064 ?(95%) 4.021 ?(99%) 5.497 ops/ms
  Statistics: (min, avg, max) = (4541.249, 4554.064, 4568.082), stdev = 8.592
  Confidence intervals: 95% [4550.043, 4558.085], 99% [4548.568, 4559.561]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 8.619 ops/ms
# Warmup Iteration   2: 21.936 ops/ms
# Warmup Iteration   3: 29.027 ops/ms
# Warmup Iteration   4: 29.011 ops/ms
# Warmup Iteration   5: 29.308 ops/ms
# Warmup Iteration   6: 29.207 ops/ms
# Warmup Iteration   7: 24.533 ops/ms
# Warmup Iteration   8: 29.394 ops/ms
# Warmup Iteration   9: 29.390 ops/ms
# Warmup Iteration  10: 29.578 ops/ms
# Warmup Iteration  11: 29.610 ops/ms
# Warmup Iteration  12: 29.604 ops/ms
# Warmup Iteration  13: 29.688 ops/ms
# Warmup Iteration  14: 29.732 ops/ms
# Warmup Iteration  15: 29.684 ops/ms
# Warmup Iteration  16: 29.647 ops/ms
# Warmup Iteration  17: 29.469 ops/ms
# Warmup Iteration  18: 29.465 ops/ms
# Warmup Iteration  19: 29.487 ops/ms
# Warmup Iteration  20: 29.577 ops/ms
Iteration   1: 29.555 ops/ms
Iteration   2: 29.509 ops/ms
Iteration   3: 29.471 ops/ms
Iteration   4: 29.496 ops/ms
Iteration   5: 29.433 ops/ms
Iteration   6: 29.421 ops/ms
Iteration   7: 29.569 ops/ms
Iteration   8: 29.413 ops/ms
Iteration   9: 29.568 ops/ms
Iteration  10: 29.560 ops/ms
Iteration  11: 29.452 ops/ms
Iteration  12: 29.470 ops/ms
Iteration  13: 29.514 ops/ms
Iteration  14: 29.559 ops/ms
Iteration  15: 29.500 ops/ms
Iteration  16: 29.555 ops/ms
Iteration  17: 29.406 ops/ms
Iteration  18: 29.479 ops/ms
Iteration  19: 29.436 ops/ms
Iteration  20: 29.579 ops/ms

Result : 29.497 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (29.406, 29.497, 29.579), stdev = 0.058
  Confidence intervals: 95% [29.470, 29.525], 99% [29.460, 29.535]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.417 ops/ms
# Warmup Iteration   2: 22.099 ops/ms
# Warmup Iteration   3: 28.516 ops/ms
# Warmup Iteration   4: 28.727 ops/ms
# Warmup Iteration   5: 28.636 ops/ms
# Warmup Iteration   6: 28.683 ops/ms
# Warmup Iteration   7: 23.975 ops/ms
# Warmup Iteration   8: 28.700 ops/ms
# Warmup Iteration   9: 28.797 ops/ms
# Warmup Iteration  10: 28.923 ops/ms
# Warmup Iteration  11: 28.975 ops/ms
# Warmup Iteration  12: 28.948 ops/ms
# Warmup Iteration  13: 28.973 ops/ms
# Warmup Iteration  14: 29.027 ops/ms
# Warmup Iteration  15: 29.012 ops/ms
# Warmup Iteration  16: 28.918 ops/ms
# Warmup Iteration  17: 28.293 ops/ms
# Warmup Iteration  18: 26.490 ops/ms
# Warmup Iteration  19: 27.108 ops/ms
# Warmup Iteration  20: 28.329 ops/ms
Iteration   1: 28.865 ops/ms
Iteration   2: 28.874 ops/ms
Iteration   3: 28.960 ops/ms
Iteration   4: 28.818 ops/ms
Iteration   5: 28.921 ops/ms
Iteration   6: 28.935 ops/ms
Iteration   7: 28.923 ops/ms
Iteration   8: 29.025 ops/ms
Iteration   9: 28.789 ops/ms
Iteration  10: 29.004 ops/ms
Iteration  11: 29.051 ops/ms
Iteration  12: 29.017 ops/ms
Iteration  13: 29.016 ops/ms
Iteration  14: 28.885 ops/ms
Iteration  15: 28.928 ops/ms
Iteration  16: 29.060 ops/ms
Iteration  17: 28.921 ops/ms
Iteration  18: 28.912 ops/ms
Iteration  19: 29.046 ops/ms
Iteration  20: 28.885 ops/ms

Result : 28.942 ?(95%) 0.037 ?(99%) 0.050 ops/ms
  Statistics: (min, avg, max) = (28.789, 28.942, 29.060), stdev = 0.079
  Confidence intervals: 95% [28.905, 28.979], 99% [28.892, 28.992]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 10.399 ops/ms
# Warmup Iteration   2: 23.651 ops/ms
# Warmup Iteration   3: 29.317 ops/ms
# Warmup Iteration   4: 29.350 ops/ms
# Warmup Iteration   5: 29.237 ops/ms
# Warmup Iteration   6: 29.427 ops/ms
# Warmup Iteration   7: 24.786 ops/ms
# Warmup Iteration   8: 29.269 ops/ms
# Warmup Iteration   9: 29.491 ops/ms
# Warmup Iteration  10: 29.637 ops/ms
# Warmup Iteration  11: 29.612 ops/ms
# Warmup Iteration  12: 29.589 ops/ms
# Warmup Iteration  13: 29.617 ops/ms
# Warmup Iteration  14: 29.730 ops/ms
# Warmup Iteration  15: 29.621 ops/ms
# Warmup Iteration  16: 29.708 ops/ms
# Warmup Iteration  17: 29.752 ops/ms
# Warmup Iteration  18: 29.676 ops/ms
# Warmup Iteration  19: 29.749 ops/ms
# Warmup Iteration  20: 29.672 ops/ms
Iteration   1: 29.644 ops/ms
Iteration   2: 29.765 ops/ms
Iteration   3: 29.760 ops/ms
Iteration   4: 29.660 ops/ms
Iteration   5: 29.769 ops/ms
Iteration   6: 29.314 ops/ms
Iteration   7: 29.743 ops/ms
Iteration   8: 29.712 ops/ms
Iteration   9: 29.602 ops/ms
Iteration  10: 29.642 ops/ms
Iteration  11: 29.654 ops/ms
Iteration  12: 29.717 ops/ms
Iteration  13: 29.771 ops/ms
Iteration  14: 29.665 ops/ms
Iteration  15: 29.782 ops/ms
Iteration  16: 29.752 ops/ms
Iteration  17: 29.656 ops/ms
Iteration  18: 29.670 ops/ms
Iteration  19: 29.556 ops/ms
Iteration  20: 29.635 ops/ms

Result : 29.673 ?(95%) 0.050 ?(99%) 0.068 ops/ms
  Statistics: (min, avg, max) = (29.314, 29.673, 29.782), stdev = 0.106
  Confidence intervals: 95% [29.624, 29.723], 99% [29.606, 29.741]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 8.323 ops/ms
# Warmup Iteration   2: 20.605 ops/ms
# Warmup Iteration   3: 28.999 ops/ms
# Warmup Iteration   4: 29.023 ops/ms
# Warmup Iteration   5: 28.988 ops/ms
# Warmup Iteration   6: 28.843 ops/ms
# Warmup Iteration   7: 23.992 ops/ms
# Warmup Iteration   8: 28.949 ops/ms
# Warmup Iteration   9: 28.894 ops/ms
# Warmup Iteration  10: 29.148 ops/ms
# Warmup Iteration  11: 29.133 ops/ms
# Warmup Iteration  12: 28.896 ops/ms
# Warmup Iteration  13: 29.109 ops/ms
# Warmup Iteration  14: 29.026 ops/ms
# Warmup Iteration  15: 29.093 ops/ms
# Warmup Iteration  16: 29.042 ops/ms
# Warmup Iteration  17: 29.098 ops/ms
# Warmup Iteration  18: 29.167 ops/ms
# Warmup Iteration  19: 29.154 ops/ms
# Warmup Iteration  20: 29.066 ops/ms
Iteration   1: 29.131 ops/ms
Iteration   2: 29.148 ops/ms
Iteration   3: 29.123 ops/ms
Iteration   4: 29.057 ops/ms
Iteration   5: 29.092 ops/ms
Iteration   6: 29.261 ops/ms
Iteration   7: 29.034 ops/ms
Iteration   8: 29.031 ops/ms
Iteration   9: 29.171 ops/ms
Iteration  10: 29.165 ops/ms
Iteration  11: 29.148 ops/ms
Iteration  12: 29.150 ops/ms
Iteration  13: 29.141 ops/ms
Iteration  14: 29.032 ops/ms
Iteration  15: 29.164 ops/ms
Iteration  16: 29.170 ops/ms
Iteration  17: 29.048 ops/ms
Iteration  18: 29.082 ops/ms
Iteration  19: 29.042 ops/ms
Iteration  20: 29.149 ops/ms

Result : 29.117 ?(95%) 0.029 ?(99%) 0.040 ops/ms
  Statistics: (min, avg, max) = (29.031, 29.117, 29.261), stdev = 0.062
  Confidence intervals: 95% [29.088, 29.146], 99% [29.077, 29.157]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.867 ops/ms
# Warmup Iteration   2: 21.780 ops/ms
# Warmup Iteration   3: 27.817 ops/ms
# Warmup Iteration   4: 28.102 ops/ms
# Warmup Iteration   5: 28.287 ops/ms
# Warmup Iteration   6: 28.454 ops/ms
# Warmup Iteration   7: 23.708 ops/ms
# Warmup Iteration   8: 28.463 ops/ms
# Warmup Iteration   9: 28.547 ops/ms
# Warmup Iteration  10: 28.766 ops/ms
# Warmup Iteration  11: 28.680 ops/ms
# Warmup Iteration  12: 28.671 ops/ms
# Warmup Iteration  13: 28.740 ops/ms
# Warmup Iteration  14: 28.787 ops/ms
# Warmup Iteration  15: 28.682 ops/ms
# Warmup Iteration  16: 28.681 ops/ms
# Warmup Iteration  17: 28.566 ops/ms
# Warmup Iteration  18: 28.577 ops/ms
# Warmup Iteration  19: 28.635 ops/ms
# Warmup Iteration  20: 28.623 ops/ms
Iteration   1: 28.599 ops/ms
Iteration   2: 28.700 ops/ms
Iteration   3: 28.664 ops/ms
Iteration   4: 28.644 ops/ms
Iteration   5: 28.548 ops/ms
Iteration   6: 28.563 ops/ms
Iteration   7: 28.600 ops/ms
Iteration   8: 28.597 ops/ms
Iteration   9: 28.623 ops/ms
Iteration  10: 28.678 ops/ms
Iteration  11: 28.707 ops/ms
Iteration  12: 28.718 ops/ms
Iteration  13: 28.679 ops/ms
Iteration  14: 28.708 ops/ms
Iteration  15: 28.695 ops/ms
Iteration  16: 28.718 ops/ms
Iteration  17: 28.726 ops/ms
Iteration  18: 28.581 ops/ms
Iteration  19: 28.677 ops/ms
Iteration  20: 28.607 ops/ms

Result : 28.652 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (28.548, 28.652, 28.726), stdev = 0.057
  Confidence intervals: 95% [28.625, 28.678], 99% [28.615, 28.688]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1684.106 ops/ms
# Warmup Iteration   2: 2274.499 ops/ms
# Warmup Iteration   3: 2287.800 ops/ms
# Warmup Iteration   4: 2344.702 ops/ms
# Warmup Iteration   5: 2402.381 ops/ms
# Warmup Iteration   6: 2396.289 ops/ms
# Warmup Iteration   7: 2399.507 ops/ms
# Warmup Iteration   8: 2424.159 ops/ms
# Warmup Iteration   9: 2409.428 ops/ms
# Warmup Iteration  10: 2411.471 ops/ms
# Warmup Iteration  11: 2415.185 ops/ms
# Warmup Iteration  12: 2439.700 ops/ms
# Warmup Iteration  13: 2423.970 ops/ms
# Warmup Iteration  14: 2418.018 ops/ms
# Warmup Iteration  15: 2430.008 ops/ms
# Warmup Iteration  16: 2426.490 ops/ms
# Warmup Iteration  17: 2439.419 ops/ms
# Warmup Iteration  18: 2428.117 ops/ms
# Warmup Iteration  19: 2426.920 ops/ms
# Warmup Iteration  20: 2427.134 ops/ms
Iteration   1: 2439.603 ops/ms
Iteration   2: 2427.359 ops/ms
Iteration   3: 2419.707 ops/ms
Iteration   4: 2418.505 ops/ms
Iteration   5: 2417.877 ops/ms
Iteration   6: 2425.087 ops/ms
Iteration   7: 2426.868 ops/ms
Iteration   8: 2419.286 ops/ms
Iteration   9: 2412.576 ops/ms
Iteration  10: 2428.235 ops/ms
Iteration  11: 2426.448 ops/ms
Iteration  12: 2416.906 ops/ms
Iteration  13: 2418.596 ops/ms
Iteration  14: 2417.699 ops/ms
Iteration  15: 2427.392 ops/ms
Iteration  16: 2427.093 ops/ms
Iteration  17: 2424.107 ops/ms
Iteration  18: 2426.017 ops/ms
Iteration  19: 2426.324 ops/ms
Iteration  20: 2428.521 ops/ms

Result : 2423.710 ?(95%) 2.831 ?(99%) 3.870 ops/ms
  Statistics: (min, avg, max) = (2412.576, 2423.710, 2439.603), stdev = 6.050
  Confidence intervals: 95% [2420.879, 2426.542], 99% [2419.840, 2427.581]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1679.212 ops/ms
# Warmup Iteration   2: 2239.151 ops/ms
# Warmup Iteration   3: 2312.816 ops/ms
# Warmup Iteration   4: 2326.598 ops/ms
# Warmup Iteration   5: 2136.235 ops/ms
# Warmup Iteration   6: 2136.104 ops/ms
# Warmup Iteration   7: 2136.299 ops/ms
# Warmup Iteration   8: 2126.579 ops/ms
# Warmup Iteration   9: 2121.334 ops/ms
# Warmup Iteration  10: 2144.228 ops/ms
# Warmup Iteration  11: 2140.314 ops/ms
# Warmup Iteration  12: 2130.899 ops/ms
# Warmup Iteration  13: 2127.775 ops/ms
# Warmup Iteration  14: 2148.131 ops/ms
# Warmup Iteration  15: 2136.593 ops/ms
# Warmup Iteration  16: 2158.317 ops/ms
# Warmup Iteration  17: 2244.262 ops/ms
# Warmup Iteration  18: 2248.917 ops/ms
# Warmup Iteration  19: 2244.827 ops/ms
# Warmup Iteration  20: 2236.714 ops/ms
Iteration   1: 2235.332 ops/ms
Iteration   2: 2260.490 ops/ms
Iteration   3: 2238.838 ops/ms
Iteration   4: 2242.987 ops/ms
Iteration   5: 2242.276 ops/ms
Iteration   6: 2245.647 ops/ms
Iteration   7: 2250.720 ops/ms
Iteration   8: 2236.481 ops/ms
Iteration   9: 2243.082 ops/ms
Iteration  10: 2234.549 ops/ms
Iteration  11: 2242.245 ops/ms
Iteration  12: 2243.081 ops/ms
Iteration  13: 2245.312 ops/ms
Iteration  14: 2245.549 ops/ms
Iteration  15: 2236.536 ops/ms
Iteration  16: 2245.310 ops/ms
Iteration  17: 2232.821 ops/ms
Iteration  18: 2254.191 ops/ms
Iteration  19: 2252.886 ops/ms
Iteration  20: 2243.055 ops/ms

Result : 2243.569 ?(95%) 3.297 ?(99%) 4.506 ops/ms
  Statistics: (min, avg, max) = (2232.821, 2243.569, 2260.490), stdev = 7.044
  Confidence intervals: 95% [2240.273, 2246.866], 99% [2239.063, 2248.076]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1410.668 ops/ms
# Warmup Iteration   2: 1993.867 ops/ms
# Warmup Iteration   3: 1940.441 ops/ms
# Warmup Iteration   4: 1934.248 ops/ms
# Warmup Iteration   5: 1944.469 ops/ms
# Warmup Iteration   6: 1936.192 ops/ms
# Warmup Iteration   7: 1941.867 ops/ms
# Warmup Iteration   8: 1940.717 ops/ms
# Warmup Iteration   9: 1953.024 ops/ms
# Warmup Iteration  10: 1959.683 ops/ms
# Warmup Iteration  11: 1952.999 ops/ms
# Warmup Iteration  12: 1954.428 ops/ms
# Warmup Iteration  13: 1961.025 ops/ms
# Warmup Iteration  14: 1959.716 ops/ms
# Warmup Iteration  15: 1957.113 ops/ms
# Warmup Iteration  16: 1960.661 ops/ms
# Warmup Iteration  17: 1965.135 ops/ms
# Warmup Iteration  18: 1960.943 ops/ms
# Warmup Iteration  19: 1970.500 ops/ms
# Warmup Iteration  20: 1966.983 ops/ms
Iteration   1: 1964.128 ops/ms
Iteration   2: 1954.591 ops/ms
Iteration   3: 1925.347 ops/ms
Iteration   4: 1822.599 ops/ms
Iteration   5: 1877.482 ops/ms
Iteration   6: 1920.287 ops/ms
Iteration   7: 1964.547 ops/ms
Iteration   8: 1962.024 ops/ms
Iteration   9: 1970.313 ops/ms
Iteration  10: 1960.159 ops/ms
Iteration  11: 1966.898 ops/ms
Iteration  12: 1963.473 ops/ms
Iteration  13: 1961.560 ops/ms
Iteration  14: 1971.746 ops/ms
Iteration  15: 1959.857 ops/ms
Iteration  16: 1969.300 ops/ms
Iteration  17: 1964.296 ops/ms
Iteration  18: 1969.303 ops/ms
Iteration  19: 1959.840 ops/ms
Iteration  20: 1969.317 ops/ms

Result : 1948.853 ?(95%) 17.523 ?(99%) 23.954 ops/ms
  Statistics: (min, avg, max) = (1822.599, 1948.853, 1971.746), stdev = 37.443
  Confidence intervals: 95% [1931.330, 1966.377], 99% [1924.900, 1972.807]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1745.284 ops/ms
# Warmup Iteration   2: 2310.255 ops/ms
# Warmup Iteration   3: 2519.556 ops/ms
# Warmup Iteration   4: 2622.538 ops/ms
# Warmup Iteration   5: 2629.879 ops/ms
# Warmup Iteration   6: 2627.354 ops/ms
# Warmup Iteration   7: 2582.034 ops/ms
# Warmup Iteration   8: 2591.468 ops/ms
# Warmup Iteration   9: 2583.452 ops/ms
# Warmup Iteration  10: 2593.000 ops/ms
# Warmup Iteration  11: 2604.596 ops/ms
# Warmup Iteration  12: 2601.080 ops/ms
# Warmup Iteration  13: 2601.526 ops/ms
# Warmup Iteration  14: 2609.865 ops/ms
# Warmup Iteration  15: 2625.017 ops/ms
# Warmup Iteration  16: 2600.845 ops/ms
# Warmup Iteration  17: 2625.322 ops/ms
# Warmup Iteration  18: 2605.125 ops/ms
# Warmup Iteration  19: 2604.355 ops/ms
# Warmup Iteration  20: 2615.988 ops/ms
Iteration   1: 2629.775 ops/ms
Iteration   2: 2618.580 ops/ms
Iteration   3: 2609.160 ops/ms
Iteration   4: 2606.960 ops/ms
Iteration   5: 2618.578 ops/ms
Iteration   6: 2606.368 ops/ms
Iteration   7: 2604.719 ops/ms
Iteration   8: 2617.501 ops/ms
Iteration   9: 2608.465 ops/ms
Iteration  10: 2608.653 ops/ms
Iteration  11: 2618.571 ops/ms
Iteration  12: 2618.686 ops/ms
Iteration  13: 2615.484 ops/ms
Iteration  14: 2608.179 ops/ms
Iteration  15: 2611.735 ops/ms
Iteration  16: 2624.329 ops/ms
Iteration  17: 2616.983 ops/ms
Iteration  18: 2606.634 ops/ms
Iteration  19: 2605.914 ops/ms
Iteration  20: 2606.186 ops/ms

Result : 2613.073 ?(95%) 3.297 ?(99%) 4.507 ops/ms
  Statistics: (min, avg, max) = (2604.719, 2613.073, 2629.775), stdev = 7.044
  Confidence intervals: 95% [2609.776, 2616.370], 99% [2608.566, 2617.580]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1900.634 ops/ms
# Warmup Iteration   2: 2586.623 ops/ms
# Warmup Iteration   3: 2701.509 ops/ms
# Warmup Iteration   4: 2711.792 ops/ms
# Warmup Iteration   5: 2609.098 ops/ms
# Warmup Iteration   6: 2634.321 ops/ms
# Warmup Iteration   7: 2597.952 ops/ms
# Warmup Iteration   8: 2629.422 ops/ms
# Warmup Iteration   9: 2630.713 ops/ms
# Warmup Iteration  10: 2616.773 ops/ms
# Warmup Iteration  11: 2622.686 ops/ms
# Warmup Iteration  12: 2615.238 ops/ms
# Warmup Iteration  13: 2624.830 ops/ms
# Warmup Iteration  14: 2614.977 ops/ms
# Warmup Iteration  15: 2619.935 ops/ms
# Warmup Iteration  16: 2632.830 ops/ms
# Warmup Iteration  17: 2708.510 ops/ms
# Warmup Iteration  18: 2676.473 ops/ms
# Warmup Iteration  19: 2675.629 ops/ms
# Warmup Iteration  20: 2667.525 ops/ms
Iteration   1: 2712.829 ops/ms
Iteration   2: 2684.647 ops/ms
Iteration   3: 2721.804 ops/ms
Iteration   4: 2683.307 ops/ms
Iteration   5: 2671.014 ops/ms
Iteration   6: 2687.146 ops/ms
Iteration   7: 2674.179 ops/ms
Iteration   8: 2678.965 ops/ms
Iteration   9: 2671.527 ops/ms
Iteration  10: 2672.807 ops/ms
Iteration  11: 2686.473 ops/ms
Iteration  12: 2672.141 ops/ms
Iteration  13: 2676.145 ops/ms
Iteration  14: 2694.819 ops/ms
Iteration  15: 2677.143 ops/ms
Iteration  16: 2688.671 ops/ms
Iteration  17: 2675.392 ops/ms
Iteration  18: 2687.284 ops/ms
Iteration  19: 2687.503 ops/ms
Iteration  20: 2695.383 ops/ms

Result : 2684.959 ?(95%) 6.302 ?(99%) 8.614 ops/ms
  Statistics: (min, avg, max) = (2671.014, 2684.959, 2721.804), stdev = 13.465
  Confidence intervals: 95% [2678.657, 2691.261], 99% [2676.345, 2693.573]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 67.661 ops/ms
# Warmup Iteration   2: 154.196 ops/ms
# Warmup Iteration   3: 171.961 ops/ms
# Warmup Iteration   4: 171.436 ops/ms
# Warmup Iteration   5: 171.214 ops/ms
# Warmup Iteration   6: 171.545 ops/ms
# Warmup Iteration   7: 148.177 ops/ms
# Warmup Iteration   8: 171.134 ops/ms
# Warmup Iteration   9: 172.186 ops/ms
# Warmup Iteration  10: 172.604 ops/ms
# Warmup Iteration  11: 172.532 ops/ms
# Warmup Iteration  12: 173.163 ops/ms
# Warmup Iteration  13: 172.789 ops/ms
# Warmup Iteration  14: 173.358 ops/ms
# Warmup Iteration  15: 173.059 ops/ms
# Warmup Iteration  16: 172.478 ops/ms
# Warmup Iteration  17: 171.807 ops/ms
# Warmup Iteration  18: 170.565 ops/ms
# Warmup Iteration  19: 172.345 ops/ms
# Warmup Iteration  20: 172.035 ops/ms
Iteration   1: 171.496 ops/ms
Iteration   2: 171.653 ops/ms
Iteration   3: 171.414 ops/ms
Iteration   4: 171.977 ops/ms
Iteration   5: 171.563 ops/ms
Iteration   6: 171.495 ops/ms
Iteration   7: 172.377 ops/ms
Iteration   8: 171.853 ops/ms
Iteration   9: 171.376 ops/ms
Iteration  10: 172.116 ops/ms
Iteration  11: 172.132 ops/ms
Iteration  12: 172.247 ops/ms
Iteration  13: 171.710 ops/ms
Iteration  14: 171.477 ops/ms
Iteration  15: 172.179 ops/ms
Iteration  16: 172.041 ops/ms
Iteration  17: 171.680 ops/ms
Iteration  18: 172.269 ops/ms
Iteration  19: 172.117 ops/ms
Iteration  20: 171.618 ops/ms

Result : 171.839 ?(95%) 0.153 ?(99%) 0.209 ops/ms
  Statistics: (min, avg, max) = (171.376, 171.839, 172.377), stdev = 0.326
  Confidence intervals: 95% [171.687, 171.992], 99% [171.631, 172.048]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 66.750 ops/ms
# Warmup Iteration   2: 156.795 ops/ms
# Warmup Iteration   3: 172.633 ops/ms
# Warmup Iteration   4: 173.320 ops/ms
# Warmup Iteration   5: 173.092 ops/ms
# Warmup Iteration   6: 172.937 ops/ms
# Warmup Iteration   7: 147.801 ops/ms
# Warmup Iteration   8: 173.325 ops/ms
# Warmup Iteration   9: 173.321 ops/ms
# Warmup Iteration  10: 174.782 ops/ms
# Warmup Iteration  11: 174.127 ops/ms
# Warmup Iteration  12: 174.839 ops/ms
# Warmup Iteration  13: 174.000 ops/ms
# Warmup Iteration  14: 174.246 ops/ms
# Warmup Iteration  15: 174.694 ops/ms
# Warmup Iteration  16: 173.982 ops/ms
# Warmup Iteration  17: 174.788 ops/ms
# Warmup Iteration  18: 175.227 ops/ms
# Warmup Iteration  19: 175.515 ops/ms
# Warmup Iteration  20: 175.747 ops/ms
Iteration   1: 175.616 ops/ms
Iteration   2: 175.064 ops/ms
Iteration   3: 175.272 ops/ms
Iteration   4: 175.255 ops/ms
Iteration   5: 175.751 ops/ms
Iteration   6: 175.724 ops/ms
Iteration   7: 175.117 ops/ms
Iteration   8: 175.464 ops/ms
Iteration   9: 175.188 ops/ms
Iteration  10: 175.160 ops/ms
Iteration  11: 175.762 ops/ms
Iteration  12: 175.627 ops/ms
Iteration  13: 175.217 ops/ms
Iteration  14: 174.517 ops/ms
Iteration  15: 175.495 ops/ms
Iteration  16: 175.707 ops/ms
Iteration  17: 174.938 ops/ms
Iteration  18: 175.716 ops/ms
Iteration  19: 175.404 ops/ms
Iteration  20: 175.395 ops/ms

Result : 175.370 ?(95%) 0.152 ?(99%) 0.208 ops/ms
  Statistics: (min, avg, max) = (174.517, 175.370, 175.762), stdev = 0.325
  Confidence intervals: 95% [175.218, 175.522], 99% [175.162, 175.577]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 63.696 ops/ms
# Warmup Iteration   2: 147.530 ops/ms
# Warmup Iteration   3: 172.028 ops/ms
# Warmup Iteration   4: 171.445 ops/ms
# Warmup Iteration   5: 172.476 ops/ms
# Warmup Iteration   6: 172.151 ops/ms
# Warmup Iteration   7: 147.179 ops/ms
# Warmup Iteration   8: 171.634 ops/ms
# Warmup Iteration   9: 173.228 ops/ms
# Warmup Iteration  10: 173.990 ops/ms
# Warmup Iteration  11: 173.174 ops/ms
# Warmup Iteration  12: 173.172 ops/ms
# Warmup Iteration  13: 173.491 ops/ms
# Warmup Iteration  14: 173.409 ops/ms
# Warmup Iteration  15: 173.077 ops/ms
# Warmup Iteration  16: 173.843 ops/ms
# Warmup Iteration  17: 172.959 ops/ms
# Warmup Iteration  18: 170.134 ops/ms
# Warmup Iteration  19: 173.055 ops/ms
# Warmup Iteration  20: 172.659 ops/ms
Iteration   1: 172.857 ops/ms
Iteration   2: 172.157 ops/ms
Iteration   3: 172.782 ops/ms
Iteration   4: 172.323 ops/ms
Iteration   5: 172.796 ops/ms
Iteration   6: 172.579 ops/ms
Iteration   7: 172.646 ops/ms
Iteration   8: 172.956 ops/ms
Iteration   9: 172.574 ops/ms
Iteration  10: 172.231 ops/ms
Iteration  11: 172.553 ops/ms
Iteration  12: 172.811 ops/ms
Iteration  13: 172.697 ops/ms
Iteration  14: 172.888 ops/ms
Iteration  15: 173.140 ops/ms
Iteration  16: 173.081 ops/ms
Iteration  17: 172.724 ops/ms
Iteration  18: 172.279 ops/ms
Iteration  19: 172.976 ops/ms
Iteration  20: 172.766 ops/ms

Result : 172.691 ?(95%) 0.130 ?(99%) 0.177 ops/ms
  Statistics: (min, avg, max) = (172.157, 172.691, 173.140), stdev = 0.277
  Confidence intervals: 95% [172.561, 172.821], 99% [172.513, 172.868]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 64.827 ops/ms
# Warmup Iteration   2: 150.464 ops/ms
# Warmup Iteration   3: 176.122 ops/ms
# Warmup Iteration   4: 175.291 ops/ms
# Warmup Iteration   5: 175.559 ops/ms
# Warmup Iteration   6: 175.109 ops/ms
# Warmup Iteration   7: 150.584 ops/ms
# Warmup Iteration   8: 174.479 ops/ms
# Warmup Iteration   9: 175.716 ops/ms
# Warmup Iteration  10: 177.046 ops/ms
# Warmup Iteration  11: 176.214 ops/ms
# Warmup Iteration  12: 176.955 ops/ms
# Warmup Iteration  13: 176.436 ops/ms
# Warmup Iteration  14: 176.374 ops/ms
# Warmup Iteration  15: 176.728 ops/ms
# Warmup Iteration  16: 176.435 ops/ms
# Warmup Iteration  17: 175.759 ops/ms
# Warmup Iteration  18: 176.195 ops/ms
# Warmup Iteration  19: 175.264 ops/ms
# Warmup Iteration  20: 176.230 ops/ms
Iteration   1: 175.346 ops/ms
Iteration   2: 176.095 ops/ms
Iteration   3: 175.603 ops/ms
Iteration   4: 176.185 ops/ms
Iteration   5: 176.515 ops/ms
Iteration   6: 176.408 ops/ms
Iteration   7: 175.653 ops/ms
Iteration   8: 176.393 ops/ms
Iteration   9: 170.841 ops/ms
Iteration  10: 162.875 ops/ms
Iteration  11: 164.835 ops/ms
Iteration  12: 175.268 ops/ms
Iteration  13: 175.824 ops/ms
Iteration  14: 176.161 ops/ms
Iteration  15: 176.033 ops/ms
Iteration  16: 175.621 ops/ms
Iteration  17: 176.175 ops/ms
Iteration  18: 175.979 ops/ms
Iteration  19: 176.461 ops/ms
Iteration  20: 176.017 ops/ms

Result : 174.514 ?(95%) 1.802 ?(99%) 2.463 ops/ms
  Statistics: (min, avg, max) = (162.875, 174.514, 176.515), stdev = 3.851
  Confidence intervals: 95% [172.712, 176.316], 99% [172.051, 176.978]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 63.113 ops/ms
# Warmup Iteration   2: 154.719 ops/ms
# Warmup Iteration   3: 179.011 ops/ms
# Warmup Iteration   4: 178.476 ops/ms
# Warmup Iteration   5: 178.685 ops/ms
# Warmup Iteration   6: 179.151 ops/ms
# Warmup Iteration   7: 153.653 ops/ms
# Warmup Iteration   8: 179.070 ops/ms
# Warmup Iteration   9: 178.307 ops/ms
# Warmup Iteration  10: 176.723 ops/ms
# Warmup Iteration  11: 178.485 ops/ms
# Warmup Iteration  12: 180.025 ops/ms
# Warmup Iteration  13: 180.276 ops/ms
# Warmup Iteration  14: 179.241 ops/ms
# Warmup Iteration  15: 178.502 ops/ms
# Warmup Iteration  16: 180.090 ops/ms
# Warmup Iteration  17: 181.205 ops/ms
# Warmup Iteration  18: 180.914 ops/ms
# Warmup Iteration  19: 181.682 ops/ms
# Warmup Iteration  20: 180.870 ops/ms
Iteration   1: 181.448 ops/ms
Iteration   2: 179.932 ops/ms
Iteration   3: 181.092 ops/ms
Iteration   4: 181.499 ops/ms
Iteration   5: 181.888 ops/ms
Iteration   6: 180.432 ops/ms
Iteration   7: 181.442 ops/ms
Iteration   8: 181.844 ops/ms
Iteration   9: 181.122 ops/ms
Iteration  10: 181.305 ops/ms
Iteration  11: 180.581 ops/ms
Iteration  12: 181.196 ops/ms
Iteration  13: 181.747 ops/ms
Iteration  14: 181.358 ops/ms
Iteration  15: 181.677 ops/ms
Iteration  16: 180.441 ops/ms
Iteration  17: 181.254 ops/ms
Iteration  18: 179.514 ops/ms
Iteration  19: 181.748 ops/ms
Iteration  20: 180.775 ops/ms

Result : 181.115 ?(95%) 0.304 ?(99%) 0.415 ops/ms
  Statistics: (min, avg, max) = (179.514, 181.115, 181.888), stdev = 0.649
  Confidence intervals: 95% [180.811, 181.419], 99% [180.699, 181.530]


"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone", aggregate over forked runs:

Result : 104498.588 ?(95%) 225.606 ?(99%) 298.610 ops/ms
  Statistics: (min, avg, max) = (93903.167, 104498.588, 105336.885), stdev = 1137.128
  Confidence intervals: 95% [104272.982, 104724.194], 99% [104199.978, 104797.198]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 49.863 ?(95%) 0.195 ?(99%) 0.258 ops/ms
  Statistics: (min, avg, max) = (48.357, 49.863, 51.510), stdev = 0.983
  Confidence intervals: 95% [49.668, 50.058], 99% [49.605, 50.121]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 53.224 ?(95%) 0.105 ?(99%) 0.139 ops/ms
  Statistics: (min, avg, max) = (50.165, 53.224, 53.823), stdev = 0.528
  Confidence intervals: 95% [53.120, 53.329], 99% [53.086, 53.363]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 82.724 ?(95%) 0.375 ?(99%) 0.496 ops/ms
  Statistics: (min, avg, max) = (73.992, 82.724, 84.408), stdev = 1.890
  Confidence intervals: 95% [82.349, 83.099], 99% [82.227, 83.220]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor", aggregate over forked runs:

Result : 56072.208 ?(95%) 110.536 ?(99%) 146.304 ops/ms
  Statistics: (min, avg, max) = (51950.583, 56072.208, 56425.944), stdev = 557.136
  Confidence intervals: 95% [55961.672, 56182.744], 99% [55925.904, 56218.512]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 1306.069 ?(95%) 4.018 ?(99%) 5.318 ops/ms
  Statistics: (min, avg, max) = (1274.085, 1306.069, 1333.242), stdev = 20.250
  Confidence intervals: 95% [1302.051, 1310.087], 99% [1300.751, 1311.387]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 1742.346 ?(95%) 5.721 ?(99%) 7.572 ops/ms
  Statistics: (min, avg, max) = (1682.044, 1742.346, 1773.514), stdev = 28.834
  Confidence intervals: 95% [1736.625, 1748.067], 99% [1734.774, 1749.918]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 18.157 ?(95%) 0.191 ?(99%) 0.253 ops/ms
  Statistics: (min, avg, max) = (17.002, 18.157, 19.537), stdev = 0.962
  Confidence intervals: 95% [17.967, 18.348], 99% [17.905, 18.410]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2313.856 ?(95%) 27.337 ?(99%) 36.183 ops/ms
  Statistics: (min, avg, max) = (2130.619, 2313.856, 2485.048), stdev = 137.789
  Confidence intervals: 95% [2286.519, 2341.194], 99% [2277.673, 2350.040]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 154.028 ?(95%) 0.394 ?(99%) 0.522 ops/ms
  Statistics: (min, avg, max) = (150.165, 154.028, 156.609), stdev = 1.986
  Confidence intervals: 95% [153.634, 154.422], 99% [153.507, 154.550]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone", aggregate over forked runs:

Result : 94604.689 ?(95%) 66.853 ?(99%) 88.486 ops/ms
  Statistics: (min, avg, max) = (93639.463, 94604.689, 95246.350), stdev = 336.963
  Confidence intervals: 95% [94537.836, 94671.543], 99% [94516.203, 94693.176]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 41.788 ?(95%) 0.204 ?(99%) 0.270 ops/ms
  Statistics: (min, avg, max) = (39.167, 41.788, 43.205), stdev = 1.028
  Confidence intervals: 95% [41.584, 41.992], 99% [41.518, 42.058]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 17.984 ?(95%) 0.090 ?(99%) 0.120 ops/ms
  Statistics: (min, avg, max) = (16.664, 17.984, 18.751), stdev = 0.456
  Confidence intervals: 95% [17.894, 18.074], 99% [17.864, 18.104]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 83.937 ?(95%) 0.257 ?(99%) 0.340 ops/ms
  Statistics: (min, avg, max) = (78.128, 83.937, 85.402), stdev = 1.295
  Confidence intervals: 95% [83.680, 84.194], 99% [83.597, 84.277]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor", aggregate over forked runs:

Result : 54604.376 ?(95%) 42.613 ?(99%) 56.402 ops/ms
  Statistics: (min, avg, max) = (53991.697, 54604.376, 54997.012), stdev = 214.783
  Confidence intervals: 95% [54561.763, 54646.989], 99% [54547.974, 54660.778]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 1590.290 ?(95%) 10.916 ?(99%) 14.448 ops/ms
  Statistics: (min, avg, max) = (1476.896, 1590.290, 1635.926), stdev = 55.019
  Confidence intervals: 95% [1579.375, 1601.206], 99% [1575.842, 1604.738]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 4536.908 ?(95%) 25.754 ?(99%) 34.087 ops/ms
  Statistics: (min, avg, max) = (4260.657, 4536.908, 4670.611), stdev = 129.808
  Confidence intervals: 95% [4511.154, 4562.662], 99% [4502.820, 4570.995]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 29.176 ?(95%) 0.075 ?(99%) 0.099 ops/ms
  Statistics: (min, avg, max) = (28.548, 29.176, 29.782), stdev = 0.379
  Confidence intervals: 95% [29.101, 29.251], 99% [29.077, 29.276]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2382.833 ?(95%) 53.156 ?(99%) 70.357 ops/ms
  Statistics: (min, avg, max) = (1822.599, 2382.833, 2721.804), stdev = 267.924
  Confidence intervals: 95% [2329.677, 2435.989], 99% [2312.476, 2453.190]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 175.106 ?(95%) 0.734 ?(99%) 0.972 ops/ms
  Statistics: (min, avg, max) = (162.875, 175.106, 181.888), stdev = 3.701
  Confidence intervals: 95% [174.372, 175.840], 99% [174.134, 176.078]

Benchmark                                                                              Mode Thr    Cnt  Sec         Mean   Mean error    Units
c.v.b.c.primitives.PrimitiveBenchmark.copyByClone                                     thrpt   1    100    1   104498.588      298.610   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByCustomSerialization                       thrpt   1    100    1       49.863        0.258   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByDefaultSerialization                      thrpt   1    100    1       53.224        0.139   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByExternalizable                            thrpt   1    100    1       82.724        0.496   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyConstructor                                 thrpt   1    100    1    56072.208      146.304   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime              thrpt   1    100    1     1306.069        5.318   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields                  thrpt   1    100    1     1742.346        7.572   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke                 thrpt   1    100    1       18.157        0.253   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact            thrpt   1    100    1     2313.856       36.183   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments    thrpt   1    100    1      154.028        0.522   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByClone                                        thrpt   1    100    1    94604.689       88.486   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByCustomSerialization                          thrpt   1    100    1       41.788        0.270   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByDefaultSerialization                         thrpt   1    100    1       17.984        0.120   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByExternalizable                               thrpt   1    100    1       83.937        0.340   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyConstructor                                    thrpt   1    100    1    54604.376       56.402   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime                 thrpt   1    100    1     1590.290       14.448   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields                     thrpt   1    100    1     4536.908       34.087   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke                    thrpt   1    100    1       29.176        0.099   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact               thrpt   1    100    1     2382.833       70.357   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments       thrpt   1    100    1      175.106        0.972   ops/ms
