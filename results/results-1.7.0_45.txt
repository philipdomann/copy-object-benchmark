# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 65032.205 ops/ms
# Warmup Iteration   2: 95592.116 ops/ms
# Warmup Iteration   3: 103466.432 ops/ms
# Warmup Iteration   4: 102469.807 ops/ms
# Warmup Iteration   5: 102764.105 ops/ms
# Warmup Iteration   6: 102485.343 ops/ms
# Warmup Iteration   7: 102633.379 ops/ms
# Warmup Iteration   8: 101301.730 ops/ms
# Warmup Iteration   9: 103126.766 ops/ms
# Warmup Iteration  10: 102789.601 ops/ms
# Warmup Iteration  11: 99516.077 ops/ms
# Warmup Iteration  12: 102735.323 ops/ms
# Warmup Iteration  13: 103575.392 ops/ms
# Warmup Iteration  14: 102421.099 ops/ms
# Warmup Iteration  15: 101391.918 ops/ms
# Warmup Iteration  16: 102425.567 ops/ms
# Warmup Iteration  17: 103220.045 ops/ms
# Warmup Iteration  18: 103160.723 ops/ms
# Warmup Iteration  19: 102112.962 ops/ms
# Warmup Iteration  20: 102151.862 ops/ms
Iteration   1: 103117.950 ops/ms
Iteration   2: 102666.623 ops/ms
Iteration   3: 101940.849 ops/ms
Iteration   4: 100635.129 ops/ms
Iteration   5: 102839.173 ops/ms
Iteration   6: 102885.990 ops/ms
Iteration   7: 103493.575 ops/ms
Iteration   8: 102193.709 ops/ms
Iteration   9: 102222.599 ops/ms
Iteration  10: 102593.469 ops/ms
Iteration  11: 102600.854 ops/ms
Iteration  12: 100215.047 ops/ms
Iteration  13: 102885.155 ops/ms
Iteration  14: 102890.573 ops/ms
Iteration  15: 101756.019 ops/ms
Iteration  16: 101299.866 ops/ms
Iteration  17: 103148.840 ops/ms
Iteration  18: 102932.979 ops/ms
Iteration  19: 102816.824 ops/ms
Iteration  20: 100526.941 ops/ms

Result : 102283.108 ?(95%) 440.311 ?(99%) 601.877 ops/ms
  Statistics: (min, avg, max) = (100215.047, 102283.108, 103493.575), stdev = 940.817
  Confidence intervals: 95% [101842.797, 102723.419], 99% [101681.231, 102884.986]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 68584.271 ops/ms
# Warmup Iteration   2: 100499.166 ops/ms
# Warmup Iteration   3: 102546.004 ops/ms
# Warmup Iteration   4: 100925.145 ops/ms
# Warmup Iteration   5: 101533.014 ops/ms
# Warmup Iteration   6: 102707.859 ops/ms
# Warmup Iteration   7: 103775.743 ops/ms
# Warmup Iteration   8: 99622.899 ops/ms
# Warmup Iteration   9: 104667.900 ops/ms
# Warmup Iteration  10: 102683.112 ops/ms
# Warmup Iteration  11: 104139.872 ops/ms
# Warmup Iteration  12: 100250.728 ops/ms
# Warmup Iteration  13: 102836.722 ops/ms
# Warmup Iteration  14: 103294.508 ops/ms
# Warmup Iteration  15: 102681.324 ops/ms
# Warmup Iteration  16: 102333.323 ops/ms
# Warmup Iteration  17: 101438.572 ops/ms
# Warmup Iteration  18: 104003.837 ops/ms
# Warmup Iteration  19: 100843.601 ops/ms
# Warmup Iteration  20: 103704.533 ops/ms
Iteration   1: 103759.288 ops/ms
Iteration   2: 104006.302 ops/ms
Iteration   3: 103234.799 ops/ms
Iteration   4: 103008.410 ops/ms
Iteration   5: 103039.046 ops/ms
Iteration   6: 103537.365 ops/ms
Iteration   7: 102904.700 ops/ms
Iteration   8: 101496.365 ops/ms
Iteration   9: 103222.528 ops/ms
Iteration  10: 102070.089 ops/ms
Iteration  11: 102981.435 ops/ms
Iteration  12: 102598.643 ops/ms
Iteration  13: 99822.128 ops/ms
Iteration  14: 103824.543 ops/ms
Iteration  15: 102294.143 ops/ms
Iteration  16: 102432.836 ops/ms
Iteration  17: 101726.014 ops/ms
Iteration  18: 102589.512 ops/ms
Iteration  19: 103077.887 ops/ms
Iteration  20: 103987.954 ops/ms

Result : 102780.699 ?(95%) 464.185 ?(99%) 634.512 ops/ms
  Statistics: (min, avg, max) = (99822.128, 102780.699, 104006.302), stdev = 991.829
  Confidence intervals: 95% [102316.514, 103244.884], 99% [102146.187, 103415.211]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 65327.409 ops/ms
# Warmup Iteration   2: 99925.069 ops/ms
# Warmup Iteration   3: 101797.586 ops/ms
# Warmup Iteration   4: 98734.207 ops/ms
# Warmup Iteration   5: 100131.673 ops/ms
# Warmup Iteration   6: 100892.733 ops/ms
# Warmup Iteration   7: 100110.598 ops/ms
# Warmup Iteration   8: 99911.875 ops/ms
# Warmup Iteration   9: 99943.973 ops/ms
# Warmup Iteration  10: 97963.104 ops/ms
# Warmup Iteration  11: 100834.928 ops/ms
# Warmup Iteration  12: 98739.690 ops/ms
# Warmup Iteration  13: 96830.322 ops/ms
# Warmup Iteration  14: 101406.946 ops/ms
# Warmup Iteration  15: 101478.714 ops/ms
# Warmup Iteration  16: 102170.832 ops/ms
# Warmup Iteration  17: 101294.515 ops/ms
# Warmup Iteration  18: 101392.974 ops/ms
# Warmup Iteration  19: 103152.229 ops/ms
# Warmup Iteration  20: 102934.551 ops/ms
Iteration   1: 101699.038 ops/ms
Iteration   2: 102292.865 ops/ms
Iteration   3: 102233.471 ops/ms
Iteration   4: 102106.926 ops/ms
Iteration   5: 103409.918 ops/ms
Iteration   6: 100765.630 ops/ms
Iteration   7: 103725.867 ops/ms
Iteration   8: 102215.128 ops/ms
Iteration   9: 102524.231 ops/ms
Iteration  10: 100466.227 ops/ms
Iteration  11: 103059.719 ops/ms
Iteration  12: 102079.964 ops/ms
Iteration  13: 103368.302 ops/ms
Iteration  14: 100666.436 ops/ms
Iteration  15: 102863.352 ops/ms
Iteration  16: 103031.029 ops/ms
Iteration  17: 102525.996 ops/ms
Iteration  18: 100555.105 ops/ms
Iteration  19: 102493.672 ops/ms
Iteration  20: 103402.398 ops/ms

Result : 102274.264 ?(95%) 468.807 ?(99%) 640.830 ops/ms
  Statistics: (min, avg, max) = (100466.227, 102274.264, 103725.867), stdev = 1001.705
  Confidence intervals: 95% [101805.457, 102743.071], 99% [101633.434, 102915.094]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 67073.060 ops/ms
# Warmup Iteration   2: 97302.060 ops/ms
# Warmup Iteration   3: 102258.981 ops/ms
# Warmup Iteration   4: 102860.845 ops/ms
# Warmup Iteration   5: 102903.677 ops/ms
# Warmup Iteration   6: 99459.718 ops/ms
# Warmup Iteration   7: 102351.914 ops/ms
# Warmup Iteration   8: 103732.457 ops/ms
# Warmup Iteration   9: 103291.177 ops/ms
# Warmup Iteration  10: 100140.794 ops/ms
# Warmup Iteration  11: 102621.512 ops/ms
# Warmup Iteration  12: 103058.190 ops/ms
# Warmup Iteration  13: 103229.033 ops/ms
# Warmup Iteration  14: 100861.026 ops/ms
# Warmup Iteration  15: 102437.340 ops/ms
# Warmup Iteration  16: 102727.157 ops/ms
# Warmup Iteration  17: 103230.828 ops/ms
# Warmup Iteration  18: 101939.920 ops/ms
# Warmup Iteration  19: 103603.657 ops/ms
# Warmup Iteration  20: 104421.640 ops/ms
Iteration   1: 103185.563 ops/ms
Iteration   2: 101963.217 ops/ms
Iteration   3: 101889.692 ops/ms
Iteration   4: 103632.572 ops/ms
Iteration   5: 102294.669 ops/ms
Iteration   6: 103041.189 ops/ms
Iteration   7: 100965.631 ops/ms
Iteration   8: 103758.886 ops/ms
Iteration   9: 102960.195 ops/ms
Iteration  10: 102627.223 ops/ms
Iteration  11: 101487.662 ops/ms
Iteration  12: 103370.887 ops/ms
Iteration  13: 102586.829 ops/ms
Iteration  14: 102800.826 ops/ms
Iteration  15: 101024.966 ops/ms
Iteration  16: 102996.657 ops/ms
Iteration  17: 102126.183 ops/ms
Iteration  18: 103316.565 ops/ms
Iteration  19: 100563.595 ops/ms
Iteration  20: 103411.288 ops/ms

Result : 102500.215 ?(95%) 437.529 ?(99%) 598.075 ops/ms
  Statistics: (min, avg, max) = (100563.595, 102500.215, 103758.887), stdev = 934.873
  Confidence intervals: 95% [102062.686, 102937.744], 99% [101902.140, 103098.289]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66467.069 ops/ms
# Warmup Iteration   2: 99786.969 ops/ms
# Warmup Iteration   3: 99917.010 ops/ms
# Warmup Iteration   4: 102350.918 ops/ms
# Warmup Iteration   5: 103233.685 ops/ms
# Warmup Iteration   6: 102641.209 ops/ms
# Warmup Iteration   7: 99771.563 ops/ms
# Warmup Iteration   8: 103645.122 ops/ms
# Warmup Iteration   9: 102852.147 ops/ms
# Warmup Iteration  10: 104104.802 ops/ms
# Warmup Iteration  11: 100451.059 ops/ms
# Warmup Iteration  12: 103391.758 ops/ms
# Warmup Iteration  13: 103657.210 ops/ms
# Warmup Iteration  14: 103259.942 ops/ms
# Warmup Iteration  15: 101132.433 ops/ms
# Warmup Iteration  16: 102964.437 ops/ms
# Warmup Iteration  17: 102094.278 ops/ms
# Warmup Iteration  18: 101111.464 ops/ms
# Warmup Iteration  19: 102987.328 ops/ms
# Warmup Iteration  20: 103336.010 ops/ms
Iteration   1: 102918.550 ops/ms
Iteration   2: 104347.035 ops/ms
Iteration   3: 102686.479 ops/ms
Iteration   4: 101550.124 ops/ms
Iteration   5: 103932.346 ops/ms
Iteration   6: 102757.671 ops/ms
Iteration   7: 100459.462 ops/ms
Iteration   8: 102667.955 ops/ms
Iteration   9: 103142.129 ops/ms
Iteration  10: 103170.639 ops/ms
Iteration  11: 103283.202 ops/ms
Iteration  12: 100028.501 ops/ms
Iteration  13: 103279.329 ops/ms
Iteration  14: 103194.149 ops/ms
Iteration  15: 105019.954 ops/ms
Iteration  16: 101074.304 ops/ms
Iteration  17: 102547.040 ops/ms
Iteration  18: 103751.552 ops/ms
Iteration  19: 102671.804 ops/ms
Iteration  20: 100141.841 ops/ms

Result : 102631.203 ?(95%) 632.512 ?(99%) 864.605 ops/ms
  Statistics: (min, avg, max) = (100028.501, 102631.203, 105019.954), stdev = 1351.496
  Confidence intervals: 95% [101998.691, 103263.716], 99% [101766.599, 103495.808]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.066 ops/ms
# Warmup Iteration   2: 36.784 ops/ms
# Warmup Iteration   3: 44.920 ops/ms
# Warmup Iteration   4: 49.062 ops/ms
# Warmup Iteration   5: 50.252 ops/ms
# Warmup Iteration   6: 50.822 ops/ms
# Warmup Iteration   7: 50.866 ops/ms
# Warmup Iteration   8: 50.730 ops/ms
# Warmup Iteration   9: 50.997 ops/ms
# Warmup Iteration  10: 50.998 ops/ms
# Warmup Iteration  11: 51.083 ops/ms
# Warmup Iteration  12: 50.656 ops/ms
# Warmup Iteration  13: 50.979 ops/ms
# Warmup Iteration  14: 50.511 ops/ms
# Warmup Iteration  15: 50.818 ops/ms
# Warmup Iteration  16: 50.920 ops/ms
# Warmup Iteration  17: 50.955 ops/ms
# Warmup Iteration  18: 50.991 ops/ms
# Warmup Iteration  19: 50.770 ops/ms
# Warmup Iteration  20: 50.453 ops/ms
Iteration   1: 50.918 ops/ms
Iteration   2: 50.936 ops/ms
Iteration   3: 50.764 ops/ms
Iteration   4: 50.548 ops/ms
Iteration   5: 50.607 ops/ms
Iteration   6: 50.959 ops/ms
Iteration   7: 50.759 ops/ms
Iteration   8: 50.695 ops/ms
Iteration   9: 50.978 ops/ms
Iteration  10: 50.766 ops/ms
Iteration  11: 50.943 ops/ms
Iteration  12: 50.958 ops/ms
Iteration  13: 50.850 ops/ms
Iteration  14: 50.786 ops/ms
Iteration  15: 50.932 ops/ms
Iteration  16: 50.960 ops/ms
Iteration  17: 50.903 ops/ms
Iteration  18: 50.704 ops/ms
Iteration  19: 50.558 ops/ms
Iteration  20: 50.755 ops/ms

Result : 50.814 ?(95%) 0.066 ?(99%) 0.090 ops/ms
  Statistics: (min, avg, max) = (50.548, 50.814, 50.978), stdev = 0.140
  Confidence intervals: 95% [50.748, 50.879], 99% [50.724, 50.903]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 13.753 ops/ms
# Warmup Iteration   2: 36.393 ops/ms
# Warmup Iteration   3: 45.219 ops/ms
# Warmup Iteration   4: 49.658 ops/ms
# Warmup Iteration   5: 50.834 ops/ms
# Warmup Iteration   6: 51.219 ops/ms
# Warmup Iteration   7: 51.537 ops/ms
# Warmup Iteration   8: 51.669 ops/ms
# Warmup Iteration   9: 51.546 ops/ms
# Warmup Iteration  10: 51.773 ops/ms
# Warmup Iteration  11: 51.734 ops/ms
# Warmup Iteration  12: 51.437 ops/ms
# Warmup Iteration  13: 51.354 ops/ms
# Warmup Iteration  14: 51.563 ops/ms
# Warmup Iteration  15: 51.537 ops/ms
# Warmup Iteration  16: 51.862 ops/ms
# Warmup Iteration  17: 51.196 ops/ms
# Warmup Iteration  18: 51.774 ops/ms
# Warmup Iteration  19: 51.550 ops/ms
# Warmup Iteration  20: 51.607 ops/ms
Iteration   1: 51.568 ops/ms
Iteration   2: 51.501 ops/ms
Iteration   3: 51.760 ops/ms
Iteration   4: 51.781 ops/ms
Iteration   5: 51.299 ops/ms
Iteration   6: 51.587 ops/ms
Iteration   7: 51.785 ops/ms
Iteration   8: 51.810 ops/ms
Iteration   9: 51.437 ops/ms
Iteration  10: 51.091 ops/ms
Iteration  11: 49.537 ops/ms
Iteration  12: 49.258 ops/ms
Iteration  13: 49.881 ops/ms
Iteration  14: 51.590 ops/ms
Iteration  15: 51.235 ops/ms
Iteration  16: 51.077 ops/ms
Iteration  17: 51.681 ops/ms
Iteration  18: 51.363 ops/ms
Iteration  19: 49.925 ops/ms
Iteration  20: 50.918 ops/ms

Result : 51.104 ?(95%) 0.373 ?(99%) 0.509 ops/ms
  Statistics: (min, avg, max) = (49.258, 51.104, 51.810), stdev = 0.796
  Confidence intervals: 95% [50.732, 51.477], 99% [50.595, 51.614]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 13.950 ops/ms
# Warmup Iteration   2: 36.921 ops/ms
# Warmup Iteration   3: 45.069 ops/ms
# Warmup Iteration   4: 49.410 ops/ms
# Warmup Iteration   5: 50.387 ops/ms
# Warmup Iteration   6: 50.791 ops/ms
# Warmup Iteration   7: 50.808 ops/ms
# Warmup Iteration   8: 50.960 ops/ms
# Warmup Iteration   9: 50.946 ops/ms
# Warmup Iteration  10: 50.774 ops/ms
# Warmup Iteration  11: 51.047 ops/ms
# Warmup Iteration  12: 50.981 ops/ms
# Warmup Iteration  13: 51.135 ops/ms
# Warmup Iteration  14: 50.816 ops/ms
# Warmup Iteration  15: 50.934 ops/ms
# Warmup Iteration  16: 51.215 ops/ms
# Warmup Iteration  17: 50.516 ops/ms
# Warmup Iteration  18: 51.019 ops/ms
# Warmup Iteration  19: 51.012 ops/ms
# Warmup Iteration  20: 51.300 ops/ms
Iteration   1: 51.092 ops/ms
Iteration   2: 51.006 ops/ms
Iteration   3: 51.335 ops/ms
Iteration   4: 51.106 ops/ms
Iteration   5: 51.074 ops/ms
Iteration   6: 51.157 ops/ms
Iteration   7: 51.156 ops/ms
Iteration   8: 51.321 ops/ms
Iteration   9: 51.223 ops/ms
Iteration  10: 51.201 ops/ms
Iteration  11: 51.361 ops/ms
Iteration  12: 51.367 ops/ms
Iteration  13: 50.974 ops/ms
Iteration  14: 51.281 ops/ms
Iteration  15: 51.382 ops/ms
Iteration  16: 51.350 ops/ms
Iteration  17: 51.187 ops/ms
Iteration  18: 51.410 ops/ms
Iteration  19: 50.995 ops/ms
Iteration  20: 51.298 ops/ms

Result : 51.214 ?(95%) 0.065 ?(99%) 0.089 ops/ms
  Statistics: (min, avg, max) = (50.974, 51.214, 51.410), stdev = 0.140
  Confidence intervals: 95% [51.148, 51.279], 99% [51.124, 51.303]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 13.601 ops/ms
# Warmup Iteration   2: 35.001 ops/ms
# Warmup Iteration   3: 42.692 ops/ms
# Warmup Iteration   4: 46.804 ops/ms
# Warmup Iteration   5: 48.217 ops/ms
# Warmup Iteration   6: 48.826 ops/ms
# Warmup Iteration   7: 48.904 ops/ms
# Warmup Iteration   8: 49.060 ops/ms
# Warmup Iteration   9: 48.936 ops/ms
# Warmup Iteration  10: 49.111 ops/ms
# Warmup Iteration  11: 49.019 ops/ms
# Warmup Iteration  12: 49.156 ops/ms
# Warmup Iteration  13: 49.077 ops/ms
# Warmup Iteration  14: 49.169 ops/ms
# Warmup Iteration  15: 48.762 ops/ms
# Warmup Iteration  16: 49.200 ops/ms
# Warmup Iteration  17: 49.178 ops/ms
# Warmup Iteration  18: 48.607 ops/ms
# Warmup Iteration  19: 48.732 ops/ms
# Warmup Iteration  20: 49.111 ops/ms
Iteration   1: 48.829 ops/ms
Iteration   2: 49.167 ops/ms
Iteration   3: 48.628 ops/ms
Iteration   4: 49.040 ops/ms
Iteration   5: 49.070 ops/ms
Iteration   6: 49.125 ops/ms
Iteration   7: 48.828 ops/ms
Iteration   8: 49.162 ops/ms
Iteration   9: 49.047 ops/ms
Iteration  10: 49.141 ops/ms
Iteration  11: 48.795 ops/ms
Iteration  12: 48.339 ops/ms
Iteration  13: 48.960 ops/ms
Iteration  14: 49.134 ops/ms
Iteration  15: 49.028 ops/ms
Iteration  16: 48.860 ops/ms
Iteration  17: 48.935 ops/ms
Iteration  18: 49.166 ops/ms
Iteration  19: 49.177 ops/ms
Iteration  20: 48.809 ops/ms

Result : 48.962 ?(95%) 0.101 ?(99%) 0.138 ops/ms
  Statistics: (min, avg, max) = (48.339, 48.962, 49.177), stdev = 0.216
  Confidence intervals: 95% [48.861, 49.063], 99% [48.824, 49.100]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.168 ops/ms
# Warmup Iteration   2: 36.983 ops/ms
# Warmup Iteration   3: 45.217 ops/ms
# Warmup Iteration   4: 49.689 ops/ms
# Warmup Iteration   5: 51.164 ops/ms
# Warmup Iteration   6: 51.266 ops/ms
# Warmup Iteration   7: 51.632 ops/ms
# Warmup Iteration   8: 51.185 ops/ms
# Warmup Iteration   9: 51.461 ops/ms
# Warmup Iteration  10: 51.511 ops/ms
# Warmup Iteration  11: 51.594 ops/ms
# Warmup Iteration  12: 51.456 ops/ms
# Warmup Iteration  13: 51.729 ops/ms
# Warmup Iteration  14: 51.727 ops/ms
# Warmup Iteration  15: 51.739 ops/ms
# Warmup Iteration  16: 51.266 ops/ms
# Warmup Iteration  17: 51.286 ops/ms
# Warmup Iteration  18: 51.725 ops/ms
# Warmup Iteration  19: 51.525 ops/ms
# Warmup Iteration  20: 51.736 ops/ms
Iteration   1: 51.757 ops/ms
Iteration   2: 51.719 ops/ms
Iteration   3: 51.799 ops/ms
Iteration   4: 51.533 ops/ms
Iteration   5: 51.455 ops/ms
Iteration   6: 51.772 ops/ms
Iteration   7: 51.472 ops/ms
Iteration   8: 51.363 ops/ms
Iteration   9: 51.486 ops/ms
Iteration  10: 51.535 ops/ms
Iteration  11: 51.744 ops/ms
Iteration  12: 51.580 ops/ms
Iteration  13: 51.559 ops/ms
Iteration  14: 51.754 ops/ms
Iteration  15: 51.786 ops/ms
Iteration  16: 51.505 ops/ms
Iteration  17: 51.583 ops/ms
Iteration  18: 51.756 ops/ms
Iteration  19: 51.710 ops/ms
Iteration  20: 51.755 ops/ms

Result : 51.631 ?(95%) 0.064 ?(99%) 0.087 ops/ms
  Statistics: (min, avg, max) = (51.363, 51.631, 51.799), stdev = 0.137
  Confidence intervals: 95% [51.567, 51.695], 99% [51.544, 51.718]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.782 ops/ms
# Warmup Iteration   2: 39.501 ops/ms
# Warmup Iteration   3: 47.269 ops/ms
# Warmup Iteration   4: 51.130 ops/ms
# Warmup Iteration   5: 52.480 ops/ms
# Warmup Iteration   6: 53.085 ops/ms
# Warmup Iteration   7: 52.809 ops/ms
# Warmup Iteration   8: 52.834 ops/ms
# Warmup Iteration   9: 52.962 ops/ms
# Warmup Iteration  10: 53.173 ops/ms
# Warmup Iteration  11: 53.297 ops/ms
# Warmup Iteration  12: 53.168 ops/ms
# Warmup Iteration  13: 53.130 ops/ms
# Warmup Iteration  14: 52.952 ops/ms
# Warmup Iteration  15: 53.087 ops/ms
# Warmup Iteration  16: 53.039 ops/ms
# Warmup Iteration  17: 52.856 ops/ms
# Warmup Iteration  18: 53.046 ops/ms
# Warmup Iteration  19: 53.227 ops/ms
# Warmup Iteration  20: 53.272 ops/ms
Iteration   1: 53.094 ops/ms
Iteration   2: 53.092 ops/ms
Iteration   3: 53.075 ops/ms
Iteration   4: 53.232 ops/ms
Iteration   5: 52.769 ops/ms
Iteration   6: 53.028 ops/ms
Iteration   7: 52.994 ops/ms
Iteration   8: 53.265 ops/ms
Iteration   9: 53.123 ops/ms
Iteration  10: 53.191 ops/ms
Iteration  11: 52.997 ops/ms
Iteration  12: 53.223 ops/ms
Iteration  13: 52.811 ops/ms
Iteration  14: 53.295 ops/ms
Iteration  15: 53.317 ops/ms
Iteration  16: 52.901 ops/ms
Iteration  17: 52.879 ops/ms
Iteration  18: 53.278 ops/ms
Iteration  19: 53.305 ops/ms
Iteration  20: 53.255 ops/ms

Result : 53.106 ?(95%) 0.080 ?(99%) 0.110 ops/ms
  Statistics: (min, avg, max) = (52.769, 53.106, 53.317), stdev = 0.172
  Confidence intervals: 95% [53.026, 53.187], 99% [52.996, 53.216]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.073 ops/ms
# Warmup Iteration   2: 39.429 ops/ms
# Warmup Iteration   3: 47.442 ops/ms
# Warmup Iteration   4: 51.599 ops/ms
# Warmup Iteration   5: 52.947 ops/ms
# Warmup Iteration   6: 53.493 ops/ms
# Warmup Iteration   7: 53.597 ops/ms
# Warmup Iteration   8: 53.546 ops/ms
# Warmup Iteration   9: 53.633 ops/ms
# Warmup Iteration  10: 53.771 ops/ms
# Warmup Iteration  11: 53.752 ops/ms
# Warmup Iteration  12: 53.522 ops/ms
# Warmup Iteration  13: 53.582 ops/ms
# Warmup Iteration  14: 53.400 ops/ms
# Warmup Iteration  15: 53.765 ops/ms
# Warmup Iteration  16: 53.610 ops/ms
# Warmup Iteration  17: 53.477 ops/ms
# Warmup Iteration  18: 53.650 ops/ms
# Warmup Iteration  19: 53.337 ops/ms
# Warmup Iteration  20: 53.610 ops/ms
Iteration   1: 53.669 ops/ms
Iteration   2: 53.411 ops/ms
Iteration   3: 53.727 ops/ms
Iteration   4: 53.677 ops/ms
Iteration   5: 53.696 ops/ms
Iteration   6: 53.205 ops/ms
Iteration   7: 53.360 ops/ms
Iteration   8: 53.138 ops/ms
Iteration   9: 53.632 ops/ms
Iteration  10: 53.470 ops/ms
Iteration  11: 53.629 ops/ms
Iteration  12: 53.321 ops/ms
Iteration  13: 53.669 ops/ms
Iteration  14: 53.447 ops/ms
Iteration  15: 53.330 ops/ms
Iteration  16: 53.670 ops/ms
Iteration  17: 53.331 ops/ms
Iteration  18: 53.516 ops/ms
Iteration  19: 53.715 ops/ms
Iteration  20: 53.353 ops/ms

Result : 53.498 ?(95%) 0.086 ?(99%) 0.118 ops/ms
  Statistics: (min, avg, max) = (53.138, 53.498, 53.727), stdev = 0.185
  Confidence intervals: 95% [53.412, 53.585], 99% [53.380, 53.616]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.344 ops/ms
# Warmup Iteration   2: 38.791 ops/ms
# Warmup Iteration   3: 47.066 ops/ms
# Warmup Iteration   4: 51.184 ops/ms
# Warmup Iteration   5: 52.656 ops/ms
# Warmup Iteration   6: 53.011 ops/ms
# Warmup Iteration   7: 53.372 ops/ms
# Warmup Iteration   8: 53.567 ops/ms
# Warmup Iteration   9: 53.220 ops/ms
# Warmup Iteration  10: 53.456 ops/ms
# Warmup Iteration  11: 53.128 ops/ms
# Warmup Iteration  12: 53.328 ops/ms
# Warmup Iteration  13: 53.587 ops/ms
# Warmup Iteration  14: 53.130 ops/ms
# Warmup Iteration  15: 53.333 ops/ms
# Warmup Iteration  16: 53.343 ops/ms
# Warmup Iteration  17: 52.822 ops/ms
# Warmup Iteration  18: 53.672 ops/ms
# Warmup Iteration  19: 53.640 ops/ms
# Warmup Iteration  20: 53.607 ops/ms
Iteration   1: 53.660 ops/ms
Iteration   2: 53.355 ops/ms
Iteration   3: 53.485 ops/ms
Iteration   4: 53.516 ops/ms
Iteration   5: 53.464 ops/ms
Iteration   6: 53.541 ops/ms
Iteration   7: 53.272 ops/ms
Iteration   8: 53.678 ops/ms
Iteration   9: 53.370 ops/ms
Iteration  10: 53.669 ops/ms
Iteration  11: 53.260 ops/ms
Iteration  12: 53.594 ops/ms
Iteration  13: 53.419 ops/ms
Iteration  14: 53.661 ops/ms
Iteration  15: 53.220 ops/ms
Iteration  16: 53.371 ops/ms
Iteration  17: 52.265 ops/ms
Iteration  18: 53.648 ops/ms
Iteration  19: 53.251 ops/ms
Iteration  20: 53.301 ops/ms

Result : 53.400 ?(95%) 0.145 ?(99%) 0.198 ops/ms
  Statistics: (min, avg, max) = (52.265, 53.400, 53.678), stdev = 0.310
  Confidence intervals: 95% [53.255, 53.545], 99% [53.202, 53.598]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.273 ops/ms
# Warmup Iteration   2: 38.116 ops/ms
# Warmup Iteration   3: 45.732 ops/ms
# Warmup Iteration   4: 49.799 ops/ms
# Warmup Iteration   5: 51.051 ops/ms
# Warmup Iteration   6: 51.592 ops/ms
# Warmup Iteration   7: 51.674 ops/ms
# Warmup Iteration   8: 51.807 ops/ms
# Warmup Iteration   9: 51.853 ops/ms
# Warmup Iteration  10: 51.838 ops/ms
# Warmup Iteration  11: 51.427 ops/ms
# Warmup Iteration  12: 51.602 ops/ms
# Warmup Iteration  13: 51.523 ops/ms
# Warmup Iteration  14: 51.814 ops/ms
# Warmup Iteration  15: 51.525 ops/ms
# Warmup Iteration  16: 51.797 ops/ms
# Warmup Iteration  17: 51.590 ops/ms
# Warmup Iteration  18: 51.902 ops/ms
# Warmup Iteration  19: 51.897 ops/ms
# Warmup Iteration  20: 51.793 ops/ms
Iteration   1: 51.898 ops/ms
Iteration   2: 51.895 ops/ms
Iteration   3: 51.612 ops/ms
Iteration   4: 51.760 ops/ms
Iteration   5: 51.734 ops/ms
Iteration   6: 51.706 ops/ms
Iteration   7: 51.909 ops/ms
Iteration   8: 51.747 ops/ms
Iteration   9: 51.874 ops/ms
Iteration  10: 51.697 ops/ms
Iteration  11: 51.859 ops/ms
Iteration  12: 51.480 ops/ms
Iteration  13: 51.597 ops/ms
Iteration  14: 51.703 ops/ms
Iteration  15: 51.878 ops/ms
Iteration  16: 51.423 ops/ms
Iteration  17: 51.639 ops/ms
Iteration  18: 51.884 ops/ms
Iteration  19: 51.920 ops/ms
Iteration  20: 51.364 ops/ms

Result : 51.729 ?(95%) 0.079 ?(99%) 0.108 ops/ms
  Statistics: (min, avg, max) = (51.364, 51.729, 51.920), stdev = 0.169
  Confidence intervals: 95% [51.650, 51.808], 99% [51.621, 51.837]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.662 ops/ms
# Warmup Iteration   2: 38.974 ops/ms
# Warmup Iteration   3: 46.884 ops/ms
# Warmup Iteration   4: 50.815 ops/ms
# Warmup Iteration   5: 52.321 ops/ms
# Warmup Iteration   6: 52.725 ops/ms
# Warmup Iteration   7: 52.877 ops/ms
# Warmup Iteration   8: 52.937 ops/ms
# Warmup Iteration   9: 52.865 ops/ms
# Warmup Iteration  10: 52.753 ops/ms
# Warmup Iteration  11: 52.666 ops/ms
# Warmup Iteration  12: 52.597 ops/ms
# Warmup Iteration  13: 52.937 ops/ms
# Warmup Iteration  14: 52.856 ops/ms
# Warmup Iteration  15: 52.996 ops/ms
# Warmup Iteration  16: 52.904 ops/ms
# Warmup Iteration  17: 52.848 ops/ms
# Warmup Iteration  18: 52.972 ops/ms
# Warmup Iteration  19: 52.868 ops/ms
# Warmup Iteration  20: 53.053 ops/ms
Iteration   1: 53.184 ops/ms
Iteration   2: 53.056 ops/ms
Iteration   3: 52.328 ops/ms
Iteration   4: 50.280 ops/ms
Iteration   5: 50.289 ops/ms
Iteration   6: 51.434 ops/ms
Iteration   7: 53.059 ops/ms
Iteration   8: 52.267 ops/ms
Iteration   9: 52.704 ops/ms
Iteration  10: 52.980 ops/ms
Iteration  11: 52.642 ops/ms
Iteration  12: 51.198 ops/ms
Iteration  13: 52.480 ops/ms
Iteration  14: 52.899 ops/ms
Iteration  15: 52.798 ops/ms
Iteration  16: 52.522 ops/ms
Iteration  17: 52.900 ops/ms
Iteration  18: 53.071 ops/ms
Iteration  19: 53.064 ops/ms
Iteration  20: 52.868 ops/ms

Result : 52.401 ?(95%) 0.417 ?(99%) 0.571 ops/ms
  Statistics: (min, avg, max) = (50.280, 52.401, 53.184), stdev = 0.892
  Confidence intervals: 95% [51.984, 52.819], 99% [51.831, 52.972]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 23.887 ops/ms
# Warmup Iteration   2: 64.524 ops/ms
# Warmup Iteration   3: 77.878 ops/ms
# Warmup Iteration   4: 83.555 ops/ms
# Warmup Iteration   5: 85.091 ops/ms
# Warmup Iteration   6: 85.552 ops/ms
# Warmup Iteration   7: 85.655 ops/ms
# Warmup Iteration   8: 85.615 ops/ms
# Warmup Iteration   9: 85.634 ops/ms
# Warmup Iteration  10: 85.529 ops/ms
# Warmup Iteration  11: 86.052 ops/ms
# Warmup Iteration  12: 86.078 ops/ms
# Warmup Iteration  13: 85.727 ops/ms
# Warmup Iteration  14: 85.260 ops/ms
# Warmup Iteration  15: 86.012 ops/ms
# Warmup Iteration  16: 85.720 ops/ms
# Warmup Iteration  17: 85.945 ops/ms
# Warmup Iteration  18: 85.446 ops/ms
# Warmup Iteration  19: 85.621 ops/ms
# Warmup Iteration  20: 86.041 ops/ms
Iteration   1: 85.498 ops/ms
Iteration   2: 85.994 ops/ms
Iteration   3: 85.999 ops/ms
Iteration   4: 85.672 ops/ms
Iteration   5: 85.675 ops/ms
Iteration   6: 85.630 ops/ms
Iteration   7: 86.009 ops/ms
Iteration   8: 85.590 ops/ms
Iteration   9: 85.502 ops/ms
Iteration  10: 85.632 ops/ms
Iteration  11: 86.031 ops/ms
Iteration  12: 86.065 ops/ms
Iteration  13: 86.027 ops/ms
Iteration  14: 86.198 ops/ms
Iteration  15: 86.116 ops/ms
Iteration  16: 85.490 ops/ms
Iteration  17: 85.306 ops/ms
Iteration  18: 84.842 ops/ms
Iteration  19: 86.026 ops/ms
Iteration  20: 85.198 ops/ms

Result : 85.725 ?(95%) 0.167 ?(99%) 0.229 ops/ms
  Statistics: (min, avg, max) = (84.842, 85.725, 86.198), stdev = 0.357
  Confidence intervals: 95% [85.558, 85.892], 99% [85.496, 85.954]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.124 ops/ms
# Warmup Iteration   2: 65.248 ops/ms
# Warmup Iteration   3: 78.578 ops/ms
# Warmup Iteration   4: 83.811 ops/ms
# Warmup Iteration   5: 85.608 ops/ms
# Warmup Iteration   6: 85.539 ops/ms
# Warmup Iteration   7: 86.182 ops/ms
# Warmup Iteration   8: 86.172 ops/ms
# Warmup Iteration   9: 86.237 ops/ms
# Warmup Iteration  10: 85.695 ops/ms
# Warmup Iteration  11: 86.468 ops/ms
# Warmup Iteration  12: 86.010 ops/ms
# Warmup Iteration  13: 86.216 ops/ms
# Warmup Iteration  14: 85.971 ops/ms
# Warmup Iteration  15: 86.161 ops/ms
# Warmup Iteration  16: 86.366 ops/ms
# Warmup Iteration  17: 85.988 ops/ms
# Warmup Iteration  18: 86.132 ops/ms
# Warmup Iteration  19: 85.294 ops/ms
# Warmup Iteration  20: 86.372 ops/ms
Iteration   1: 85.858 ops/ms
Iteration   2: 86.220 ops/ms
Iteration   3: 86.226 ops/ms
Iteration   4: 86.466 ops/ms
Iteration   5: 86.515 ops/ms
Iteration   6: 86.276 ops/ms
Iteration   7: 85.896 ops/ms
Iteration   8: 86.174 ops/ms
Iteration   9: 86.474 ops/ms
Iteration  10: 86.421 ops/ms
Iteration  11: 86.420 ops/ms
Iteration  12: 86.087 ops/ms
Iteration  13: 86.012 ops/ms
Iteration  14: 86.071 ops/ms
Iteration  15: 86.156 ops/ms
Iteration  16: 85.870 ops/ms
Iteration  17: 86.435 ops/ms
Iteration  18: 86.031 ops/ms
Iteration  19: 85.365 ops/ms
Iteration  20: 86.073 ops/ms

Result : 86.152 ?(95%) 0.131 ?(99%) 0.179 ops/ms
  Statistics: (min, avg, max) = (85.365, 86.152, 86.515), stdev = 0.280
  Confidence intervals: 95% [86.021, 86.283], 99% [85.973, 86.331]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.103 ops/ms
# Warmup Iteration   2: 64.371 ops/ms
# Warmup Iteration   3: 77.134 ops/ms
# Warmup Iteration   4: 83.084 ops/ms
# Warmup Iteration   5: 84.684 ops/ms
# Warmup Iteration   6: 85.518 ops/ms
# Warmup Iteration   7: 85.138 ops/ms
# Warmup Iteration   8: 85.097 ops/ms
# Warmup Iteration   9: 85.234 ops/ms
# Warmup Iteration  10: 85.630 ops/ms
# Warmup Iteration  11: 85.473 ops/ms
# Warmup Iteration  12: 85.788 ops/ms
# Warmup Iteration  13: 85.174 ops/ms
# Warmup Iteration  14: 85.495 ops/ms
# Warmup Iteration  15: 85.161 ops/ms
# Warmup Iteration  16: 85.737 ops/ms
# Warmup Iteration  17: 85.449 ops/ms
# Warmup Iteration  18: 85.093 ops/ms
# Warmup Iteration  19: 85.852 ops/ms
# Warmup Iteration  20: 85.801 ops/ms
Iteration   1: 85.651 ops/ms
Iteration   2: 85.869 ops/ms
Iteration   3: 85.890 ops/ms
Iteration   4: 85.145 ops/ms
Iteration   5: 85.412 ops/ms
Iteration   6: 84.775 ops/ms
Iteration   7: 85.500 ops/ms
Iteration   8: 85.855 ops/ms
Iteration   9: 85.772 ops/ms
Iteration  10: 85.707 ops/ms
Iteration  11: 85.925 ops/ms
Iteration  12: 85.100 ops/ms
Iteration  13: 85.320 ops/ms
Iteration  14: 85.703 ops/ms
Iteration  15: 85.917 ops/ms
Iteration  16: 85.379 ops/ms
Iteration  17: 85.896 ops/ms
Iteration  18: 85.464 ops/ms
Iteration  19: 85.480 ops/ms
Iteration  20: 85.578 ops/ms

Result : 85.567 ?(95%) 0.148 ?(99%) 0.202 ops/ms
  Statistics: (min, avg, max) = (84.775, 85.567, 85.925), stdev = 0.315
  Confidence intervals: 95% [85.419, 85.715], 99% [85.365, 85.769]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.858 ops/ms
# Warmup Iteration   2: 66.820 ops/ms
# Warmup Iteration   3: 80.640 ops/ms
# Warmup Iteration   4: 86.507 ops/ms
# Warmup Iteration   5: 88.521 ops/ms
# Warmup Iteration   6: 89.327 ops/ms
# Warmup Iteration   7: 89.359 ops/ms
# Warmup Iteration   8: 89.177 ops/ms
# Warmup Iteration   9: 89.426 ops/ms
# Warmup Iteration  10: 89.329 ops/ms
# Warmup Iteration  11: 89.768 ops/ms
# Warmup Iteration  12: 88.705 ops/ms
# Warmup Iteration  13: 89.553 ops/ms
# Warmup Iteration  14: 89.737 ops/ms
# Warmup Iteration  15: 89.414 ops/ms
# Warmup Iteration  16: 89.544 ops/ms
# Warmup Iteration  17: 89.808 ops/ms
# Warmup Iteration  18: 89.560 ops/ms
# Warmup Iteration  19: 89.462 ops/ms
# Warmup Iteration  20: 89.384 ops/ms
Iteration   1: 89.616 ops/ms
Iteration   2: 89.419 ops/ms
Iteration   3: 89.557 ops/ms
Iteration   4: 89.366 ops/ms
Iteration   5: 89.766 ops/ms
Iteration   6: 89.508 ops/ms
Iteration   7: 89.831 ops/ms
Iteration   8: 89.712 ops/ms
Iteration   9: 89.548 ops/ms
Iteration  10: 89.896 ops/ms
Iteration  11: 89.608 ops/ms
Iteration  12: 89.948 ops/ms
Iteration  13: 89.454 ops/ms
Iteration  14: 89.644 ops/ms
Iteration  15: 89.892 ops/ms
Iteration  16: 89.832 ops/ms
Iteration  17: 89.642 ops/ms
Iteration  18: 89.704 ops/ms
Iteration  19: 89.655 ops/ms
Iteration  20: 89.585 ops/ms

Result : 89.659 ?(95%) 0.077 ?(99%) 0.105 ops/ms
  Statistics: (min, avg, max) = (89.366, 89.659, 89.948), stdev = 0.164
  Confidence intervals: 95% [89.582, 89.736], 99% [89.554, 89.764]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.233 ops/ms
# Warmup Iteration   2: 66.248 ops/ms
# Warmup Iteration   3: 80.176 ops/ms
# Warmup Iteration   4: 85.886 ops/ms
# Warmup Iteration   5: 87.371 ops/ms
# Warmup Iteration   6: 88.020 ops/ms
# Warmup Iteration   7: 88.218 ops/ms
# Warmup Iteration   8: 88.594 ops/ms
# Warmup Iteration   9: 87.826 ops/ms
# Warmup Iteration  10: 88.650 ops/ms
# Warmup Iteration  11: 88.164 ops/ms
# Warmup Iteration  12: 88.611 ops/ms
# Warmup Iteration  13: 88.198 ops/ms
# Warmup Iteration  14: 88.300 ops/ms
# Warmup Iteration  15: 88.610 ops/ms
# Warmup Iteration  16: 88.645 ops/ms
# Warmup Iteration  17: 88.195 ops/ms
# Warmup Iteration  18: 88.454 ops/ms
# Warmup Iteration  19: 88.142 ops/ms
# Warmup Iteration  20: 87.435 ops/ms
Iteration   1: 88.223 ops/ms
Iteration   2: 88.535 ops/ms
Iteration   3: 88.651 ops/ms
Iteration   4: 88.106 ops/ms
Iteration   5: 87.558 ops/ms
Iteration   6: 88.406 ops/ms
Iteration   7: 88.604 ops/ms
Iteration   8: 88.621 ops/ms
Iteration   9: 88.054 ops/ms
Iteration  10: 87.965 ops/ms
Iteration  11: 88.031 ops/ms
Iteration  12: 88.394 ops/ms
Iteration  13: 88.486 ops/ms
Iteration  14: 87.625 ops/ms
Iteration  15: 88.441 ops/ms
Iteration  16: 88.583 ops/ms
Iteration  17: 88.199 ops/ms
Iteration  18: 87.034 ops/ms
Iteration  19: 88.144 ops/ms
Iteration  20: 88.541 ops/ms

Result : 88.210 ?(95%) 0.197 ?(99%) 0.269 ops/ms
  Statistics: (min, avg, max) = (87.034, 88.210, 88.651), stdev = 0.420
  Confidence intervals: 95% [88.013, 88.407], 99% [87.941, 88.479]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37565.534 ops/ms
# Warmup Iteration   2: 50897.316 ops/ms
# Warmup Iteration   3: 55430.963 ops/ms
# Warmup Iteration   4: 55531.065 ops/ms
# Warmup Iteration   5: 55189.911 ops/ms
# Warmup Iteration   6: 55308.262 ops/ms
# Warmup Iteration   7: 55860.395 ops/ms
# Warmup Iteration   8: 56381.087 ops/ms
# Warmup Iteration   9: 55912.614 ops/ms
# Warmup Iteration  10: 54816.750 ops/ms
# Warmup Iteration  11: 56287.843 ops/ms
# Warmup Iteration  12: 55041.691 ops/ms
# Warmup Iteration  13: 54611.797 ops/ms
# Warmup Iteration  14: 54868.834 ops/ms
# Warmup Iteration  15: 55883.534 ops/ms
# Warmup Iteration  16: 55683.678 ops/ms
# Warmup Iteration  17: 55718.048 ops/ms
# Warmup Iteration  18: 54847.499 ops/ms
# Warmup Iteration  19: 56047.534 ops/ms
# Warmup Iteration  20: 55760.898 ops/ms
Iteration   1: 54788.932 ops/ms
Iteration   2: 55737.161 ops/ms
Iteration   3: 55343.212 ops/ms
Iteration   4: 55680.459 ops/ms
Iteration   5: 55720.803 ops/ms
Iteration   6: 55543.912 ops/ms
Iteration   7: 55922.708 ops/ms
Iteration   8: 56476.995 ops/ms
Iteration   9: 55757.624 ops/ms
Iteration  10: 55077.152 ops/ms
Iteration  11: 55522.626 ops/ms
Iteration  12: 55907.201 ops/ms
Iteration  13: 55585.465 ops/ms
Iteration  14: 55318.562 ops/ms
Iteration  15: 55996.076 ops/ms
Iteration  16: 56095.791 ops/ms
Iteration  17: 54736.609 ops/ms
Iteration  18: 55438.480 ops/ms
Iteration  19: 55542.816 ops/ms
Iteration  20: 55283.028 ops/ms

Result : 55573.781 ?(95%) 197.461 ?(99%) 269.917 ops/ms
  Statistics: (min, avg, max) = (54736.609, 55573.781, 56476.995), stdev = 421.917
  Confidence intervals: 95% [55376.320, 55771.241], 99% [55303.864, 55843.697]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37893.296 ops/ms
# Warmup Iteration   2: 52453.172 ops/ms
# Warmup Iteration   3: 58108.124 ops/ms
# Warmup Iteration   4: 53969.797 ops/ms
# Warmup Iteration   5: 53852.022 ops/ms
# Warmup Iteration   6: 53621.548 ops/ms
# Warmup Iteration   7: 53861.590 ops/ms
# Warmup Iteration   8: 53904.209 ops/ms
# Warmup Iteration   9: 53909.930 ops/ms
# Warmup Iteration  10: 53354.150 ops/ms
# Warmup Iteration  11: 53570.905 ops/ms
# Warmup Iteration  12: 54011.577 ops/ms
# Warmup Iteration  13: 54434.525 ops/ms
# Warmup Iteration  14: 54042.220 ops/ms
# Warmup Iteration  15: 53406.168 ops/ms
# Warmup Iteration  16: 54229.623 ops/ms
# Warmup Iteration  17: 53806.900 ops/ms
# Warmup Iteration  18: 54247.330 ops/ms
# Warmup Iteration  19: 53913.849 ops/ms
# Warmup Iteration  20: 53758.553 ops/ms
Iteration   1: 54824.685 ops/ms
Iteration   2: 54126.726 ops/ms
Iteration   3: 53472.889 ops/ms
Iteration   4: 54128.278 ops/ms
Iteration   5: 54026.225 ops/ms
Iteration   6: 54418.285 ops/ms
Iteration   7: 54028.334 ops/ms
Iteration   8: 54599.353 ops/ms
Iteration   9: 54059.894 ops/ms
Iteration  10: 54490.035 ops/ms
Iteration  11: 53908.412 ops/ms
Iteration  12: 53792.128 ops/ms
Iteration  13: 54465.208 ops/ms
Iteration  14: 54358.337 ops/ms
Iteration  15: 53600.884 ops/ms
Iteration  16: 54121.372 ops/ms
Iteration  17: 54434.465 ops/ms
Iteration  18: 53734.962 ops/ms
Iteration  19: 54133.692 ops/ms
Iteration  20: 54491.262 ops/ms

Result : 54160.771 ?(95%) 164.298 ?(99%) 224.585 ops/ms
  Statistics: (min, avg, max) = (53472.889, 54160.771, 54824.685), stdev = 351.057
  Confidence intervals: 95% [53996.473, 54325.069], 99% [53936.186, 54385.356]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38239.231 ops/ms
# Warmup Iteration   2: 50925.310 ops/ms
# Warmup Iteration   3: 55201.250 ops/ms
# Warmup Iteration   4: 53742.782 ops/ms
# Warmup Iteration   5: 55961.582 ops/ms
# Warmup Iteration   6: 55912.636 ops/ms
# Warmup Iteration   7: 55357.399 ops/ms
# Warmup Iteration   8: 56067.167 ops/ms
# Warmup Iteration   9: 55438.747 ops/ms
# Warmup Iteration  10: 55310.279 ops/ms
# Warmup Iteration  11: 55733.334 ops/ms
# Warmup Iteration  12: 55600.720 ops/ms
# Warmup Iteration  13: 55600.382 ops/ms
# Warmup Iteration  14: 55909.130 ops/ms
# Warmup Iteration  15: 55623.961 ops/ms
# Warmup Iteration  16: 54772.178 ops/ms
# Warmup Iteration  17: 55944.121 ops/ms
# Warmup Iteration  18: 55556.250 ops/ms
# Warmup Iteration  19: 55900.049 ops/ms
# Warmup Iteration  20: 55221.022 ops/ms
Iteration   1: 56185.761 ops/ms
Iteration   2: 55705.961 ops/ms
Iteration   3: 56256.486 ops/ms
Iteration   4: 54631.080 ops/ms
Iteration   5: 55923.722 ops/ms
Iteration   6: 55699.746 ops/ms
Iteration   7: 55701.908 ops/ms
Iteration   8: 55194.827 ops/ms
Iteration   9: 55920.990 ops/ms
Iteration  10: 56140.018 ops/ms
Iteration  11: 55457.504 ops/ms
Iteration  12: 55261.313 ops/ms
Iteration  13: 56051.378 ops/ms
Iteration  14: 55866.046 ops/ms
Iteration  15: 55623.116 ops/ms
Iteration  16: 55558.706 ops/ms
Iteration  17: 55768.110 ops/ms
Iteration  18: 56019.882 ops/ms
Iteration  19: 56201.203 ops/ms
Iteration  20: 55685.805 ops/ms

Result : 55742.678 ?(95%) 185.536 ?(99%) 253.616 ops/ms
  Statistics: (min, avg, max) = (54631.080, 55742.678, 56256.486), stdev = 396.437
  Confidence intervals: 95% [55557.142, 55928.214], 99% [55489.062, 55996.294]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 38038.074 ops/ms
# Warmup Iteration   2: 47492.731 ops/ms
# Warmup Iteration   3: 55720.686 ops/ms
# Warmup Iteration   4: 55272.208 ops/ms
# Warmup Iteration   5: 56105.787 ops/ms
# Warmup Iteration   6: 55253.610 ops/ms
# Warmup Iteration   7: 55524.743 ops/ms
# Warmup Iteration   8: 55249.914 ops/ms
# Warmup Iteration   9: 55431.753 ops/ms
# Warmup Iteration  10: 55777.081 ops/ms
# Warmup Iteration  11: 55873.651 ops/ms
# Warmup Iteration  12: 55232.160 ops/ms
# Warmup Iteration  13: 55300.532 ops/ms
# Warmup Iteration  14: 55776.638 ops/ms
# Warmup Iteration  15: 55698.086 ops/ms
# Warmup Iteration  16: 55403.051 ops/ms
# Warmup Iteration  17: 54941.697 ops/ms
# Warmup Iteration  18: 55652.518 ops/ms
# Warmup Iteration  19: 55696.217 ops/ms
# Warmup Iteration  20: 55525.446 ops/ms
Iteration   1: 55836.578 ops/ms
Iteration   2: 55597.487 ops/ms
Iteration   3: 55724.086 ops/ms
Iteration   4: 55120.245 ops/ms
Iteration   5: 55839.930 ops/ms
Iteration   6: 55669.848 ops/ms
Iteration   7: 55726.560 ops/ms
Iteration   8: 55782.577 ops/ms
Iteration   9: 55165.422 ops/ms
Iteration  10: 56266.735 ops/ms
Iteration  11: 55953.759 ops/ms
Iteration  12: 55307.509 ops/ms
Iteration  13: 55202.391 ops/ms
Iteration  14: 55919.775 ops/ms
Iteration  15: 55612.261 ops/ms
Iteration  16: 56033.852 ops/ms
Iteration  17: 55590.365 ops/ms
Iteration  18: 56239.903 ops/ms
Iteration  19: 55772.163 ops/ms
Iteration  20: 55729.829 ops/ms

Result : 55704.564 ?(95%) 149.684 ?(99%) 204.608 ops/ms
  Statistics: (min, avg, max) = (55120.245, 55704.564, 56266.735), stdev = 319.831
  Confidence intervals: 95% [55554.880, 55854.248], 99% [55499.955, 55909.172]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36567.173 ops/ms
# Warmup Iteration   2: 50315.655 ops/ms
# Warmup Iteration   3: 55937.464 ops/ms
# Warmup Iteration   4: 55279.899 ops/ms
# Warmup Iteration   5: 55452.937 ops/ms
# Warmup Iteration   6: 55424.637 ops/ms
# Warmup Iteration   7: 55869.863 ops/ms
# Warmup Iteration   8: 53940.865 ops/ms
# Warmup Iteration   9: 53888.529 ops/ms
# Warmup Iteration  10: 54432.837 ops/ms
# Warmup Iteration  11: 53138.483 ops/ms
# Warmup Iteration  12: 55577.753 ops/ms
# Warmup Iteration  13: 55558.582 ops/ms
# Warmup Iteration  14: 54997.000 ops/ms
# Warmup Iteration  15: 55481.778 ops/ms
# Warmup Iteration  16: 55540.652 ops/ms
# Warmup Iteration  17: 54141.528 ops/ms
# Warmup Iteration  18: 54995.729 ops/ms
# Warmup Iteration  19: 55966.772 ops/ms
# Warmup Iteration  20: 55550.434 ops/ms
Iteration   1: 56178.812 ops/ms
Iteration   2: 55022.588 ops/ms
Iteration   3: 55704.469 ops/ms
Iteration   4: 55865.858 ops/ms
Iteration   5: 55284.489 ops/ms
Iteration   6: 54390.847 ops/ms
Iteration   7: 56241.088 ops/ms
Iteration   8: 55871.781 ops/ms
Iteration   9: 55125.662 ops/ms
Iteration  10: 55028.022 ops/ms
Iteration  11: 56008.891 ops/ms
Iteration  12: 55555.653 ops/ms
Iteration  13: 55412.227 ops/ms
Iteration  14: 55154.266 ops/ms
Iteration  15: 55869.713 ops/ms
Iteration  16: 55970.018 ops/ms
Iteration  17: 55431.172 ops/ms
Iteration  18: 55442.593 ops/ms
Iteration  19: 55950.594 ops/ms
Iteration  20: 55357.646 ops/ms

Result : 55543.319 ?(95%) 218.253 ?(99%) 298.339 ops/ms
  Statistics: (min, avg, max) = (54390.847, 55543.319, 56241.088), stdev = 466.345
  Confidence intervals: 95% [55325.066, 55761.573], 99% [55244.981, 55841.658]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 357.390 ops/ms
# Warmup Iteration   2: 561.224 ops/ms
# Warmup Iteration   3: 599.130 ops/ms
# Warmup Iteration   4: 602.498 ops/ms
# Warmup Iteration   5: 596.995 ops/ms
# Warmup Iteration   6: 597.852 ops/ms
# Warmup Iteration   7: 538.167 ops/ms
# Warmup Iteration   8: 584.524 ops/ms
# Warmup Iteration   9: 597.331 ops/ms
# Warmup Iteration  10: 597.434 ops/ms
# Warmup Iteration  11: 600.440 ops/ms
# Warmup Iteration  12: 602.244 ops/ms
# Warmup Iteration  13: 596.078 ops/ms
# Warmup Iteration  14: 599.314 ops/ms
# Warmup Iteration  15: 595.878 ops/ms
# Warmup Iteration  16: 594.822 ops/ms
# Warmup Iteration  17: 588.065 ops/ms
# Warmup Iteration  18: 589.153 ops/ms
# Warmup Iteration  19: 589.317 ops/ms
# Warmup Iteration  20: 594.778 ops/ms
Iteration   1: 594.873 ops/ms
Iteration   2: 589.199 ops/ms
Iteration   3: 582.281 ops/ms
Iteration   4: 591.538 ops/ms
Iteration   5: 589.637 ops/ms
Iteration   6: 589.633 ops/ms
Iteration   7: 592.024 ops/ms
Iteration   8: 591.260 ops/ms
Iteration   9: 591.445 ops/ms
Iteration  10: 586.841 ops/ms
Iteration  11: 589.628 ops/ms
Iteration  12: 590.943 ops/ms
Iteration  13: 591.225 ops/ms
Iteration  14: 591.622 ops/ms
Iteration  15: 593.721 ops/ms
Iteration  16: 589.285 ops/ms
Iteration  17: 592.320 ops/ms
Iteration  18: 588.052 ops/ms
Iteration  19: 587.230 ops/ms
Iteration  20: 589.609 ops/ms

Result : 590.118 ?(95%) 1.273 ?(99%) 1.740 ops/ms
  Statistics: (min, avg, max) = (582.281, 590.118, 594.873), stdev = 2.720
  Confidence intervals: 95% [588.845, 591.391], 99% [588.378, 591.858]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 361.961 ops/ms
# Warmup Iteration   2: 582.066 ops/ms
# Warmup Iteration   3: 615.202 ops/ms
# Warmup Iteration   4: 612.518 ops/ms
# Warmup Iteration   5: 623.182 ops/ms
# Warmup Iteration   6: 619.086 ops/ms
# Warmup Iteration   7: 550.084 ops/ms
# Warmup Iteration   8: 611.251 ops/ms
# Warmup Iteration   9: 621.031 ops/ms
# Warmup Iteration  10: 618.424 ops/ms
# Warmup Iteration  11: 621.902 ops/ms
# Warmup Iteration  12: 621.124 ops/ms
# Warmup Iteration  13: 620.983 ops/ms
# Warmup Iteration  14: 619.692 ops/ms
# Warmup Iteration  15: 618.648 ops/ms
# Warmup Iteration  16: 616.137 ops/ms
# Warmup Iteration  17: 622.009 ops/ms
# Warmup Iteration  18: 618.545 ops/ms
# Warmup Iteration  19: 618.890 ops/ms
# Warmup Iteration  20: 618.228 ops/ms
Iteration   1: 621.797 ops/ms
Iteration   2: 619.066 ops/ms
Iteration   3: 622.795 ops/ms
Iteration   4: 616.819 ops/ms
Iteration   5: 620.977 ops/ms
Iteration   6: 608.517 ops/ms
Iteration   7: 598.546 ops/ms
Iteration   8: 596.086 ops/ms
Iteration   9: 591.216 ops/ms
Iteration  10: 617.132 ops/ms
Iteration  11: 617.051 ops/ms
Iteration  12: 618.431 ops/ms
Iteration  13: 620.645 ops/ms
Iteration  14: 617.451 ops/ms
Iteration  15: 605.855 ops/ms
Iteration  16: 620.343 ops/ms
Iteration  17: 620.578 ops/ms
Iteration  18: 616.185 ops/ms
Iteration  19: 620.940 ops/ms
Iteration  20: 618.892 ops/ms

Result : 614.466 ?(95%) 4.357 ?(99%) 5.955 ops/ms
  Statistics: (min, avg, max) = (591.216, 614.466, 622.795), stdev = 9.309
  Confidence intervals: 95% [610.109, 618.823], 99% [608.511, 620.422]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 361.630 ops/ms
# Warmup Iteration   2: 587.253 ops/ms
# Warmup Iteration   3: 621.057 ops/ms
# Warmup Iteration   4: 621.710 ops/ms
# Warmup Iteration   5: 625.082 ops/ms
# Warmup Iteration   6: 628.961 ops/ms
# Warmup Iteration   7: 551.164 ops/ms
# Warmup Iteration   8: 612.118 ops/ms
# Warmup Iteration   9: 629.261 ops/ms
# Warmup Iteration  10: 623.877 ops/ms
# Warmup Iteration  11: 622.363 ops/ms
# Warmup Iteration  12: 626.030 ops/ms
# Warmup Iteration  13: 625.308 ops/ms
# Warmup Iteration  14: 625.876 ops/ms
# Warmup Iteration  15: 623.031 ops/ms
# Warmup Iteration  16: 625.263 ops/ms
# Warmup Iteration  17: 617.110 ops/ms
# Warmup Iteration  18: 620.557 ops/ms
# Warmup Iteration  19: 616.584 ops/ms
# Warmup Iteration  20: 617.846 ops/ms
Iteration   1: 618.163 ops/ms
Iteration   2: 623.229 ops/ms
Iteration   3: 623.539 ops/ms
Iteration   4: 616.199 ops/ms
Iteration   5: 623.118 ops/ms
Iteration   6: 618.944 ops/ms
Iteration   7: 612.501 ops/ms
Iteration   8: 617.990 ops/ms
Iteration   9: 618.689 ops/ms
Iteration  10: 621.026 ops/ms
Iteration  11: 618.565 ops/ms
Iteration  12: 623.063 ops/ms
Iteration  13: 615.889 ops/ms
Iteration  14: 620.853 ops/ms
Iteration  15: 624.316 ops/ms
Iteration  16: 620.081 ops/ms
Iteration  17: 618.013 ops/ms
Iteration  18: 616.942 ops/ms
Iteration  19: 623.473 ops/ms
Iteration  20: 618.802 ops/ms

Result : 619.670 ?(95%) 1.468 ?(99%) 2.007 ops/ms
  Statistics: (min, avg, max) = (612.501, 619.670, 624.316), stdev = 3.137
  Confidence intervals: 95% [618.202, 621.138], 99% [617.663, 621.676]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 355.124 ops/ms
# Warmup Iteration   2: 583.546 ops/ms
# Warmup Iteration   3: 624.416 ops/ms
# Warmup Iteration   4: 623.110 ops/ms
# Warmup Iteration   5: 621.581 ops/ms
# Warmup Iteration   6: 624.386 ops/ms
# Warmup Iteration   7: 550.419 ops/ms
# Warmup Iteration   8: 611.273 ops/ms
# Warmup Iteration   9: 617.711 ops/ms
# Warmup Iteration  10: 620.655 ops/ms
# Warmup Iteration  11: 628.225 ops/ms
# Warmup Iteration  12: 616.258 ops/ms
# Warmup Iteration  13: 619.987 ops/ms
# Warmup Iteration  14: 623.064 ops/ms
# Warmup Iteration  15: 623.830 ops/ms
# Warmup Iteration  16: 624.431 ops/ms
# Warmup Iteration  17: 615.289 ops/ms
# Warmup Iteration  18: 618.721 ops/ms
# Warmup Iteration  19: 620.768 ops/ms
# Warmup Iteration  20: 618.743 ops/ms
Iteration   1: 618.929 ops/ms
Iteration   2: 614.245 ops/ms
Iteration   3: 624.169 ops/ms
Iteration   4: 621.416 ops/ms
Iteration   5: 619.157 ops/ms
Iteration   6: 621.290 ops/ms
Iteration   7: 623.739 ops/ms
Iteration   8: 618.124 ops/ms
Iteration   9: 623.927 ops/ms
Iteration  10: 620.599 ops/ms
Iteration  11: 621.065 ops/ms
Iteration  12: 621.118 ops/ms
Iteration  13: 621.476 ops/ms
Iteration  14: 618.267 ops/ms
Iteration  15: 624.879 ops/ms
Iteration  16: 620.549 ops/ms
Iteration  17: 621.194 ops/ms
Iteration  18: 618.543 ops/ms
Iteration  19: 621.108 ops/ms
Iteration  20: 624.515 ops/ms

Result : 620.915 ?(95%) 1.221 ?(99%) 1.669 ops/ms
  Statistics: (min, avg, max) = (614.245, 620.915, 624.879), stdev = 2.610
  Confidence intervals: 95% [619.694, 622.137], 99% [619.246, 622.585]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 363.687 ops/ms
# Warmup Iteration   2: 593.358 ops/ms
# Warmup Iteration   3: 630.855 ops/ms
# Warmup Iteration   4: 629.541 ops/ms
# Warmup Iteration   5: 628.809 ops/ms
# Warmup Iteration   6: 629.833 ops/ms
# Warmup Iteration   7: 557.377 ops/ms
# Warmup Iteration   8: 623.218 ops/ms
# Warmup Iteration   9: 632.568 ops/ms
# Warmup Iteration  10: 626.374 ops/ms
# Warmup Iteration  11: 632.536 ops/ms
# Warmup Iteration  12: 632.019 ops/ms
# Warmup Iteration  13: 631.545 ops/ms
# Warmup Iteration  14: 629.760 ops/ms
# Warmup Iteration  15: 634.363 ops/ms
# Warmup Iteration  16: 630.967 ops/ms
# Warmup Iteration  17: 633.196 ops/ms
# Warmup Iteration  18: 633.687 ops/ms
# Warmup Iteration  19: 634.974 ops/ms
# Warmup Iteration  20: 631.205 ops/ms
Iteration   1: 630.059 ops/ms
Iteration   2: 630.056 ops/ms
Iteration   3: 632.684 ops/ms
Iteration   4: 633.367 ops/ms
Iteration   5: 632.292 ops/ms
Iteration   6: 632.780 ops/ms
Iteration   7: 630.710 ops/ms
Iteration   8: 632.995 ops/ms
Iteration   9: 631.245 ops/ms
Iteration  10: 631.140 ops/ms
Iteration  11: 630.767 ops/ms
Iteration  12: 632.475 ops/ms
Iteration  13: 628.886 ops/ms
Iteration  14: 635.414 ops/ms
Iteration  15: 633.950 ops/ms
Iteration  16: 635.214 ops/ms
Iteration  17: 630.795 ops/ms
Iteration  18: 635.177 ops/ms
Iteration  19: 633.533 ops/ms
Iteration  20: 632.921 ops/ms

Result : 632.323 ?(95%) 0.862 ?(99%) 1.178 ops/ms
  Statistics: (min, avg, max) = (628.886, 632.323, 635.414), stdev = 1.841
  Confidence intervals: 95% [631.461, 633.185], 99% [631.145, 633.501]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1218.317 ops/ms
# Warmup Iteration   2: 1621.201 ops/ms
# Warmup Iteration   3: 1735.552 ops/ms
# Warmup Iteration   4: 1763.502 ops/ms
# Warmup Iteration   5: 1778.429 ops/ms
# Warmup Iteration   6: 1765.076 ops/ms
# Warmup Iteration   7: 1776.598 ops/ms
# Warmup Iteration   8: 1778.141 ops/ms
# Warmup Iteration   9: 1778.606 ops/ms
# Warmup Iteration  10: 1785.350 ops/ms
# Warmup Iteration  11: 1782.405 ops/ms
# Warmup Iteration  12: 1782.084 ops/ms
# Warmup Iteration  13: 1778.429 ops/ms
# Warmup Iteration  14: 1781.320 ops/ms
# Warmup Iteration  15: 1782.950 ops/ms
# Warmup Iteration  16: 1779.574 ops/ms
# Warmup Iteration  17: 1774.969 ops/ms
# Warmup Iteration  18: 1781.244 ops/ms
# Warmup Iteration  19: 1775.389 ops/ms
# Warmup Iteration  20: 1781.687 ops/ms
Iteration   1: 1772.168 ops/ms
Iteration   2: 1746.934 ops/ms
Iteration   3: 1778.008 ops/ms
Iteration   4: 1780.850 ops/ms
Iteration   5: 1771.842 ops/ms
Iteration   6: 1781.882 ops/ms
Iteration   7: 1775.757 ops/ms
Iteration   8: 1773.848 ops/ms
Iteration   9: 1765.358 ops/ms
Iteration  10: 1777.570 ops/ms
Iteration  11: 1776.499 ops/ms
Iteration  12: 1771.874 ops/ms
Iteration  13: 1782.042 ops/ms
Iteration  14: 1781.900 ops/ms
Iteration  15: 1772.304 ops/ms
Iteration  16: 1774.039 ops/ms
Iteration  17: 1767.558 ops/ms
Iteration  18: 1780.797 ops/ms
Iteration  19: 1779.280 ops/ms
Iteration  20: 1781.243 ops/ms

Result : 1774.588 ?(95%) 3.808 ?(99%) 5.206 ops/ms
  Statistics: (min, avg, max) = (1746.934, 1774.588, 1782.042), stdev = 8.137
  Confidence intervals: 95% [1770.779, 1778.396], 99% [1769.382, 1779.793]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1220.401 ops/ms
# Warmup Iteration   2: 1633.235 ops/ms
# Warmup Iteration   3: 1745.885 ops/ms
# Warmup Iteration   4: 1778.884 ops/ms
# Warmup Iteration   5: 1782.145 ops/ms
# Warmup Iteration   6: 1781.970 ops/ms
# Warmup Iteration   7: 1783.821 ops/ms
# Warmup Iteration   8: 1787.779 ops/ms
# Warmup Iteration   9: 1782.762 ops/ms
# Warmup Iteration  10: 1783.775 ops/ms
# Warmup Iteration  11: 1778.990 ops/ms
# Warmup Iteration  12: 1779.376 ops/ms
# Warmup Iteration  13: 1790.366 ops/ms
# Warmup Iteration  14: 1790.252 ops/ms
# Warmup Iteration  15: 1783.090 ops/ms
# Warmup Iteration  16: 1786.789 ops/ms
# Warmup Iteration  17: 1782.605 ops/ms
# Warmup Iteration  18: 1791.863 ops/ms
# Warmup Iteration  19: 1790.284 ops/ms
# Warmup Iteration  20: 1784.369 ops/ms
Iteration   1: 1790.476 ops/ms
Iteration   2: 1790.083 ops/ms
Iteration   3: 1783.950 ops/ms
Iteration   4: 1790.769 ops/ms
Iteration   5: 1785.278 ops/ms
Iteration   6: 1790.836 ops/ms
Iteration   7: 1790.525 ops/ms
Iteration   8: 1775.635 ops/ms
Iteration   9: 1780.905 ops/ms
Iteration  10: 1783.303 ops/ms
Iteration  11: 1790.154 ops/ms
Iteration  12: 1780.765 ops/ms
Iteration  13: 1789.321 ops/ms
Iteration  14: 1789.960 ops/ms
Iteration  15: 1791.406 ops/ms
Iteration  16: 1780.049 ops/ms
Iteration  17: 1783.852 ops/ms
Iteration  18: 1787.901 ops/ms
Iteration  19: 1785.105 ops/ms
Iteration  20: 1791.313 ops/ms

Result : 1786.579 ?(95%) 2.188 ?(99%) 2.991 ops/ms
  Statistics: (min, avg, max) = (1775.635, 1786.579, 1791.406), stdev = 4.675
  Confidence intervals: 95% [1784.391, 1788.767], 99% [1783.589, 1789.570]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1214.722 ops/ms
# Warmup Iteration   2: 1635.674 ops/ms
# Warmup Iteration   3: 1754.529 ops/ms
# Warmup Iteration   4: 1774.184 ops/ms
# Warmup Iteration   5: 1781.057 ops/ms
# Warmup Iteration   6: 1773.954 ops/ms
# Warmup Iteration   7: 1781.639 ops/ms
# Warmup Iteration   8: 1775.510 ops/ms
# Warmup Iteration   9: 1770.610 ops/ms
# Warmup Iteration  10: 1778.772 ops/ms
# Warmup Iteration  11: 1774.847 ops/ms
# Warmup Iteration  12: 1775.146 ops/ms
# Warmup Iteration  13: 1769.968 ops/ms
# Warmup Iteration  14: 1776.178 ops/ms
# Warmup Iteration  15: 1774.760 ops/ms
# Warmup Iteration  16: 1772.912 ops/ms
# Warmup Iteration  17: 1762.120 ops/ms
# Warmup Iteration  18: 1768.100 ops/ms
# Warmup Iteration  19: 1768.912 ops/ms
# Warmup Iteration  20: 1775.342 ops/ms
Iteration   1: 1771.967 ops/ms
Iteration   2: 1768.643 ops/ms
Iteration   3: 1763.992 ops/ms
Iteration   4: 1768.098 ops/ms
Iteration   5: 1771.522 ops/ms
Iteration   6: 1765.694 ops/ms
Iteration   7: 1775.294 ops/ms
Iteration   8: 1767.843 ops/ms
Iteration   9: 1763.870 ops/ms
Iteration  10: 1763.240 ops/ms
Iteration  11: 1775.490 ops/ms
Iteration  12: 1768.012 ops/ms
Iteration  13: 1759.532 ops/ms
Iteration  14: 1764.952 ops/ms
Iteration  15: 1766.074 ops/ms
Iteration  16: 1771.428 ops/ms
Iteration  17: 1774.416 ops/ms
Iteration  18: 1775.321 ops/ms
Iteration  19: 1769.461 ops/ms
Iteration  20: 1766.349 ops/ms

Result : 1768.560 ?(95%) 2.117 ?(99%) 2.894 ops/ms
  Statistics: (min, avg, max) = (1759.532, 1768.560, 1775.490), stdev = 4.524
  Confidence intervals: 95% [1766.443, 1770.677], 99% [1765.666, 1771.454]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1218.693 ops/ms
# Warmup Iteration   2: 1616.742 ops/ms
# Warmup Iteration   3: 1742.881 ops/ms
# Warmup Iteration   4: 1782.255 ops/ms
# Warmup Iteration   5: 1791.727 ops/ms
# Warmup Iteration   6: 1794.673 ops/ms
# Warmup Iteration   7: 1783.409 ops/ms
# Warmup Iteration   8: 1778.486 ops/ms
# Warmup Iteration   9: 1764.343 ops/ms
# Warmup Iteration  10: 1782.141 ops/ms
# Warmup Iteration  11: 1784.422 ops/ms
# Warmup Iteration  12: 1786.361 ops/ms
# Warmup Iteration  13: 1778.447 ops/ms
# Warmup Iteration  14: 1781.191 ops/ms
# Warmup Iteration  15: 1777.683 ops/ms
# Warmup Iteration  16: 1785.388 ops/ms
# Warmup Iteration  17: 1786.695 ops/ms
# Warmup Iteration  18: 1772.051 ops/ms
# Warmup Iteration  19: 1786.279 ops/ms
# Warmup Iteration  20: 1787.643 ops/ms
Iteration   1: 1779.502 ops/ms
Iteration   2: 1770.083 ops/ms
Iteration   3: 1777.280 ops/ms
Iteration   4: 1785.620 ops/ms
Iteration   5: 1779.340 ops/ms
Iteration   6: 1779.701 ops/ms
Iteration   7: 1779.380 ops/ms
Iteration   8: 1787.155 ops/ms
Iteration   9: 1787.362 ops/ms
Iteration  10: 1772.828 ops/ms
Iteration  11: 1778.419 ops/ms
Iteration  12: 1775.365 ops/ms
Iteration  13: 1780.719 ops/ms
Iteration  14: 1774.095 ops/ms
Iteration  15: 1779.471 ops/ms
Iteration  16: 1786.247 ops/ms
Iteration  17: 1779.522 ops/ms
Iteration  18: 1779.215 ops/ms
Iteration  19: 1785.445 ops/ms
Iteration  20: 1778.770 ops/ms

Result : 1779.776 ?(95%) 2.213 ?(99%) 3.026 ops/ms
  Statistics: (min, avg, max) = (1770.083, 1779.776, 1787.362), stdev = 4.729
  Confidence intervals: 95% [1777.563, 1781.989], 99% [1776.750, 1782.802]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1207.184 ops/ms
# Warmup Iteration   2: 1639.497 ops/ms
# Warmup Iteration   3: 1757.217 ops/ms
# Warmup Iteration   4: 1785.165 ops/ms
# Warmup Iteration   5: 1799.369 ops/ms
# Warmup Iteration   6: 1801.410 ops/ms
# Warmup Iteration   7: 1805.845 ops/ms
# Warmup Iteration   8: 1802.913 ops/ms
# Warmup Iteration   9: 1783.557 ops/ms
# Warmup Iteration  10: 1789.815 ops/ms
# Warmup Iteration  11: 1803.576 ops/ms
# Warmup Iteration  12: 1803.776 ops/ms
# Warmup Iteration  13: 1801.335 ops/ms
# Warmup Iteration  14: 1801.920 ops/ms
# Warmup Iteration  15: 1789.857 ops/ms
# Warmup Iteration  16: 1808.042 ops/ms
# Warmup Iteration  17: 1790.127 ops/ms
# Warmup Iteration  18: 1803.316 ops/ms
# Warmup Iteration  19: 1795.430 ops/ms
# Warmup Iteration  20: 1797.784 ops/ms
Iteration   1: 1795.457 ops/ms
Iteration   2: 1802.376 ops/ms
Iteration   3: 1804.307 ops/ms
Iteration   4: 1789.978 ops/ms
Iteration   5: 1796.999 ops/ms
Iteration   6: 1797.575 ops/ms
Iteration   7: 1789.791 ops/ms
Iteration   8: 1802.280 ops/ms
Iteration   9: 1796.035 ops/ms
Iteration  10: 1803.700 ops/ms
Iteration  11: 1802.373 ops/ms
Iteration  12: 1796.330 ops/ms
Iteration  13: 1798.664 ops/ms
Iteration  14: 1789.278 ops/ms
Iteration  15: 1797.935 ops/ms
Iteration  16: 1801.137 ops/ms
Iteration  17: 1797.409 ops/ms
Iteration  18: 1804.838 ops/ms
Iteration  19: 1804.632 ops/ms
Iteration  20: 1803.093 ops/ms

Result : 1798.709 ?(95%) 2.323 ?(99%) 3.176 ops/ms
  Statistics: (min, avg, max) = (1789.278, 1798.709, 1804.839), stdev = 4.964
  Confidence intervals: 95% [1796.386, 1801.033], 99% [1795.534, 1801.885]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.279 ops/ms
# Warmup Iteration   2: 11.509 ops/ms
# Warmup Iteration   3: 18.069 ops/ms
# Warmup Iteration   4: 19.840 ops/ms
# Warmup Iteration   5: 19.928 ops/ms
# Warmup Iteration   6: 20.078 ops/ms
# Warmup Iteration   7: 19.853 ops/ms
# Warmup Iteration   8: 18.173 ops/ms
# Warmup Iteration   9: 18.003 ops/ms
# Warmup Iteration  10: 19.987 ops/ms
# Warmup Iteration  11: 19.829 ops/ms
# Warmup Iteration  12: 19.816 ops/ms
# Warmup Iteration  13: 19.901 ops/ms
# Warmup Iteration  14: 19.917 ops/ms
# Warmup Iteration  15: 19.981 ops/ms
# Warmup Iteration  16: 19.977 ops/ms
# Warmup Iteration  17: 19.683 ops/ms
# Warmup Iteration  18: 19.691 ops/ms
# Warmup Iteration  19: 19.613 ops/ms
# Warmup Iteration  20: 19.811 ops/ms
Iteration   1: 19.777 ops/ms
Iteration   2: 19.820 ops/ms
Iteration   3: 19.770 ops/ms
Iteration   4: 19.703 ops/ms
Iteration   5: 19.645 ops/ms
Iteration   6: 19.637 ops/ms
Iteration   7: 19.789 ops/ms
Iteration   8: 19.548 ops/ms
Iteration   9: 19.712 ops/ms
Iteration  10: 19.848 ops/ms
Iteration  11: 19.749 ops/ms
Iteration  12: 19.768 ops/ms
Iteration  13: 19.685 ops/ms
Iteration  14: 19.662 ops/ms
Iteration  15: 19.694 ops/ms
Iteration  16: 19.605 ops/ms
Iteration  17: 19.769 ops/ms
Iteration  18: 19.842 ops/ms
Iteration  19: 19.741 ops/ms
Iteration  20: 19.695 ops/ms

Result : 19.723 ?(95%) 0.037 ?(99%) 0.051 ops/ms
  Statistics: (min, avg, max) = (19.548, 19.723, 19.848), stdev = 0.079
  Confidence intervals: 95% [19.686, 19.760], 99% [19.672, 19.774]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.457 ops/ms
# Warmup Iteration   2: 11.566 ops/ms
# Warmup Iteration   3: 18.484 ops/ms
# Warmup Iteration   4: 20.011 ops/ms
# Warmup Iteration   5: 20.160 ops/ms
# Warmup Iteration   6: 20.112 ops/ms
# Warmup Iteration   7: 20.082 ops/ms
# Warmup Iteration   8: 18.156 ops/ms
# Warmup Iteration   9: 18.237 ops/ms
# Warmup Iteration  10: 19.966 ops/ms
# Warmup Iteration  11: 19.207 ops/ms
# Warmup Iteration  12: 19.246 ops/ms
# Warmup Iteration  13: 19.036 ops/ms
# Warmup Iteration  14: 19.437 ops/ms
# Warmup Iteration  15: 20.035 ops/ms
# Warmup Iteration  16: 20.046 ops/ms
# Warmup Iteration  17: 19.890 ops/ms
# Warmup Iteration  18: 20.207 ops/ms
# Warmup Iteration  19: 19.932 ops/ms
# Warmup Iteration  20: 19.824 ops/ms
Iteration   1: 20.014 ops/ms
Iteration   2: 19.978 ops/ms
Iteration   3: 20.148 ops/ms
Iteration   4: 20.195 ops/ms
Iteration   5: 19.995 ops/ms
Iteration   6: 20.176 ops/ms
Iteration   7: 20.270 ops/ms
Iteration   8: 20.187 ops/ms
Iteration   9: 20.208 ops/ms
Iteration  10: 20.106 ops/ms
Iteration  11: 20.219 ops/ms
Iteration  12: 19.948 ops/ms
Iteration  13: 20.016 ops/ms
Iteration  14: 20.018 ops/ms
Iteration  15: 20.067 ops/ms
Iteration  16: 20.008 ops/ms
Iteration  17: 20.068 ops/ms
Iteration  18: 20.021 ops/ms
Iteration  19: 20.286 ops/ms
Iteration  20: 20.190 ops/ms

Result : 20.106 ?(95%) 0.049 ?(99%) 0.067 ops/ms
  Statistics: (min, avg, max) = (19.948, 20.106, 20.286), stdev = 0.105
  Confidence intervals: 95% [20.057, 20.155], 99% [20.039, 20.173]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 4.209 ops/ms
# Warmup Iteration   2: 12.297 ops/ms
# Warmup Iteration   3: 19.146 ops/ms
# Warmup Iteration   4: 19.768 ops/ms
# Warmup Iteration   5: 19.717 ops/ms
# Warmup Iteration   6: 19.831 ops/ms
# Warmup Iteration   7: 19.953 ops/ms
# Warmup Iteration   8: 18.159 ops/ms
# Warmup Iteration   9: 18.068 ops/ms
# Warmup Iteration  10: 19.763 ops/ms
# Warmup Iteration  11: 19.839 ops/ms
# Warmup Iteration  12: 19.760 ops/ms
# Warmup Iteration  13: 19.714 ops/ms
# Warmup Iteration  14: 19.867 ops/ms
# Warmup Iteration  15: 19.952 ops/ms
# Warmup Iteration  16: 19.775 ops/ms
# Warmup Iteration  17: 19.849 ops/ms
# Warmup Iteration  18: 19.994 ops/ms
# Warmup Iteration  19: 20.037 ops/ms
# Warmup Iteration  20: 19.873 ops/ms
Iteration   1: 20.037 ops/ms
Iteration   2: 19.906 ops/ms
Iteration   3: 20.114 ops/ms
Iteration   4: 20.117 ops/ms
Iteration   5: 19.865 ops/ms
Iteration   6: 20.003 ops/ms
Iteration   7: 20.104 ops/ms
Iteration   8: 19.952 ops/ms
Iteration   9: 20.126 ops/ms
Iteration  10: 19.884 ops/ms
Iteration  11: 19.957 ops/ms
Iteration  12: 20.120 ops/ms
Iteration  13: 20.121 ops/ms
Iteration  14: 19.877 ops/ms
Iteration  15: 20.040 ops/ms
Iteration  16: 20.022 ops/ms
Iteration  17: 19.958 ops/ms
Iteration  18: 19.950 ops/ms
Iteration  19: 20.007 ops/ms
Iteration  20: 20.046 ops/ms

Result : 20.010 ?(95%) 0.042 ?(99%) 0.057 ops/ms
  Statistics: (min, avg, max) = (19.865, 20.010, 20.126), stdev = 0.089
  Confidence intervals: 95% [19.969, 20.052], 99% [19.953, 20.067]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.483 ops/ms
# Warmup Iteration   2: 11.520 ops/ms
# Warmup Iteration   3: 18.448 ops/ms
# Warmup Iteration   4: 20.039 ops/ms
# Warmup Iteration   5: 19.959 ops/ms
# Warmup Iteration   6: 19.941 ops/ms
# Warmup Iteration   7: 19.939 ops/ms
# Warmup Iteration   8: 18.204 ops/ms
# Warmup Iteration   9: 18.204 ops/ms
# Warmup Iteration  10: 19.894 ops/ms
# Warmup Iteration  11: 20.127 ops/ms
# Warmup Iteration  12: 20.035 ops/ms
# Warmup Iteration  13: 20.028 ops/ms
# Warmup Iteration  14: 19.974 ops/ms
# Warmup Iteration  15: 19.994 ops/ms
# Warmup Iteration  16: 19.946 ops/ms
# Warmup Iteration  17: 20.143 ops/ms
# Warmup Iteration  18: 20.023 ops/ms
# Warmup Iteration  19: 20.058 ops/ms
# Warmup Iteration  20: 19.957 ops/ms
Iteration   1: 19.968 ops/ms
Iteration   2: 20.028 ops/ms
Iteration   3: 19.951 ops/ms
Iteration   4: 20.087 ops/ms
Iteration   5: 20.074 ops/ms
Iteration   6: 20.021 ops/ms
Iteration   7: 20.027 ops/ms
Iteration   8: 20.077 ops/ms
Iteration   9: 19.892 ops/ms
Iteration  10: 20.101 ops/ms
Iteration  11: 19.977 ops/ms
Iteration  12: 19.962 ops/ms
Iteration  13: 20.092 ops/ms
Iteration  14: 20.038 ops/ms
Iteration  15: 19.994 ops/ms
Iteration  16: 20.149 ops/ms
Iteration  17: 20.109 ops/ms
Iteration  18: 20.063 ops/ms
Iteration  19: 20.005 ops/ms
Iteration  20: 20.054 ops/ms

Result : 20.034 ?(95%) 0.030 ?(99%) 0.041 ops/ms
  Statistics: (min, avg, max) = (19.892, 20.034, 20.149), stdev = 0.063
  Confidence intervals: 95% [20.004, 20.063], 99% [19.993, 20.074]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 3.526 ops/ms
# Warmup Iteration   2: 11.654 ops/ms
# Warmup Iteration   3: 18.574 ops/ms
# Warmup Iteration   4: 20.081 ops/ms
# Warmup Iteration   5: 20.130 ops/ms
# Warmup Iteration   6: 20.165 ops/ms
# Warmup Iteration   7: 19.991 ops/ms
# Warmup Iteration   8: 18.285 ops/ms
# Warmup Iteration   9: 18.267 ops/ms
# Warmup Iteration  10: 20.127 ops/ms
# Warmup Iteration  11: 20.026 ops/ms
# Warmup Iteration  12: 20.037 ops/ms
# Warmup Iteration  13: 20.115 ops/ms
# Warmup Iteration  14: 20.194 ops/ms
# Warmup Iteration  15: 20.049 ops/ms
# Warmup Iteration  16: 19.979 ops/ms
# Warmup Iteration  17: 20.144 ops/ms
# Warmup Iteration  18: 20.106 ops/ms
# Warmup Iteration  19: 20.236 ops/ms
# Warmup Iteration  20: 20.022 ops/ms
Iteration   1: 20.238 ops/ms
Iteration   2: 20.071 ops/ms
Iteration   3: 20.186 ops/ms
Iteration   4: 20.172 ops/ms
Iteration   5: 20.074 ops/ms
Iteration   6: 20.169 ops/ms
Iteration   7: 20.118 ops/ms
Iteration   8: 20.130 ops/ms
Iteration   9: 20.219 ops/ms
Iteration  10: 19.999 ops/ms
Iteration  11: 20.168 ops/ms
Iteration  12: 20.042 ops/ms
Iteration  13: 20.173 ops/ms
Iteration  14: 20.231 ops/ms
Iteration  15: 20.167 ops/ms
Iteration  16: 20.144 ops/ms
Iteration  17: 20.162 ops/ms
Iteration  18: 20.162 ops/ms
Iteration  19: 20.159 ops/ms
Iteration  20: 20.083 ops/ms

Result : 20.143 ?(95%) 0.029 ?(99%) 0.040 ops/ms
  Statistics: (min, avg, max) = (19.999, 20.143, 20.238), stdev = 0.062
  Confidence intervals: 95% [20.114, 20.173], 99% [20.103, 20.183]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 994.926 ops/ms
# Warmup Iteration   2: 2087.560 ops/ms
# Warmup Iteration   3: 2257.314 ops/ms
# Warmup Iteration   4: 2258.269 ops/ms
# Warmup Iteration   5: 2250.220 ops/ms
# Warmup Iteration   6: 2258.424 ops/ms
# Warmup Iteration   7: 2202.716 ops/ms
# Warmup Iteration   8: 2215.631 ops/ms
# Warmup Iteration   9: 2208.594 ops/ms
# Warmup Iteration  10: 2217.876 ops/ms
# Warmup Iteration  11: 2217.806 ops/ms
# Warmup Iteration  12: 2216.742 ops/ms
# Warmup Iteration  13: 2210.356 ops/ms
# Warmup Iteration  14: 2204.505 ops/ms
# Warmup Iteration  15: 2210.956 ops/ms
# Warmup Iteration  16: 2221.018 ops/ms
# Warmup Iteration  17: 2263.408 ops/ms
# Warmup Iteration  18: 2261.321 ops/ms
# Warmup Iteration  19: 2258.396 ops/ms
# Warmup Iteration  20: 2270.323 ops/ms
Iteration   1: 2272.239 ops/ms
Iteration   2: 2258.747 ops/ms
Iteration   3: 2271.884 ops/ms
Iteration   4: 2264.487 ops/ms
Iteration   5: 2271.181 ops/ms
Iteration   6: 2263.810 ops/ms
Iteration   7: 2263.680 ops/ms
Iteration   8: 2265.259 ops/ms
Iteration   9: 2262.302 ops/ms
Iteration  10: 2265.104 ops/ms
Iteration  11: 2266.357 ops/ms
Iteration  12: 2260.776 ops/ms
Iteration  13: 2257.682 ops/ms
Iteration  14: 2263.910 ops/ms
Iteration  15: 2254.245 ops/ms
Iteration  16: 2253.981 ops/ms
Iteration  17: 2271.012 ops/ms
Iteration  18: 2263.578 ops/ms
Iteration  19: 2266.156 ops/ms
Iteration  20: 2259.213 ops/ms

Result : 2263.780 ?(95%) 2.501 ?(99%) 3.419 ops/ms
  Statistics: (min, avg, max) = (2253.981, 2263.780, 2272.239), stdev = 5.344
  Confidence intervals: 95% [2261.279, 2266.281], 99% [2260.361, 2267.199]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1190.765 ops/ms
# Warmup Iteration   2: 2337.989 ops/ms
# Warmup Iteration   3: 2212.708 ops/ms
# Warmup Iteration   4: 2205.864 ops/ms
# Warmup Iteration   5: 2220.565 ops/ms
# Warmup Iteration   6: 2222.446 ops/ms
# Warmup Iteration   7: 2186.829 ops/ms
# Warmup Iteration   8: 2190.044 ops/ms
# Warmup Iteration   9: 2194.714 ops/ms
# Warmup Iteration  10: 2189.782 ops/ms
# Warmup Iteration  11: 2196.533 ops/ms
# Warmup Iteration  12: 2188.050 ops/ms
# Warmup Iteration  13: 2194.071 ops/ms
# Warmup Iteration  14: 2194.281 ops/ms
# Warmup Iteration  15: 2199.241 ops/ms
# Warmup Iteration  16: 2203.657 ops/ms
# Warmup Iteration  17: 2211.994 ops/ms
# Warmup Iteration  18: 2210.548 ops/ms
# Warmup Iteration  19: 2211.166 ops/ms
# Warmup Iteration  20: 2218.651 ops/ms
Iteration   1: 2215.252 ops/ms
Iteration   2: 2213.531 ops/ms
Iteration   3: 2219.430 ops/ms
Iteration   4: 2213.016 ops/ms
Iteration   5: 2214.508 ops/ms
Iteration   6: 2218.930 ops/ms
Iteration   7: 2221.807 ops/ms
Iteration   8: 2213.401 ops/ms
Iteration   9: 2200.974 ops/ms
Iteration  10: 2210.289 ops/ms
Iteration  11: 2217.379 ops/ms
Iteration  12: 2226.223 ops/ms
Iteration  13: 2204.765 ops/ms
Iteration  14: 2221.082 ops/ms
Iteration  15: 2208.784 ops/ms
Iteration  16: 2221.866 ops/ms
Iteration  17: 2213.526 ops/ms
Iteration  18: 2219.948 ops/ms
Iteration  19: 2221.216 ops/ms
Iteration  20: 2222.179 ops/ms

Result : 2215.905 ?(95%) 2.977 ?(99%) 4.070 ops/ms
  Statistics: (min, avg, max) = (2200.974, 2215.905, 2226.223), stdev = 6.361
  Confidence intervals: 95% [2212.928, 2218.882], 99% [2211.836, 2219.975]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 960.168 ops/ms
# Warmup Iteration   2: 1811.403 ops/ms
# Warmup Iteration   3: 1899.104 ops/ms
# Warmup Iteration   4: 1926.771 ops/ms
# Warmup Iteration   5: 1945.694 ops/ms
# Warmup Iteration   6: 1958.169 ops/ms
# Warmup Iteration   7: 1948.784 ops/ms
# Warmup Iteration   8: 1943.920 ops/ms
# Warmup Iteration   9: 1937.765 ops/ms
# Warmup Iteration  10: 1931.447 ops/ms
# Warmup Iteration  11: 1951.110 ops/ms
# Warmup Iteration  12: 1947.973 ops/ms
# Warmup Iteration  13: 1944.152 ops/ms
# Warmup Iteration  14: 1948.337 ops/ms
# Warmup Iteration  15: 1944.745 ops/ms
# Warmup Iteration  16: 1941.983 ops/ms
# Warmup Iteration  17: 1938.789 ops/ms
# Warmup Iteration  18: 1949.165 ops/ms
# Warmup Iteration  19: 1950.422 ops/ms
# Warmup Iteration  20: 1948.818 ops/ms
Iteration   1: 1950.251 ops/ms
Iteration   2: 1949.423 ops/ms
Iteration   3: 1947.754 ops/ms
Iteration   4: 1948.826 ops/ms
Iteration   5: 1955.451 ops/ms
Iteration   6: 1953.163 ops/ms
Iteration   7: 1954.507 ops/ms
Iteration   8: 1954.214 ops/ms
Iteration   9: 1948.046 ops/ms
Iteration  10: 1942.392 ops/ms
Iteration  11: 1946.277 ops/ms
Iteration  12: 1958.323 ops/ms
Iteration  13: 1949.807 ops/ms
Iteration  14: 1948.913 ops/ms
Iteration  15: 1948.257 ops/ms
Iteration  16: 1955.912 ops/ms
Iteration  17: 1955.439 ops/ms
Iteration  18: 1943.959 ops/ms
Iteration  19: 1953.807 ops/ms
Iteration  20: 1957.516 ops/ms

Result : 1951.112 ?(95%) 2.096 ?(99%) 2.865 ops/ms
  Statistics: (min, avg, max) = (1942.392, 1951.112, 1958.323), stdev = 4.478
  Confidence intervals: 95% [1949.016, 1953.207], 99% [1948.247, 1953.976]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1150.750 ops/ms
# Warmup Iteration   2: 2185.155 ops/ms
# Warmup Iteration   3: 2372.048 ops/ms
# Warmup Iteration   4: 2398.859 ops/ms
# Warmup Iteration   5: 2414.510 ops/ms
# Warmup Iteration   6: 2410.798 ops/ms
# Warmup Iteration   7: 2426.700 ops/ms
# Warmup Iteration   8: 2417.848 ops/ms
# Warmup Iteration   9: 2421.063 ops/ms
# Warmup Iteration  10: 2421.675 ops/ms
# Warmup Iteration  11: 2428.452 ops/ms
# Warmup Iteration  12: 2419.171 ops/ms
# Warmup Iteration  13: 2425.900 ops/ms
# Warmup Iteration  14: 2410.125 ops/ms
# Warmup Iteration  15: 2426.557 ops/ms
# Warmup Iteration  16: 2421.667 ops/ms
# Warmup Iteration  17: 2383.889 ops/ms
# Warmup Iteration  18: 2371.308 ops/ms
# Warmup Iteration  19: 2377.647 ops/ms
# Warmup Iteration  20: 2380.561 ops/ms
Iteration   1: 2380.861 ops/ms
Iteration   2: 2372.791 ops/ms
Iteration   3: 2380.642 ops/ms
Iteration   4: 2379.704 ops/ms
Iteration   5: 2375.717 ops/ms
Iteration   6: 2371.092 ops/ms
Iteration   7: 2372.601 ops/ms
Iteration   8: 2369.742 ops/ms
Iteration   9: 2378.667 ops/ms
Iteration  10: 2373.747 ops/ms
Iteration  11: 2380.909 ops/ms
Iteration  12: 2370.656 ops/ms
Iteration  13: 2370.863 ops/ms
Iteration  14: 2374.360 ops/ms
Iteration  15: 2381.940 ops/ms
Iteration  16: 2372.325 ops/ms
Iteration  17: 2381.683 ops/ms
Iteration  18: 2371.477 ops/ms
Iteration  19: 2364.292 ops/ms
Iteration  20: 2380.268 ops/ms

Result : 2375.217 ?(95%) 2.359 ?(99%) 3.224 ops/ms
  Statistics: (min, avg, max) = (2364.292, 2375.217, 2381.940), stdev = 5.040
  Confidence intervals: 95% [2372.858, 2377.575], 99% [2371.993, 2378.441]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1050.681 ops/ms
# Warmup Iteration   2: 1915.927 ops/ms
# Warmup Iteration   3: 2175.223 ops/ms
# Warmup Iteration   4: 2185.254 ops/ms
# Warmup Iteration   5: 2254.683 ops/ms
# Warmup Iteration   6: 2257.312 ops/ms
# Warmup Iteration   7: 2220.095 ops/ms
# Warmup Iteration   8: 2238.660 ops/ms
# Warmup Iteration   9: 2226.236 ops/ms
# Warmup Iteration  10: 2237.697 ops/ms
# Warmup Iteration  11: 2228.469 ops/ms
# Warmup Iteration  12: 2224.206 ops/ms
# Warmup Iteration  13: 2231.326 ops/ms
# Warmup Iteration  14: 2233.735 ops/ms
# Warmup Iteration  15: 2230.908 ops/ms
# Warmup Iteration  16: 2225.943 ops/ms
# Warmup Iteration  17: 2200.549 ops/ms
# Warmup Iteration  18: 2192.228 ops/ms
# Warmup Iteration  19: 2183.807 ops/ms
# Warmup Iteration  20: 2185.715 ops/ms
Iteration   1: 2195.576 ops/ms
Iteration   2: 2197.726 ops/ms
Iteration   3: 2184.299 ops/ms
Iteration   4: 2184.058 ops/ms
Iteration   5: 2183.610 ops/ms
Iteration   6: 2164.626 ops/ms
Iteration   7: 2179.855 ops/ms
Iteration   8: 2185.208 ops/ms
Iteration   9: 2198.013 ops/ms
Iteration  10: 2197.374 ops/ms
Iteration  11: 2187.927 ops/ms
Iteration  12: 2188.422 ops/ms
Iteration  13: 2192.537 ops/ms
Iteration  14: 2184.740 ops/ms
Iteration  15: 2193.278 ops/ms
Iteration  16: 2181.771 ops/ms
Iteration  17: 2194.893 ops/ms
Iteration  18: 2195.598 ops/ms
Iteration  19: 2191.517 ops/ms
Iteration  20: 2185.647 ops/ms

Result : 2188.334 ?(95%) 3.763 ?(99%) 5.143 ops/ms
  Statistics: (min, avg, max) = (2164.626, 2188.334, 2198.013), stdev = 8.040
  Confidence intervals: 95% [2184.571, 2192.096], 99% [2183.191, 2193.477]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.644 ops/ms
# Warmup Iteration   2: 99.499 ops/ms
# Warmup Iteration   3: 171.816 ops/ms
# Warmup Iteration   4: 175.045 ops/ms
# Warmup Iteration   5: 173.188 ops/ms
# Warmup Iteration   6: 173.779 ops/ms
# Warmup Iteration   7: 173.027 ops/ms
# Warmup Iteration   8: 158.457 ops/ms
# Warmup Iteration   9: 158.707 ops/ms
# Warmup Iteration  10: 173.287 ops/ms
# Warmup Iteration  11: 173.325 ops/ms
# Warmup Iteration  12: 173.324 ops/ms
# Warmup Iteration  13: 172.282 ops/ms
# Warmup Iteration  14: 172.713 ops/ms
# Warmup Iteration  15: 173.985 ops/ms
# Warmup Iteration  16: 172.760 ops/ms
# Warmup Iteration  17: 174.178 ops/ms
# Warmup Iteration  18: 175.700 ops/ms
# Warmup Iteration  19: 174.273 ops/ms
# Warmup Iteration  20: 172.874 ops/ms
Iteration   1: 174.754 ops/ms
Iteration   2: 174.728 ops/ms
Iteration   3: 175.351 ops/ms
Iteration   4: 174.285 ops/ms
Iteration   5: 174.709 ops/ms
Iteration   6: 174.801 ops/ms
Iteration   7: 174.814 ops/ms
Iteration   8: 173.788 ops/ms
Iteration   9: 174.258 ops/ms
Iteration  10: 174.160 ops/ms
Iteration  11: 175.701 ops/ms
Iteration  12: 174.868 ops/ms
Iteration  13: 174.056 ops/ms
Iteration  14: 174.725 ops/ms
Iteration  15: 172.602 ops/ms
Iteration  16: 170.799 ops/ms
Iteration  17: 168.648 ops/ms
Iteration  18: 170.770 ops/ms
Iteration  19: 169.261 ops/ms
Iteration  20: 171.274 ops/ms

Result : 173.418 ?(95%) 0.981 ?(99%) 1.341 ops/ms
  Statistics: (min, avg, max) = (168.648, 173.418, 175.701), stdev = 2.096
  Confidence intervals: 95% [172.436, 174.399], 99% [172.076, 174.759]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.124 ops/ms
# Warmup Iteration   2: 97.971 ops/ms
# Warmup Iteration   3: 165.138 ops/ms
# Warmup Iteration   4: 169.676 ops/ms
# Warmup Iteration   5: 171.010 ops/ms
# Warmup Iteration   6: 174.387 ops/ms
# Warmup Iteration   7: 176.409 ops/ms
# Warmup Iteration   8: 161.960 ops/ms
# Warmup Iteration   9: 161.665 ops/ms
# Warmup Iteration  10: 176.479 ops/ms
# Warmup Iteration  11: 175.208 ops/ms
# Warmup Iteration  12: 175.877 ops/ms
# Warmup Iteration  13: 174.273 ops/ms
# Warmup Iteration  14: 176.220 ops/ms
# Warmup Iteration  15: 175.401 ops/ms
# Warmup Iteration  16: 175.226 ops/ms
# Warmup Iteration  17: 175.375 ops/ms
# Warmup Iteration  18: 175.589 ops/ms
# Warmup Iteration  19: 176.838 ops/ms
# Warmup Iteration  20: 173.547 ops/ms
Iteration   1: 174.459 ops/ms
Iteration   2: 175.739 ops/ms
Iteration   3: 175.420 ops/ms
Iteration   4: 176.808 ops/ms
Iteration   5: 174.708 ops/ms
Iteration   6: 175.163 ops/ms
Iteration   7: 175.986 ops/ms
Iteration   8: 175.397 ops/ms
Iteration   9: 175.323 ops/ms
Iteration  10: 174.068 ops/ms
Iteration  11: 175.474 ops/ms
Iteration  12: 175.801 ops/ms
Iteration  13: 176.587 ops/ms
Iteration  14: 176.203 ops/ms
Iteration  15: 175.679 ops/ms
Iteration  16: 176.260 ops/ms
Iteration  17: 175.736 ops/ms
Iteration  18: 176.241 ops/ms
Iteration  19: 176.792 ops/ms
Iteration  20: 175.425 ops/ms

Result : 175.663 ?(95%) 0.340 ?(99%) 0.465 ops/ms
  Statistics: (min, avg, max) = (174.068, 175.663, 176.808), stdev = 0.727
  Confidence intervals: 95% [175.323, 176.004], 99% [175.198, 176.129]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 10.532 ops/ms
# Warmup Iteration   2: 100.176 ops/ms
# Warmup Iteration   3: 172.317 ops/ms
# Warmup Iteration   4: 176.378 ops/ms
# Warmup Iteration   5: 176.096 ops/ms
# Warmup Iteration   6: 175.033 ops/ms
# Warmup Iteration   7: 177.575 ops/ms
# Warmup Iteration   8: 162.937 ops/ms
# Warmup Iteration   9: 161.750 ops/ms
# Warmup Iteration  10: 175.176 ops/ms
# Warmup Iteration  11: 176.759 ops/ms
# Warmup Iteration  12: 176.771 ops/ms
# Warmup Iteration  13: 177.258 ops/ms
# Warmup Iteration  14: 175.641 ops/ms
# Warmup Iteration  15: 176.713 ops/ms
# Warmup Iteration  16: 176.735 ops/ms
# Warmup Iteration  17: 173.484 ops/ms
# Warmup Iteration  18: 174.502 ops/ms
# Warmup Iteration  19: 176.518 ops/ms
# Warmup Iteration  20: 175.492 ops/ms
Iteration   1: 175.932 ops/ms
Iteration   2: 175.774 ops/ms
Iteration   3: 174.686 ops/ms
Iteration   4: 175.592 ops/ms
Iteration   5: 175.664 ops/ms
Iteration   6: 174.459 ops/ms
Iteration   7: 175.212 ops/ms
Iteration   8: 176.555 ops/ms
Iteration   9: 175.926 ops/ms
Iteration  10: 174.536 ops/ms
Iteration  11: 175.672 ops/ms
Iteration  12: 175.622 ops/ms
Iteration  13: 175.119 ops/ms
Iteration  14: 174.765 ops/ms
Iteration  15: 175.325 ops/ms
Iteration  16: 175.623 ops/ms
Iteration  17: 175.508 ops/ms
Iteration  18: 175.732 ops/ms
Iteration  19: 174.147 ops/ms
Iteration  20: 176.291 ops/ms

Result : 175.407 ?(95%) 0.293 ?(99%) 0.401 ops/ms
  Statistics: (min, avg, max) = (174.147, 175.407, 176.555), stdev = 0.627
  Confidence intervals: 95% [175.114, 175.700], 99% [175.006, 175.808]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 11.049 ops/ms
# Warmup Iteration   2: 99.970 ops/ms
# Warmup Iteration   3: 169.924 ops/ms
# Warmup Iteration   4: 173.541 ops/ms
# Warmup Iteration   5: 175.059 ops/ms
# Warmup Iteration   6: 174.750 ops/ms
# Warmup Iteration   7: 174.293 ops/ms
# Warmup Iteration   8: 160.035 ops/ms
# Warmup Iteration   9: 160.689 ops/ms
# Warmup Iteration  10: 175.144 ops/ms
# Warmup Iteration  11: 174.919 ops/ms
# Warmup Iteration  12: 174.361 ops/ms
# Warmup Iteration  13: 175.271 ops/ms
# Warmup Iteration  14: 174.467 ops/ms
# Warmup Iteration  15: 173.313 ops/ms
# Warmup Iteration  16: 174.676 ops/ms
# Warmup Iteration  17: 175.426 ops/ms
# Warmup Iteration  18: 175.330 ops/ms
# Warmup Iteration  19: 174.674 ops/ms
# Warmup Iteration  20: 176.677 ops/ms
Iteration   1: 175.477 ops/ms
Iteration   2: 175.614 ops/ms
Iteration   3: 175.215 ops/ms
Iteration   4: 176.713 ops/ms
Iteration   5: 175.569 ops/ms
Iteration   6: 174.719 ops/ms
Iteration   7: 175.279 ops/ms
Iteration   8: 175.412 ops/ms
Iteration   9: 175.236 ops/ms
Iteration  10: 175.312 ops/ms
Iteration  11: 174.985 ops/ms
Iteration  12: 175.468 ops/ms
Iteration  13: 175.105 ops/ms
Iteration  14: 174.780 ops/ms
Iteration  15: 175.453 ops/ms
Iteration  16: 176.538 ops/ms
Iteration  17: 176.035 ops/ms
Iteration  18: 174.182 ops/ms
Iteration  19: 175.297 ops/ms
Iteration  20: 176.671 ops/ms

Result : 175.453 ?(95%) 0.299 ?(99%) 0.409 ops/ms
  Statistics: (min, avg, max) = (174.182, 175.453, 176.713), stdev = 0.639
  Confidence intervals: 95% [175.154, 175.752], 99% [175.044, 175.862]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 11.027 ops/ms
# Warmup Iteration   2: 96.349 ops/ms
# Warmup Iteration   3: 158.165 ops/ms
# Warmup Iteration   4: 164.530 ops/ms
# Warmup Iteration   5: 164.867 ops/ms
# Warmup Iteration   6: 164.131 ops/ms
# Warmup Iteration   7: 165.177 ops/ms
# Warmup Iteration   8: 150.205 ops/ms
# Warmup Iteration   9: 150.506 ops/ms
# Warmup Iteration  10: 165.470 ops/ms
# Warmup Iteration  11: 164.613 ops/ms
# Warmup Iteration  12: 164.642 ops/ms
# Warmup Iteration  13: 164.540 ops/ms
# Warmup Iteration  14: 164.112 ops/ms
# Warmup Iteration  15: 164.557 ops/ms
# Warmup Iteration  16: 164.453 ops/ms
# Warmup Iteration  17: 166.207 ops/ms
# Warmup Iteration  18: 165.662 ops/ms
# Warmup Iteration  19: 164.763 ops/ms
# Warmup Iteration  20: 164.910 ops/ms
Iteration   1: 165.267 ops/ms
Iteration   2: 164.771 ops/ms
Iteration   3: 166.093 ops/ms
Iteration   4: 164.806 ops/ms
Iteration   5: 165.649 ops/ms
Iteration   6: 166.374 ops/ms
Iteration   7: 165.435 ops/ms
Iteration   8: 165.815 ops/ms
Iteration   9: 165.248 ops/ms
Iteration  10: 166.225 ops/ms
Iteration  11: 164.514 ops/ms
Iteration  12: 164.433 ops/ms
Iteration  13: 164.987 ops/ms
Iteration  14: 166.100 ops/ms
Iteration  15: 165.657 ops/ms
Iteration  16: 165.381 ops/ms
Iteration  17: 165.543 ops/ms
Iteration  18: 165.309 ops/ms
Iteration  19: 165.600 ops/ms
Iteration  20: 165.052 ops/ms

Result : 165.413 ?(95%) 0.258 ?(99%) 0.352 ops/ms
  Statistics: (min, avg, max) = (164.433, 165.413, 166.374), stdev = 0.551
  Confidence intervals: 95% [165.155, 165.671], 99% [165.060, 165.765]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61480.851 ops/ms
# Warmup Iteration   2: 90239.523 ops/ms
# Warmup Iteration   3: 93443.679 ops/ms
# Warmup Iteration   4: 91063.922 ops/ms
# Warmup Iteration   5: 93106.830 ops/ms
# Warmup Iteration   6: 95240.168 ops/ms
# Warmup Iteration   7: 92790.513 ops/ms
# Warmup Iteration   8: 91841.221 ops/ms
# Warmup Iteration   9: 94076.176 ops/ms
# Warmup Iteration  10: 94886.868 ops/ms
# Warmup Iteration  11: 94602.558 ops/ms
# Warmup Iteration  12: 92428.293 ops/ms
# Warmup Iteration  13: 93833.842 ops/ms
# Warmup Iteration  14: 93762.608 ops/ms
# Warmup Iteration  15: 91814.240 ops/ms
# Warmup Iteration  16: 92126.264 ops/ms
# Warmup Iteration  17: 92503.369 ops/ms
# Warmup Iteration  18: 94057.874 ops/ms
# Warmup Iteration  19: 92000.486 ops/ms
# Warmup Iteration  20: 93421.978 ops/ms
Iteration   1: 94054.235 ops/ms
Iteration   2: 93349.337 ops/ms
Iteration   3: 93640.142 ops/ms
Iteration   4: 92784.290 ops/ms
Iteration   5: 91843.621 ops/ms
Iteration   6: 92625.892 ops/ms
Iteration   7: 93421.316 ops/ms
Iteration   8: 91740.820 ops/ms
Iteration   9: 93586.367 ops/ms
Iteration  10: 93659.401 ops/ms
Iteration  11: 93309.777 ops/ms
Iteration  12: 92746.846 ops/ms
Iteration  13: 91609.090 ops/ms
Iteration  14: 93503.375 ops/ms
Iteration  15: 92895.984 ops/ms
Iteration  16: 93011.024 ops/ms
Iteration  17: 92156.085 ops/ms
Iteration  18: 93637.487 ops/ms
Iteration  19: 93930.457 ops/ms
Iteration  20: 92270.387 ops/ms

Result : 92988.797 ?(95%) 349.266 ?(99%) 477.425 ops/ms
  Statistics: (min, avg, max) = (91609.090, 92988.797, 94054.235), stdev = 746.281
  Confidence intervals: 95% [92639.530, 93338.063], 99% [92511.372, 93466.222]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60442.095 ops/ms
# Warmup Iteration   2: 90312.128 ops/ms
# Warmup Iteration   3: 93055.342 ops/ms
# Warmup Iteration   4: 92727.148 ops/ms
# Warmup Iteration   5: 91712.453 ops/ms
# Warmup Iteration   6: 92668.977 ops/ms
# Warmup Iteration   7: 93244.240 ops/ms
# Warmup Iteration   8: 93813.206 ops/ms
# Warmup Iteration   9: 90807.279 ops/ms
# Warmup Iteration  10: 92849.238 ops/ms
# Warmup Iteration  11: 93265.985 ops/ms
# Warmup Iteration  12: 93469.567 ops/ms
# Warmup Iteration  13: 91195.343 ops/ms
# Warmup Iteration  14: 93467.555 ops/ms
# Warmup Iteration  15: 93767.551 ops/ms
# Warmup Iteration  16: 92524.022 ops/ms
# Warmup Iteration  17: 91559.309 ops/ms
# Warmup Iteration  18: 93362.554 ops/ms
# Warmup Iteration  19: 94034.930 ops/ms
# Warmup Iteration  20: 94241.764 ops/ms
Iteration   1: 93140.868 ops/ms
Iteration   2: 93125.681 ops/ms
Iteration   3: 93026.141 ops/ms
Iteration   4: 93093.397 ops/ms
Iteration   5: 93394.389 ops/ms
Iteration   6: 93052.318 ops/ms
Iteration   7: 92304.773 ops/ms
Iteration   8: 92929.759 ops/ms
Iteration   9: 93507.694 ops/ms
Iteration  10: 91172.042 ops/ms
Iteration  11: 94109.453 ops/ms
Iteration  12: 93375.446 ops/ms
Iteration  13: 94273.135 ops/ms
Iteration  14: 91154.614 ops/ms
Iteration  15: 93189.957 ops/ms
Iteration  16: 92673.443 ops/ms
Iteration  17: 92748.106 ops/ms
Iteration  18: 91194.186 ops/ms
Iteration  19: 94531.309 ops/ms
Iteration  20: 93924.744 ops/ms

Result : 92996.073 ?(95%) 447.301 ?(99%) 611.433 ops/ms
  Statistics: (min, avg, max) = (91154.614, 92996.073, 94531.309), stdev = 955.754
  Confidence intervals: 95% [92548.771, 93443.374], 99% [92384.640, 93607.506]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60720.817 ops/ms
# Warmup Iteration   2: 88238.902 ops/ms
# Warmup Iteration   3: 92937.983 ops/ms
# Warmup Iteration   4: 92490.254 ops/ms
# Warmup Iteration   5: 93738.045 ops/ms
# Warmup Iteration   6: 91362.748 ops/ms
# Warmup Iteration   7: 93852.500 ops/ms
# Warmup Iteration   8: 92988.560 ops/ms
# Warmup Iteration   9: 92293.150 ops/ms
# Warmup Iteration  10: 92503.962 ops/ms
# Warmup Iteration  11: 94622.869 ops/ms
# Warmup Iteration  12: 92549.335 ops/ms
# Warmup Iteration  13: 93408.257 ops/ms
# Warmup Iteration  14: 90878.313 ops/ms
# Warmup Iteration  15: 92941.934 ops/ms
# Warmup Iteration  16: 93042.947 ops/ms
# Warmup Iteration  17: 93467.819 ops/ms
# Warmup Iteration  18: 92393.516 ops/ms
# Warmup Iteration  19: 92612.173 ops/ms
# Warmup Iteration  20: 92349.279 ops/ms
Iteration   1: 93436.117 ops/ms
Iteration   2: 93264.254 ops/ms
Iteration   3: 92054.743 ops/ms
Iteration   4: 92732.574 ops/ms
Iteration   5: 92971.104 ops/ms
Iteration   6: 92913.646 ops/ms
Iteration   7: 91160.093 ops/ms
Iteration   8: 94032.427 ops/ms
Iteration   9: 93258.370 ops/ms
Iteration  10: 93134.946 ops/ms
Iteration  11: 91834.536 ops/ms
Iteration  12: 93578.270 ops/ms
Iteration  13: 93385.791 ops/ms
Iteration  14: 92247.111 ops/ms
Iteration  15: 92132.011 ops/ms
Iteration  16: 93498.431 ops/ms
Iteration  17: 94462.929 ops/ms
Iteration  18: 93072.114 ops/ms
Iteration  19: 91012.145 ops/ms
Iteration  20: 93650.236 ops/ms

Result : 92891.592 ?(95%) 422.225 ?(99%) 577.155 ops/ms
  Statistics: (min, avg, max) = (91012.145, 92891.592, 94462.929), stdev = 902.172
  Confidence intervals: 95% [92469.368, 93313.817], 99% [92314.437, 93468.747]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60285.519 ops/ms
# Warmup Iteration   2: 89747.539 ops/ms
# Warmup Iteration   3: 91425.725 ops/ms
# Warmup Iteration   4: 93124.261 ops/ms
# Warmup Iteration   5: 92590.004 ops/ms
# Warmup Iteration   6: 92595.777 ops/ms
# Warmup Iteration   7: 92382.879 ops/ms
# Warmup Iteration   8: 93749.065 ops/ms
# Warmup Iteration   9: 92845.570 ops/ms
# Warmup Iteration  10: 93081.203 ops/ms
# Warmup Iteration  11: 90613.512 ops/ms
# Warmup Iteration  12: 93343.122 ops/ms
# Warmup Iteration  13: 93963.233 ops/ms
# Warmup Iteration  14: 94597.835 ops/ms
# Warmup Iteration  15: 91443.841 ops/ms
# Warmup Iteration  16: 94150.266 ops/ms
# Warmup Iteration  17: 91850.851 ops/ms
# Warmup Iteration  18: 91105.180 ops/ms
# Warmup Iteration  19: 92342.788 ops/ms
# Warmup Iteration  20: 94053.563 ops/ms
Iteration   1: 93779.180 ops/ms
Iteration   2: 93440.991 ops/ms
Iteration   3: 93216.613 ops/ms
Iteration   4: 92168.808 ops/ms
Iteration   5: 93064.660 ops/ms
Iteration   6: 93948.703 ops/ms
Iteration   7: 91451.749 ops/ms
Iteration   8: 92744.348 ops/ms
Iteration   9: 93606.490 ops/ms
Iteration  10: 94234.282 ops/ms
Iteration  11: 93618.498 ops/ms
Iteration  12: 90943.596 ops/ms
Iteration  13: 93589.088 ops/ms
Iteration  14: 93116.280 ops/ms
Iteration  15: 93118.894 ops/ms
Iteration  16: 92924.988 ops/ms
Iteration  17: 92912.334 ops/ms
Iteration  18: 93979.716 ops/ms
Iteration  19: 93683.218 ops/ms
Iteration  20: 91583.241 ops/ms

Result : 93056.284 ?(95%) 418.147 ?(99%) 571.581 ops/ms
  Statistics: (min, avg, max) = (90943.596, 93056.284, 94234.282), stdev = 893.460
  Confidence intervals: 95% [92638.136, 93474.431], 99% [92484.703, 93627.865]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61100.165 ops/ms
# Warmup Iteration   2: 90133.034 ops/ms
# Warmup Iteration   3: 91561.272 ops/ms
# Warmup Iteration   4: 92081.100 ops/ms
# Warmup Iteration   5: 93212.694 ops/ms
# Warmup Iteration   6: 93444.687 ops/ms
# Warmup Iteration   7: 94442.251 ops/ms
# Warmup Iteration   8: 91746.321 ops/ms
# Warmup Iteration   9: 93539.248 ops/ms
# Warmup Iteration  10: 93173.349 ops/ms
# Warmup Iteration  11: 93988.512 ops/ms
# Warmup Iteration  12: 91779.789 ops/ms
# Warmup Iteration  13: 93867.781 ops/ms
# Warmup Iteration  14: 93585.960 ops/ms
# Warmup Iteration  15: 93650.695 ops/ms
# Warmup Iteration  16: 91364.564 ops/ms
# Warmup Iteration  17: 94997.024 ops/ms
# Warmup Iteration  18: 93539.159 ops/ms
# Warmup Iteration  19: 93543.467 ops/ms
# Warmup Iteration  20: 93139.648 ops/ms
Iteration   1: 92991.588 ops/ms
Iteration   2: 92337.091 ops/ms
Iteration   3: 94287.251 ops/ms
Iteration   4: 93512.616 ops/ms
Iteration   5: 92607.859 ops/ms
Iteration   6: 94094.815 ops/ms
Iteration   7: 92760.339 ops/ms
Iteration   8: 92100.806 ops/ms
Iteration   9: 92429.316 ops/ms
Iteration  10: 92615.429 ops/ms
Iteration  11: 92933.924 ops/ms
Iteration  12: 92626.653 ops/ms
Iteration  13: 91833.633 ops/ms
Iteration  14: 93567.731 ops/ms
Iteration  15: 93927.015 ops/ms
Iteration  16: 93391.352 ops/ms
Iteration  17: 90627.033 ops/ms
Iteration  18: 93034.476 ops/ms
Iteration  19: 93307.830 ops/ms
Iteration  20: 93191.671 ops/ms

Result : 92908.921 ?(95%) 394.322 ?(99%) 539.014 ops/ms
  Statistics: (min, avg, max) = (90627.033, 92908.921, 94287.251), stdev = 842.553
  Confidence intervals: 95% [92514.599, 93303.244], 99% [92369.907, 93447.935]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.417 ops/ms
# Warmup Iteration   2: 30.526 ops/ms
# Warmup Iteration   3: 37.126 ops/ms
# Warmup Iteration   4: 40.371 ops/ms
# Warmup Iteration   5: 41.583 ops/ms
# Warmup Iteration   6: 41.692 ops/ms
# Warmup Iteration   7: 42.888 ops/ms
# Warmup Iteration   8: 43.502 ops/ms
# Warmup Iteration   9: 43.570 ops/ms
# Warmup Iteration  10: 43.720 ops/ms
# Warmup Iteration  11: 43.624 ops/ms
# Warmup Iteration  12: 42.423 ops/ms
# Warmup Iteration  13: 43.335 ops/ms
# Warmup Iteration  14: 43.851 ops/ms
# Warmup Iteration  15: 43.894 ops/ms
# Warmup Iteration  16: 43.818 ops/ms
# Warmup Iteration  17: 43.574 ops/ms
# Warmup Iteration  18: 43.940 ops/ms
# Warmup Iteration  19: 43.759 ops/ms
# Warmup Iteration  20: 43.722 ops/ms
Iteration   1: 43.828 ops/ms
Iteration   2: 43.756 ops/ms
Iteration   3: 44.019 ops/ms
Iteration   4: 44.010 ops/ms
Iteration   5: 43.842 ops/ms
Iteration   6: 44.027 ops/ms
Iteration   7: 43.998 ops/ms
Iteration   8: 43.615 ops/ms
Iteration   9: 43.793 ops/ms
Iteration  10: 43.651 ops/ms
Iteration  11: 43.718 ops/ms
Iteration  12: 43.728 ops/ms
Iteration  13: 43.706 ops/ms
Iteration  14: 43.962 ops/ms
Iteration  15: 44.038 ops/ms
Iteration  16: 43.711 ops/ms
Iteration  17: 43.948 ops/ms
Iteration  18: 43.911 ops/ms
Iteration  19: 43.757 ops/ms
Iteration  20: 44.058 ops/ms

Result : 43.854 ?(95%) 0.068 ?(99%) 0.093 ops/ms
  Statistics: (min, avg, max) = (43.615, 43.854, 44.058), stdev = 0.145
  Confidence intervals: 95% [43.786, 43.922], 99% [43.761, 43.947]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.114 ops/ms
# Warmup Iteration   2: 30.172 ops/ms
# Warmup Iteration   3: 36.905 ops/ms
# Warmup Iteration   4: 40.771 ops/ms
# Warmup Iteration   5: 42.185 ops/ms
# Warmup Iteration   6: 42.517 ops/ms
# Warmup Iteration   7: 42.646 ops/ms
# Warmup Iteration   8: 42.592 ops/ms
# Warmup Iteration   9: 42.811 ops/ms
# Warmup Iteration  10: 42.572 ops/ms
# Warmup Iteration  11: 42.632 ops/ms
# Warmup Iteration  12: 42.653 ops/ms
# Warmup Iteration  13: 42.839 ops/ms
# Warmup Iteration  14: 42.433 ops/ms
# Warmup Iteration  15: 42.533 ops/ms
# Warmup Iteration  16: 42.514 ops/ms
# Warmup Iteration  17: 42.363 ops/ms
# Warmup Iteration  18: 42.434 ops/ms
# Warmup Iteration  19: 42.569 ops/ms
# Warmup Iteration  20: 42.904 ops/ms
Iteration   1: 42.820 ops/ms
Iteration   2: 42.619 ops/ms
Iteration   3: 42.900 ops/ms
Iteration   4: 42.964 ops/ms
Iteration   5: 42.966 ops/ms
Iteration   6: 42.387 ops/ms
Iteration   7: 42.777 ops/ms
Iteration   8: 42.920 ops/ms
Iteration   9: 42.965 ops/ms
Iteration  10: 42.584 ops/ms
Iteration  11: 42.883 ops/ms
Iteration  12: 42.690 ops/ms
Iteration  13: 42.831 ops/ms
Iteration  14: 42.658 ops/ms
Iteration  15: 42.759 ops/ms
Iteration  16: 42.846 ops/ms
Iteration  17: 42.517 ops/ms
Iteration  18: 42.979 ops/ms
Iteration  19: 42.575 ops/ms
Iteration  20: 42.901 ops/ms

Result : 42.777 ?(95%) 0.081 ?(99%) 0.110 ops/ms
  Statistics: (min, avg, max) = (42.387, 42.777, 42.979), stdev = 0.172
  Confidence intervals: 95% [42.696, 42.858], 99% [42.667, 42.887]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.340 ops/ms
# Warmup Iteration   2: 30.028 ops/ms
# Warmup Iteration   3: 37.115 ops/ms
# Warmup Iteration   4: 41.142 ops/ms
# Warmup Iteration   5: 42.520 ops/ms
# Warmup Iteration   6: 43.029 ops/ms
# Warmup Iteration   7: 43.236 ops/ms
# Warmup Iteration   8: 43.170 ops/ms
# Warmup Iteration   9: 43.279 ops/ms
# Warmup Iteration  10: 43.138 ops/ms
# Warmup Iteration  11: 43.233 ops/ms
# Warmup Iteration  12: 43.097 ops/ms
# Warmup Iteration  13: 43.349 ops/ms
# Warmup Iteration  14: 43.102 ops/ms
# Warmup Iteration  15: 42.949 ops/ms
# Warmup Iteration  16: 43.032 ops/ms
# Warmup Iteration  17: 43.029 ops/ms
# Warmup Iteration  18: 43.173 ops/ms
# Warmup Iteration  19: 43.187 ops/ms
# Warmup Iteration  20: 43.211 ops/ms
Iteration   1: 43.113 ops/ms
Iteration   2: 43.052 ops/ms
Iteration   3: 43.108 ops/ms
Iteration   4: 43.298 ops/ms
Iteration   5: 43.317 ops/ms
Iteration   6: 43.334 ops/ms
Iteration   7: 43.153 ops/ms
Iteration   8: 43.273 ops/ms
Iteration   9: 43.263 ops/ms
Iteration  10: 43.269 ops/ms
Iteration  11: 43.133 ops/ms
Iteration  12: 43.243 ops/ms
Iteration  13: 43.292 ops/ms
Iteration  14: 43.354 ops/ms
Iteration  15: 43.104 ops/ms
Iteration  16: 43.238 ops/ms
Iteration  17: 43.101 ops/ms
Iteration  18: 43.367 ops/ms
Iteration  19: 43.083 ops/ms
Iteration  20: 43.308 ops/ms

Result : 43.220 ?(95%) 0.048 ?(99%) 0.066 ops/ms
  Statistics: (min, avg, max) = (43.052, 43.220, 43.367), stdev = 0.102
  Confidence intervals: 95% [43.172, 43.268], 99% [43.155, 43.286]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.223 ops/ms
# Warmup Iteration   2: 30.336 ops/ms
# Warmup Iteration   3: 37.024 ops/ms
# Warmup Iteration   4: 40.961 ops/ms
# Warmup Iteration   5: 42.185 ops/ms
# Warmup Iteration   6: 42.455 ops/ms
# Warmup Iteration   7: 42.544 ops/ms
# Warmup Iteration   8: 42.430 ops/ms
# Warmup Iteration   9: 42.654 ops/ms
# Warmup Iteration  10: 42.650 ops/ms
# Warmup Iteration  11: 42.617 ops/ms
# Warmup Iteration  12: 42.577 ops/ms
# Warmup Iteration  13: 42.793 ops/ms
# Warmup Iteration  14: 42.852 ops/ms
# Warmup Iteration  15: 42.536 ops/ms
# Warmup Iteration  16: 42.726 ops/ms
# Warmup Iteration  17: 42.424 ops/ms
# Warmup Iteration  18: 42.656 ops/ms
# Warmup Iteration  19: 42.702 ops/ms
# Warmup Iteration  20: 42.514 ops/ms
Iteration   1: 42.574 ops/ms
Iteration   2: 42.529 ops/ms
Iteration   3: 42.771 ops/ms
Iteration   4: 42.529 ops/ms
Iteration   5: 42.384 ops/ms
Iteration   6: 42.772 ops/ms
Iteration   7: 42.809 ops/ms
Iteration   8: 42.372 ops/ms
Iteration   9: 42.717 ops/ms
Iteration  10: 42.757 ops/ms
Iteration  11: 42.714 ops/ms
Iteration  12: 42.504 ops/ms
Iteration  13: 42.742 ops/ms
Iteration  14: 42.558 ops/ms
Iteration  15: 42.746 ops/ms
Iteration  16: 42.628 ops/ms
Iteration  17: 42.435 ops/ms
Iteration  18: 42.492 ops/ms
Iteration  19: 42.725 ops/ms
Iteration  20: 42.744 ops/ms

Result : 42.625 ?(95%) 0.066 ?(99%) 0.090 ops/ms
  Statistics: (min, avg, max) = (42.372, 42.625, 42.809), stdev = 0.141
  Confidence intervals: 95% [42.559, 42.691], 99% [42.535, 42.716]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.233 ops/ms
# Warmup Iteration   2: 30.584 ops/ms
# Warmup Iteration   3: 37.688 ops/ms
# Warmup Iteration   4: 41.789 ops/ms
# Warmup Iteration   5: 43.090 ops/ms
# Warmup Iteration   6: 43.513 ops/ms
# Warmup Iteration   7: 43.619 ops/ms
# Warmup Iteration   8: 43.817 ops/ms
# Warmup Iteration   9: 43.804 ops/ms
# Warmup Iteration  10: 43.824 ops/ms
# Warmup Iteration  11: 43.682 ops/ms
# Warmup Iteration  12: 43.655 ops/ms
# Warmup Iteration  13: 43.637 ops/ms
# Warmup Iteration  14: 43.653 ops/ms
# Warmup Iteration  15: 43.850 ops/ms
# Warmup Iteration  16: 43.670 ops/ms
# Warmup Iteration  17: 43.804 ops/ms
# Warmup Iteration  18: 43.982 ops/ms
# Warmup Iteration  19: 43.759 ops/ms
# Warmup Iteration  20: 43.756 ops/ms
Iteration   1: 43.613 ops/ms
Iteration   2: 43.982 ops/ms
Iteration   3: 43.818 ops/ms
Iteration   4: 43.959 ops/ms
Iteration   5: 43.651 ops/ms
Iteration   6: 43.808 ops/ms
Iteration   7: 44.024 ops/ms
Iteration   8: 43.997 ops/ms
Iteration   9: 43.825 ops/ms
Iteration  10: 43.945 ops/ms
Iteration  11: 43.936 ops/ms
Iteration  12: 43.438 ops/ms
Iteration  13: 43.608 ops/ms
Iteration  14: 43.916 ops/ms
Iteration  15: 43.920 ops/ms
Iteration  16: 43.986 ops/ms
Iteration  17: 44.005 ops/ms
Iteration  18: 43.972 ops/ms
Iteration  19: 44.013 ops/ms
Iteration  20: 43.573 ops/ms

Result : 43.849 ?(95%) 0.083 ?(99%) 0.113 ops/ms
  Statistics: (min, avg, max) = (43.438, 43.849, 44.024), stdev = 0.177
  Confidence intervals: 95% [43.767, 43.932], 99% [43.736, 43.963]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.632 ops/ms
# Warmup Iteration   2: 12.961 ops/ms
# Warmup Iteration   3: 16.021 ops/ms
# Warmup Iteration   4: 17.641 ops/ms
# Warmup Iteration   5: 17.946 ops/ms
# Warmup Iteration   6: 18.096 ops/ms
# Warmup Iteration   7: 18.195 ops/ms
# Warmup Iteration   8: 18.168 ops/ms
# Warmup Iteration   9: 18.133 ops/ms
# Warmup Iteration  10: 18.103 ops/ms
# Warmup Iteration  11: 18.216 ops/ms
# Warmup Iteration  12: 18.230 ops/ms
# Warmup Iteration  13: 18.070 ops/ms
# Warmup Iteration  14: 18.101 ops/ms
# Warmup Iteration  15: 18.236 ops/ms
# Warmup Iteration  16: 18.230 ops/ms
# Warmup Iteration  17: 18.200 ops/ms
# Warmup Iteration  18: 18.197 ops/ms
# Warmup Iteration  19: 18.210 ops/ms
# Warmup Iteration  20: 18.125 ops/ms
Iteration   1: 18.204 ops/ms
Iteration   2: 18.164 ops/ms
Iteration   3: 18.170 ops/ms
Iteration   4: 18.131 ops/ms
Iteration   5: 18.112 ops/ms
Iteration   6: 18.157 ops/ms
Iteration   7: 18.207 ops/ms
Iteration   8: 18.061 ops/ms
Iteration   9: 18.219 ops/ms
Iteration  10: 18.056 ops/ms
Iteration  11: 18.142 ops/ms
Iteration  12: 18.138 ops/ms
Iteration  13: 18.133 ops/ms
Iteration  14: 18.224 ops/ms
Iteration  15: 18.117 ops/ms
Iteration  16: 18.167 ops/ms
Iteration  17: 18.212 ops/ms
Iteration  18: 18.169 ops/ms
Iteration  19: 18.114 ops/ms
Iteration  20: 18.210 ops/ms

Result : 18.155 ?(95%) 0.023 ?(99%) 0.031 ops/ms
  Statistics: (min, avg, max) = (18.056, 18.155, 18.224), stdev = 0.049
  Confidence intervals: 95% [18.132, 18.178], 99% [18.124, 18.187]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.662 ops/ms
# Warmup Iteration   2: 12.990 ops/ms
# Warmup Iteration   3: 15.992 ops/ms
# Warmup Iteration   4: 17.576 ops/ms
# Warmup Iteration   5: 17.974 ops/ms
# Warmup Iteration   6: 18.006 ops/ms
# Warmup Iteration   7: 18.015 ops/ms
# Warmup Iteration   8: 18.098 ops/ms
# Warmup Iteration   9: 17.932 ops/ms
# Warmup Iteration  10: 18.117 ops/ms
# Warmup Iteration  11: 18.150 ops/ms
# Warmup Iteration  12: 18.166 ops/ms
# Warmup Iteration  13: 18.142 ops/ms
# Warmup Iteration  14: 18.079 ops/ms
# Warmup Iteration  15: 18.067 ops/ms
# Warmup Iteration  16: 18.089 ops/ms
# Warmup Iteration  17: 18.065 ops/ms
# Warmup Iteration  18: 18.133 ops/ms
# Warmup Iteration  19: 18.069 ops/ms
# Warmup Iteration  20: 18.079 ops/ms
Iteration   1: 18.102 ops/ms
Iteration   2: 18.178 ops/ms
Iteration   3: 17.978 ops/ms
Iteration   4: 18.038 ops/ms
Iteration   5: 18.144 ops/ms
Iteration   6: 18.083 ops/ms
Iteration   7: 18.138 ops/ms
Iteration   8: 18.095 ops/ms
Iteration   9: 18.176 ops/ms
Iteration  10: 18.155 ops/ms
Iteration  11: 18.095 ops/ms
Iteration  12: 18.124 ops/ms
Iteration  13: 18.051 ops/ms
Iteration  14: 18.135 ops/ms
Iteration  15: 18.059 ops/ms
Iteration  16: 18.145 ops/ms
Iteration  17: 18.143 ops/ms
Iteration  18: 18.153 ops/ms
Iteration  19: 18.095 ops/ms
Iteration  20: 18.133 ops/ms

Result : 18.111 ?(95%) 0.024 ?(99%) 0.032 ops/ms
  Statistics: (min, avg, max) = (17.978, 18.111, 18.178), stdev = 0.051
  Confidence intervals: 95% [18.087, 18.135], 99% [18.079, 18.143]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.651 ops/ms
# Warmup Iteration   2: 12.980 ops/ms
# Warmup Iteration   3: 15.923 ops/ms
# Warmup Iteration   4: 17.444 ops/ms
# Warmup Iteration   5: 17.923 ops/ms
# Warmup Iteration   6: 18.024 ops/ms
# Warmup Iteration   7: 18.120 ops/ms
# Warmup Iteration   8: 18.114 ops/ms
# Warmup Iteration   9: 18.089 ops/ms
# Warmup Iteration  10: 18.188 ops/ms
# Warmup Iteration  11: 18.057 ops/ms
# Warmup Iteration  12: 18.107 ops/ms
# Warmup Iteration  13: 18.181 ops/ms
# Warmup Iteration  14: 18.075 ops/ms
# Warmup Iteration  15: 18.126 ops/ms
# Warmup Iteration  16: 18.099 ops/ms
# Warmup Iteration  17: 18.162 ops/ms
# Warmup Iteration  18: 18.167 ops/ms
# Warmup Iteration  19: 18.176 ops/ms
# Warmup Iteration  20: 18.175 ops/ms
Iteration   1: 18.134 ops/ms
Iteration   2: 18.110 ops/ms
Iteration   3: 18.070 ops/ms
Iteration   4: 18.131 ops/ms
Iteration   5: 18.118 ops/ms
Iteration   6: 18.179 ops/ms
Iteration   7: 18.195 ops/ms
Iteration   8: 18.035 ops/ms
Iteration   9: 17.986 ops/ms
Iteration  10: 18.167 ops/ms
Iteration  11: 18.130 ops/ms
Iteration  12: 17.995 ops/ms
Iteration  13: 18.168 ops/ms
Iteration  14: 17.978 ops/ms
Iteration  15: 18.145 ops/ms
Iteration  16: 18.104 ops/ms
Iteration  17: 18.168 ops/ms
Iteration  18: 18.203 ops/ms
Iteration  19: 18.207 ops/ms
Iteration  20: 18.141 ops/ms

Result : 18.118 ?(95%) 0.033 ?(99%) 0.045 ops/ms
  Statistics: (min, avg, max) = (17.978, 18.118, 18.207), stdev = 0.071
  Confidence intervals: 95% [18.085, 18.151], 99% [18.073, 18.164]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.663 ops/ms
# Warmup Iteration   2: 13.121 ops/ms
# Warmup Iteration   3: 16.164 ops/ms
# Warmup Iteration   4: 17.612 ops/ms
# Warmup Iteration   5: 18.088 ops/ms
# Warmup Iteration   6: 18.189 ops/ms
# Warmup Iteration   7: 18.282 ops/ms
# Warmup Iteration   8: 18.148 ops/ms
# Warmup Iteration   9: 18.223 ops/ms
# Warmup Iteration  10: 18.206 ops/ms
# Warmup Iteration  11: 18.297 ops/ms
# Warmup Iteration  12: 18.140 ops/ms
# Warmup Iteration  13: 18.276 ops/ms
# Warmup Iteration  14: 18.298 ops/ms
# Warmup Iteration  15: 18.231 ops/ms
# Warmup Iteration  16: 18.244 ops/ms
# Warmup Iteration  17: 18.083 ops/ms
# Warmup Iteration  18: 18.230 ops/ms
# Warmup Iteration  19: 18.139 ops/ms
# Warmup Iteration  20: 18.189 ops/ms
Iteration   1: 18.207 ops/ms
Iteration   2: 18.287 ops/ms
Iteration   3: 18.270 ops/ms
Iteration   4: 18.223 ops/ms
Iteration   5: 18.231 ops/ms
Iteration   6: 18.258 ops/ms
Iteration   7: 18.283 ops/ms
Iteration   8: 18.256 ops/ms
Iteration   9: 18.236 ops/ms
Iteration  10: 18.290 ops/ms
Iteration  11: 18.205 ops/ms
Iteration  12: 18.193 ops/ms
Iteration  13: 18.131 ops/ms
Iteration  14: 18.281 ops/ms
Iteration  15: 18.296 ops/ms
Iteration  16: 18.214 ops/ms
Iteration  17: 18.116 ops/ms
Iteration  18: 18.263 ops/ms
Iteration  19: 18.214 ops/ms
Iteration  20: 18.205 ops/ms

Result : 18.233 ?(95%) 0.023 ?(99%) 0.032 ops/ms
  Statistics: (min, avg, max) = (18.116, 18.233, 18.296), stdev = 0.050
  Confidence intervals: 95% [18.210, 18.256], 99% [18.201, 18.265]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.574 ops/ms
# Warmup Iteration   2: 12.965 ops/ms
# Warmup Iteration   3: 16.017 ops/ms
# Warmup Iteration   4: 17.551 ops/ms
# Warmup Iteration   5: 17.961 ops/ms
# Warmup Iteration   6: 18.031 ops/ms
# Warmup Iteration   7: 18.083 ops/ms
# Warmup Iteration   8: 18.078 ops/ms
# Warmup Iteration   9: 18.099 ops/ms
# Warmup Iteration  10: 18.141 ops/ms
# Warmup Iteration  11: 18.079 ops/ms
# Warmup Iteration  12: 18.039 ops/ms
# Warmup Iteration  13: 17.962 ops/ms
# Warmup Iteration  14: 18.039 ops/ms
# Warmup Iteration  15: 18.040 ops/ms
# Warmup Iteration  16: 18.054 ops/ms
# Warmup Iteration  17: 18.032 ops/ms
# Warmup Iteration  18: 18.119 ops/ms
# Warmup Iteration  19: 18.077 ops/ms
# Warmup Iteration  20: 18.072 ops/ms
Iteration   1: 18.089 ops/ms
Iteration   2: 18.121 ops/ms
Iteration   3: 18.157 ops/ms
Iteration   4: 18.162 ops/ms
Iteration   5: 18.021 ops/ms
Iteration   6: 18.007 ops/ms
Iteration   7: 18.150 ops/ms
Iteration   8: 17.879 ops/ms
Iteration   9: 17.404 ops/ms
Iteration  10: 17.262 ops/ms
Iteration  11: 17.150 ops/ms
Iteration  12: 17.799 ops/ms
Iteration  13: 17.954 ops/ms
Iteration  14: 17.948 ops/ms
Iteration  15: 17.981 ops/ms
Iteration  16: 17.845 ops/ms
Iteration  17: 17.793 ops/ms
Iteration  18: 17.435 ops/ms
Iteration  19: 18.012 ops/ms
Iteration  20: 18.090 ops/ms

Result : 17.863 ?(95%) 0.144 ?(99%) 0.197 ops/ms
  Statistics: (min, avg, max) = (17.150, 17.863, 18.162), stdev = 0.308
  Confidence intervals: 95% [17.719, 18.007], 99% [17.666, 18.060]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.230 ops/ms
# Warmup Iteration   2: 62.657 ops/ms
# Warmup Iteration   3: 76.766 ops/ms
# Warmup Iteration   4: 82.678 ops/ms
# Warmup Iteration   5: 83.689 ops/ms
# Warmup Iteration   6: 84.525 ops/ms
# Warmup Iteration   7: 84.170 ops/ms
# Warmup Iteration   8: 85.003 ops/ms
# Warmup Iteration   9: 84.970 ops/ms
# Warmup Iteration  10: 84.363 ops/ms
# Warmup Iteration  11: 84.635 ops/ms
# Warmup Iteration  12: 85.115 ops/ms
# Warmup Iteration  13: 83.925 ops/ms
# Warmup Iteration  14: 84.029 ops/ms
# Warmup Iteration  15: 85.136 ops/ms
# Warmup Iteration  16: 85.075 ops/ms
# Warmup Iteration  17: 84.630 ops/ms
# Warmup Iteration  18: 84.645 ops/ms
# Warmup Iteration  19: 85.205 ops/ms
# Warmup Iteration  20: 84.665 ops/ms
Iteration   1: 84.410 ops/ms
Iteration   2: 84.305 ops/ms
Iteration   3: 84.458 ops/ms
Iteration   4: 84.307 ops/ms
Iteration   5: 84.888 ops/ms
Iteration   6: 84.228 ops/ms
Iteration   7: 85.068 ops/ms
Iteration   8: 85.173 ops/ms
Iteration   9: 83.223 ops/ms
Iteration  10: 84.313 ops/ms
Iteration  11: 85.125 ops/ms
Iteration  12: 85.050 ops/ms
Iteration  13: 84.787 ops/ms
Iteration  14: 85.236 ops/ms
Iteration  15: 85.358 ops/ms
Iteration  16: 84.696 ops/ms
Iteration  17: 85.130 ops/ms
Iteration  18: 84.863 ops/ms
Iteration  19: 84.337 ops/ms
Iteration  20: 85.168 ops/ms

Result : 84.706 ?(95%) 0.240 ?(99%) 0.328 ops/ms
  Statistics: (min, avg, max) = (83.223, 84.706, 85.358), stdev = 0.513
  Confidence intervals: 95% [84.466, 84.946], 99% [84.378, 85.034]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.285 ops/ms
# Warmup Iteration   2: 63.777 ops/ms
# Warmup Iteration   3: 77.342 ops/ms
# Warmup Iteration   4: 83.648 ops/ms
# Warmup Iteration   5: 85.666 ops/ms
# Warmup Iteration   6: 86.277 ops/ms
# Warmup Iteration   7: 85.817 ops/ms
# Warmup Iteration   8: 86.347 ops/ms
# Warmup Iteration   9: 86.454 ops/ms
# Warmup Iteration  10: 86.584 ops/ms
# Warmup Iteration  11: 86.397 ops/ms
# Warmup Iteration  12: 86.312 ops/ms
# Warmup Iteration  13: 86.414 ops/ms
# Warmup Iteration  14: 86.679 ops/ms
# Warmup Iteration  15: 86.041 ops/ms
# Warmup Iteration  16: 86.302 ops/ms
# Warmup Iteration  17: 86.221 ops/ms
# Warmup Iteration  18: 86.430 ops/ms
# Warmup Iteration  19: 86.131 ops/ms
# Warmup Iteration  20: 86.224 ops/ms
Iteration   1: 86.687 ops/ms
Iteration   2: 86.439 ops/ms
Iteration   3: 86.389 ops/ms
Iteration   4: 85.645 ops/ms
Iteration   5: 86.183 ops/ms
Iteration   6: 86.335 ops/ms
Iteration   7: 85.205 ops/ms
Iteration   8: 86.244 ops/ms
Iteration   9: 86.753 ops/ms
Iteration  10: 86.339 ops/ms
Iteration  11: 86.215 ops/ms
Iteration  12: 86.089 ops/ms
Iteration  13: 86.760 ops/ms
Iteration  14: 86.404 ops/ms
Iteration  15: 86.770 ops/ms
Iteration  16: 86.028 ops/ms
Iteration  17: 86.306 ops/ms
Iteration  18: 86.816 ops/ms
Iteration  19: 86.664 ops/ms
Iteration  20: 86.298 ops/ms

Result : 86.328 ?(95%) 0.185 ?(99%) 0.253 ops/ms
  Statistics: (min, avg, max) = (85.205, 86.328, 86.816), stdev = 0.396
  Confidence intervals: 95% [86.143, 86.514], 99% [86.075, 86.582]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.639 ops/ms
# Warmup Iteration   2: 63.507 ops/ms
# Warmup Iteration   3: 78.315 ops/ms
# Warmup Iteration   4: 84.615 ops/ms
# Warmup Iteration   5: 86.888 ops/ms
# Warmup Iteration   6: 87.621 ops/ms
# Warmup Iteration   7: 87.651 ops/ms
# Warmup Iteration   8: 86.961 ops/ms
# Warmup Iteration   9: 87.648 ops/ms
# Warmup Iteration  10: 87.508 ops/ms
# Warmup Iteration  11: 87.823 ops/ms
# Warmup Iteration  12: 87.386 ops/ms
# Warmup Iteration  13: 87.595 ops/ms
# Warmup Iteration  14: 87.695 ops/ms
# Warmup Iteration  15: 87.318 ops/ms
# Warmup Iteration  16: 87.475 ops/ms
# Warmup Iteration  17: 87.969 ops/ms
# Warmup Iteration  18: 87.918 ops/ms
# Warmup Iteration  19: 87.625 ops/ms
# Warmup Iteration  20: 87.275 ops/ms
Iteration   1: 87.655 ops/ms
Iteration   2: 87.631 ops/ms
Iteration   3: 88.037 ops/ms
Iteration   4: 87.235 ops/ms
Iteration   5: 87.506 ops/ms
Iteration   6: 87.090 ops/ms
Iteration   7: 88.084 ops/ms
Iteration   8: 87.406 ops/ms
Iteration   9: 87.968 ops/ms
Iteration  10: 87.690 ops/ms
Iteration  11: 88.171 ops/ms
Iteration  12: 87.730 ops/ms
Iteration  13: 87.979 ops/ms
Iteration  14: 88.149 ops/ms
Iteration  15: 87.921 ops/ms
Iteration  16: 88.114 ops/ms
Iteration  17: 87.917 ops/ms
Iteration  18: 88.020 ops/ms
Iteration  19: 87.640 ops/ms
Iteration  20: 87.928 ops/ms

Result : 87.794 ?(95%) 0.144 ?(99%) 0.197 ops/ms
  Statistics: (min, avg, max) = (87.090, 87.794, 88.171), stdev = 0.308
  Confidence intervals: 95% [87.649, 87.938], 99% [87.596, 87.991]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.957 ops/ms
# Warmup Iteration   2: 63.527 ops/ms
# Warmup Iteration   3: 77.187 ops/ms
# Warmup Iteration   4: 83.719 ops/ms
# Warmup Iteration   5: 85.948 ops/ms
# Warmup Iteration   6: 86.831 ops/ms
# Warmup Iteration   7: 86.812 ops/ms
# Warmup Iteration   8: 85.671 ops/ms
# Warmup Iteration   9: 86.542 ops/ms
# Warmup Iteration  10: 86.791 ops/ms
# Warmup Iteration  11: 87.107 ops/ms
# Warmup Iteration  12: 87.131 ops/ms
# Warmup Iteration  13: 86.689 ops/ms
# Warmup Iteration  14: 86.974 ops/ms
# Warmup Iteration  15: 87.043 ops/ms
# Warmup Iteration  16: 87.185 ops/ms
# Warmup Iteration  17: 86.159 ops/ms
# Warmup Iteration  18: 86.770 ops/ms
# Warmup Iteration  19: 86.738 ops/ms
# Warmup Iteration  20: 85.841 ops/ms
Iteration   1: 86.153 ops/ms
Iteration   2: 86.973 ops/ms
Iteration   3: 86.935 ops/ms
Iteration   4: 86.088 ops/ms
Iteration   5: 86.175 ops/ms
Iteration   6: 86.742 ops/ms
Iteration   7: 86.904 ops/ms
Iteration   8: 86.882 ops/ms
Iteration   9: 86.571 ops/ms
Iteration  10: 86.527 ops/ms
Iteration  11: 86.606 ops/ms
Iteration  12: 86.605 ops/ms
Iteration  13: 86.796 ops/ms
Iteration  14: 86.446 ops/ms
Iteration  15: 87.040 ops/ms
Iteration  16: 86.771 ops/ms
Iteration  17: 86.865 ops/ms
Iteration  18: 86.470 ops/ms
Iteration  19: 86.895 ops/ms
Iteration  20: 86.468 ops/ms

Result : 86.646 ?(95%) 0.133 ?(99%) 0.181 ops/ms
  Statistics: (min, avg, max) = (86.088, 86.646, 87.040), stdev = 0.283
  Confidence intervals: 95% [86.513, 86.778], 99% [86.464, 86.827]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.029 ops/ms
# Warmup Iteration   2: 63.758 ops/ms
# Warmup Iteration   3: 78.194 ops/ms
# Warmup Iteration   4: 84.452 ops/ms
# Warmup Iteration   5: 86.513 ops/ms
# Warmup Iteration   6: 86.789 ops/ms
# Warmup Iteration   7: 87.296 ops/ms
# Warmup Iteration   8: 87.442 ops/ms
# Warmup Iteration   9: 87.361 ops/ms
# Warmup Iteration  10: 86.620 ops/ms
# Warmup Iteration  11: 87.191 ops/ms
# Warmup Iteration  12: 87.176 ops/ms
# Warmup Iteration  13: 86.931 ops/ms
# Warmup Iteration  14: 87.256 ops/ms
# Warmup Iteration  15: 87.514 ops/ms
# Warmup Iteration  16: 87.511 ops/ms
# Warmup Iteration  17: 86.937 ops/ms
# Warmup Iteration  18: 86.884 ops/ms
# Warmup Iteration  19: 87.429 ops/ms
# Warmup Iteration  20: 87.407 ops/ms
Iteration   1: 87.158 ops/ms
Iteration   2: 87.105 ops/ms
Iteration   3: 86.735 ops/ms
Iteration   4: 87.575 ops/ms
Iteration   5: 87.232 ops/ms
Iteration   6: 86.407 ops/ms
Iteration   7: 87.084 ops/ms
Iteration   8: 86.997 ops/ms
Iteration   9: 87.587 ops/ms
Iteration  10: 87.553 ops/ms
Iteration  11: 87.415 ops/ms
Iteration  12: 87.593 ops/ms
Iteration  13: 87.175 ops/ms
Iteration  14: 87.030 ops/ms
Iteration  15: 87.515 ops/ms
Iteration  16: 87.576 ops/ms
Iteration  17: 87.377 ops/ms
Iteration  18: 87.648 ops/ms
Iteration  19: 86.888 ops/ms
Iteration  20: 87.056 ops/ms

Result : 87.235 ?(95%) 0.156 ?(99%) 0.214 ops/ms
  Statistics: (min, avg, max) = (86.407, 87.235, 87.648), stdev = 0.334
  Confidence intervals: 95% [87.079, 87.392], 99% [87.022, 87.449]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 33473.838 ops/ms
# Warmup Iteration   2: 44526.137 ops/ms
# Warmup Iteration   3: 51761.016 ops/ms
# Warmup Iteration   4: 52297.500 ops/ms
# Warmup Iteration   5: 52577.180 ops/ms
# Warmup Iteration   6: 52129.259 ops/ms
# Warmup Iteration   7: 52331.904 ops/ms
# Warmup Iteration   8: 52802.683 ops/ms
# Warmup Iteration   9: 53015.605 ops/ms
# Warmup Iteration  10: 51952.361 ops/ms
# Warmup Iteration  11: 52637.323 ops/ms
# Warmup Iteration  12: 52510.559 ops/ms
# Warmup Iteration  13: 53411.810 ops/ms
# Warmup Iteration  14: 54076.237 ops/ms
# Warmup Iteration  15: 52391.200 ops/ms
# Warmup Iteration  16: 53428.883 ops/ms
# Warmup Iteration  17: 53386.253 ops/ms
# Warmup Iteration  18: 53205.068 ops/ms
# Warmup Iteration  19: 53305.930 ops/ms
# Warmup Iteration  20: 53694.014 ops/ms
Iteration   1: 53931.815 ops/ms
Iteration   2: 53391.065 ops/ms
Iteration   3: 52840.603 ops/ms
Iteration   4: 53050.738 ops/ms
Iteration   5: 52903.125 ops/ms
Iteration   6: 53527.833 ops/ms
Iteration   7: 52643.978 ops/ms
Iteration   8: 53454.356 ops/ms
Iteration   9: 53539.368 ops/ms
Iteration  10: 53428.387 ops/ms
Iteration  11: 52476.289 ops/ms
Iteration  12: 53787.001 ops/ms
Iteration  13: 52998.768 ops/ms
Iteration  14: 53397.074 ops/ms
Iteration  15: 52866.316 ops/ms
Iteration  16: 53315.630 ops/ms
Iteration  17: 52874.415 ops/ms
Iteration  18: 53298.554 ops/ms
Iteration  19: 52352.010 ops/ms
Iteration  20: 53128.578 ops/ms

Result : 53160.295 ?(95%) 196.254 ?(99%) 268.267 ops/ms
  Statistics: (min, avg, max) = (52352.010, 53160.295, 53931.815), stdev = 419.339
  Confidence intervals: 95% [52964.041, 53356.549], 99% [52892.028, 53428.562]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35578.987 ops/ms
# Warmup Iteration   2: 49317.359 ops/ms
# Warmup Iteration   3: 51936.938 ops/ms
# Warmup Iteration   4: 52871.207 ops/ms
# Warmup Iteration   5: 52871.874 ops/ms
# Warmup Iteration   6: 52765.616 ops/ms
# Warmup Iteration   7: 52027.826 ops/ms
# Warmup Iteration   8: 53390.473 ops/ms
# Warmup Iteration   9: 52535.920 ops/ms
# Warmup Iteration  10: 53658.412 ops/ms
# Warmup Iteration  11: 52358.110 ops/ms
# Warmup Iteration  12: 52464.940 ops/ms
# Warmup Iteration  13: 53037.106 ops/ms
# Warmup Iteration  14: 53468.428 ops/ms
# Warmup Iteration  15: 53077.370 ops/ms
# Warmup Iteration  16: 52276.540 ops/ms
# Warmup Iteration  17: 51980.066 ops/ms
# Warmup Iteration  18: 52388.276 ops/ms
# Warmup Iteration  19: 52986.732 ops/ms
# Warmup Iteration  20: 53009.141 ops/ms
Iteration   1: 52669.297 ops/ms
Iteration   2: 53118.190 ops/ms
Iteration   3: 52950.803 ops/ms
Iteration   4: 53029.781 ops/ms
Iteration   5: 53116.359 ops/ms
Iteration   6: 52746.819 ops/ms
Iteration   7: 53164.001 ops/ms
Iteration   8: 52678.408 ops/ms
Iteration   9: 52869.464 ops/ms
Iteration  10: 53303.711 ops/ms
Iteration  11: 52685.615 ops/ms
Iteration  12: 52349.659 ops/ms
Iteration  13: 53249.517 ops/ms
Iteration  14: 52951.720 ops/ms
Iteration  15: 52732.740 ops/ms
Iteration  16: 52648.237 ops/ms
Iteration  17: 53397.996 ops/ms
Iteration  18: 53106.331 ops/ms
Iteration  19: 52783.334 ops/ms
Iteration  20: 52949.956 ops/ms

Result : 52925.097 ?(95%) 123.933 ?(99%) 169.409 ops/ms
  Statistics: (min, avg, max) = (52349.659, 52925.097, 53397.996), stdev = 264.810
  Confidence intervals: 95% [52801.163, 53049.030], 99% [52755.688, 53094.506]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35090.253 ops/ms
# Warmup Iteration   2: 49940.663 ops/ms
# Warmup Iteration   3: 52850.078 ops/ms
# Warmup Iteration   4: 52159.725 ops/ms
# Warmup Iteration   5: 52453.900 ops/ms
# Warmup Iteration   6: 52361.327 ops/ms
# Warmup Iteration   7: 52816.914 ops/ms
# Warmup Iteration   8: 51904.268 ops/ms
# Warmup Iteration   9: 52670.527 ops/ms
# Warmup Iteration  10: 52619.654 ops/ms
# Warmup Iteration  11: 52648.026 ops/ms
# Warmup Iteration  12: 53135.957 ops/ms
# Warmup Iteration  13: 52564.661 ops/ms
# Warmup Iteration  14: 52719.484 ops/ms
# Warmup Iteration  15: 52904.889 ops/ms
# Warmup Iteration  16: 53036.109 ops/ms
# Warmup Iteration  17: 53258.122 ops/ms
# Warmup Iteration  18: 53182.378 ops/ms
# Warmup Iteration  19: 53092.188 ops/ms
# Warmup Iteration  20: 52486.099 ops/ms
Iteration   1: 52367.615 ops/ms
Iteration   2: 53354.439 ops/ms
Iteration   3: 53038.114 ops/ms
Iteration   4: 53010.389 ops/ms
Iteration   5: 52271.904 ops/ms
Iteration   6: 52683.909 ops/ms
Iteration   7: 53020.077 ops/ms
Iteration   8: 52890.174 ops/ms
Iteration   9: 52262.286 ops/ms
Iteration  10: 52734.192 ops/ms
Iteration  11: 52778.784 ops/ms
Iteration  12: 52472.262 ops/ms
Iteration  13: 51858.588 ops/ms
Iteration  14: 52522.036 ops/ms
Iteration  15: 52667.021 ops/ms
Iteration  16: 52458.719 ops/ms
Iteration  17: 52236.926 ops/ms
Iteration  18: 52803.590 ops/ms
Iteration  19: 52608.387 ops/ms
Iteration  20: 52810.793 ops/ms

Result : 52642.510 ?(95%) 162.871 ?(99%) 222.635 ops/ms
  Statistics: (min, avg, max) = (51858.588, 52642.510, 53354.439), stdev = 348.009
  Confidence intervals: 95% [52479.639, 52805.381], 99% [52419.875, 52865.145]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 34734.256 ops/ms
# Warmup Iteration   2: 49905.566 ops/ms
# Warmup Iteration   3: 52651.774 ops/ms
# Warmup Iteration   4: 52969.710 ops/ms
# Warmup Iteration   5: 53027.691 ops/ms
# Warmup Iteration   6: 53596.317 ops/ms
# Warmup Iteration   7: 52977.760 ops/ms
# Warmup Iteration   8: 52939.099 ops/ms
# Warmup Iteration   9: 52368.410 ops/ms
# Warmup Iteration  10: 52583.763 ops/ms
# Warmup Iteration  11: 53057.096 ops/ms
# Warmup Iteration  12: 53257.569 ops/ms
# Warmup Iteration  13: 52110.751 ops/ms
# Warmup Iteration  14: 52669.376 ops/ms
# Warmup Iteration  15: 53289.369 ops/ms
# Warmup Iteration  16: 52589.088 ops/ms
# Warmup Iteration  17: 52798.880 ops/ms
# Warmup Iteration  18: 52420.215 ops/ms
# Warmup Iteration  19: 53067.838 ops/ms
# Warmup Iteration  20: 52623.993 ops/ms
Iteration   1: 52767.298 ops/ms
Iteration   2: 52413.464 ops/ms
Iteration   3: 53255.478 ops/ms
Iteration   4: 53062.604 ops/ms
Iteration   5: 52840.017 ops/ms
Iteration   6: 52450.003 ops/ms
Iteration   7: 52961.990 ops/ms
Iteration   8: 53081.393 ops/ms
Iteration   9: 53407.386 ops/ms
Iteration  10: 52135.370 ops/ms
Iteration  11: 53024.929 ops/ms
Iteration  12: 53701.523 ops/ms
Iteration  13: 53638.064 ops/ms
Iteration  14: 52773.540 ops/ms
Iteration  15: 52925.918 ops/ms
Iteration  16: 52701.133 ops/ms
Iteration  17: 53270.434 ops/ms
Iteration  18: 52693.346 ops/ms
Iteration  19: 53326.863 ops/ms
Iteration  20: 52969.028 ops/ms

Result : 52969.989 ?(95%) 186.587 ?(99%) 255.053 ops/ms
  Statistics: (min, avg, max) = (52135.370, 52969.989, 53701.523), stdev = 398.682
  Confidence intervals: 95% [52783.402, 53156.576], 99% [52714.937, 53225.042]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 34750.182 ops/ms
# Warmup Iteration   2: 49537.573 ops/ms
# Warmup Iteration   3: 52948.190 ops/ms
# Warmup Iteration   4: 52545.878 ops/ms
# Warmup Iteration   5: 53468.483 ops/ms
# Warmup Iteration   6: 52367.438 ops/ms
# Warmup Iteration   7: 52578.156 ops/ms
# Warmup Iteration   8: 52900.339 ops/ms
# Warmup Iteration   9: 52615.082 ops/ms
# Warmup Iteration  10: 52424.472 ops/ms
# Warmup Iteration  11: 52244.800 ops/ms
# Warmup Iteration  12: 52921.569 ops/ms
# Warmup Iteration  13: 52787.173 ops/ms
# Warmup Iteration  14: 52499.226 ops/ms
# Warmup Iteration  15: 52280.389 ops/ms
# Warmup Iteration  16: 52538.597 ops/ms
# Warmup Iteration  17: 51738.623 ops/ms
# Warmup Iteration  18: 53415.063 ops/ms
# Warmup Iteration  19: 53057.660 ops/ms
# Warmup Iteration  20: 53403.141 ops/ms
Iteration   1: 53205.677 ops/ms
Iteration   2: 52719.496 ops/ms
Iteration   3: 52459.409 ops/ms
Iteration   4: 52931.676 ops/ms
Iteration   5: 52517.221 ops/ms
Iteration   6: 52617.129 ops/ms
Iteration   7: 52879.464 ops/ms
Iteration   8: 52948.386 ops/ms
Iteration   9: 53257.815 ops/ms
Iteration  10: 53162.715 ops/ms
Iteration  11: 51878.314 ops/ms
Iteration  12: 52933.178 ops/ms
Iteration  13: 53200.011 ops/ms
Iteration  14: 52611.334 ops/ms
Iteration  15: 53265.537 ops/ms
Iteration  16: 52879.936 ops/ms
Iteration  17: 52905.350 ops/ms
Iteration  18: 53068.136 ops/ms
Iteration  19: 52388.741 ops/ms
Iteration  20: 52596.846 ops/ms

Result : 52821.319 ?(95%) 164.858 ?(99%) 225.350 ops/ms
  Statistics: (min, avg, max) = (51878.314, 52821.319, 53265.537), stdev = 352.253
  Confidence intervals: 95% [52656.461, 52986.176], 99% [52595.969, 53046.669]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 442.536 ops/ms
# Warmup Iteration   2: 662.228 ops/ms
# Warmup Iteration   3: 700.687 ops/ms
# Warmup Iteration   4: 704.268 ops/ms
# Warmup Iteration   5: 701.172 ops/ms
# Warmup Iteration   6: 705.549 ops/ms
# Warmup Iteration   7: 635.188 ops/ms
# Warmup Iteration   8: 683.971 ops/ms
# Warmup Iteration   9: 705.474 ops/ms
# Warmup Iteration  10: 705.892 ops/ms
# Warmup Iteration  11: 700.690 ops/ms
# Warmup Iteration  12: 708.203 ops/ms
# Warmup Iteration  13: 706.372 ops/ms
# Warmup Iteration  14: 706.596 ops/ms
# Warmup Iteration  15: 703.661 ops/ms
# Warmup Iteration  16: 708.784 ops/ms
# Warmup Iteration  17: 703.071 ops/ms
# Warmup Iteration  18: 706.038 ops/ms
# Warmup Iteration  19: 705.851 ops/ms
# Warmup Iteration  20: 705.932 ops/ms
Iteration   1: 708.659 ops/ms
Iteration   2: 704.626 ops/ms
Iteration   3: 702.550 ops/ms
Iteration   4: 700.947 ops/ms
Iteration   5: 705.644 ops/ms
Iteration   6: 703.194 ops/ms
Iteration   7: 706.536 ops/ms
Iteration   8: 702.751 ops/ms
Iteration   9: 707.746 ops/ms
Iteration  10: 705.355 ops/ms
Iteration  11: 703.537 ops/ms
Iteration  12: 699.904 ops/ms
Iteration  13: 705.576 ops/ms
Iteration  14: 703.534 ops/ms
Iteration  15: 703.021 ops/ms
Iteration  16: 702.318 ops/ms
Iteration  17: 704.906 ops/ms
Iteration  18: 704.950 ops/ms
Iteration  19: 702.266 ops/ms
Iteration  20: 703.118 ops/ms

Result : 704.057 ?(95%) 1.017 ?(99%) 1.390 ops/ms
  Statistics: (min, avg, max) = (699.904, 704.057, 708.659), stdev = 2.172
  Confidence intervals: 95% [703.040, 705.073], 99% [702.667, 705.446]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 435.430 ops/ms
# Warmup Iteration   2: 642.142 ops/ms
# Warmup Iteration   3: 687.594 ops/ms
# Warmup Iteration   4: 680.256 ops/ms
# Warmup Iteration   5: 684.669 ops/ms
# Warmup Iteration   6: 685.098 ops/ms
# Warmup Iteration   7: 630.153 ops/ms
# Warmup Iteration   8: 665.613 ops/ms
# Warmup Iteration   9: 684.942 ops/ms
# Warmup Iteration  10: 690.333 ops/ms
# Warmup Iteration  11: 682.586 ops/ms
# Warmup Iteration  12: 686.168 ops/ms
# Warmup Iteration  13: 686.287 ops/ms
# Warmup Iteration  14: 687.495 ops/ms
# Warmup Iteration  15: 684.915 ops/ms
# Warmup Iteration  16: 682.896 ops/ms
# Warmup Iteration  17: 695.232 ops/ms
# Warmup Iteration  18: 690.912 ops/ms
# Warmup Iteration  19: 692.705 ops/ms
# Warmup Iteration  20: 687.031 ops/ms
Iteration   1: 692.407 ops/ms
Iteration   2: 689.332 ops/ms
Iteration   3: 693.413 ops/ms
Iteration   4: 691.029 ops/ms
Iteration   5: 692.509 ops/ms
Iteration   6: 690.279 ops/ms
Iteration   7: 695.941 ops/ms
Iteration   8: 686.518 ops/ms
Iteration   9: 692.357 ops/ms
Iteration  10: 696.270 ops/ms
Iteration  11: 692.710 ops/ms
Iteration  12: 695.847 ops/ms
Iteration  13: 692.835 ops/ms
Iteration  14: 695.884 ops/ms
Iteration  15: 691.572 ops/ms
Iteration  16: 688.718 ops/ms
Iteration  17: 691.716 ops/ms
Iteration  18: 693.693 ops/ms
Iteration  19: 692.736 ops/ms
Iteration  20: 692.689 ops/ms

Result : 692.423 ?(95%) 1.175 ?(99%) 1.607 ops/ms
  Statistics: (min, avg, max) = (686.518, 692.423, 696.270), stdev = 2.511
  Confidence intervals: 95% [691.247, 693.598], 99% [690.816, 694.029]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 436.645 ops/ms
# Warmup Iteration   2: 636.612 ops/ms
# Warmup Iteration   3: 674.950 ops/ms
# Warmup Iteration   4: 673.789 ops/ms
# Warmup Iteration   5: 669.504 ops/ms
# Warmup Iteration   6: 678.427 ops/ms
# Warmup Iteration   7: 615.857 ops/ms
# Warmup Iteration   8: 643.662 ops/ms
# Warmup Iteration   9: 649.588 ops/ms
# Warmup Iteration  10: 641.615 ops/ms
# Warmup Iteration  11: 663.247 ops/ms
# Warmup Iteration  12: 672.452 ops/ms
# Warmup Iteration  13: 676.207 ops/ms
# Warmup Iteration  14: 677.826 ops/ms
# Warmup Iteration  15: 676.913 ops/ms
# Warmup Iteration  16: 660.789 ops/ms
# Warmup Iteration  17: 671.282 ops/ms
# Warmup Iteration  18: 673.786 ops/ms
# Warmup Iteration  19: 678.158 ops/ms
# Warmup Iteration  20: 677.738 ops/ms
Iteration   1: 674.823 ops/ms
Iteration   2: 677.403 ops/ms
Iteration   3: 680.401 ops/ms
Iteration   4: 677.173 ops/ms
Iteration   5: 673.514 ops/ms
Iteration   6: 672.370 ops/ms
Iteration   7: 674.990 ops/ms
Iteration   8: 678.928 ops/ms
Iteration   9: 674.880 ops/ms
Iteration  10: 676.767 ops/ms
Iteration  11: 679.587 ops/ms
Iteration  12: 666.181 ops/ms
Iteration  13: 676.008 ops/ms
Iteration  14: 674.847 ops/ms
Iteration  15: 676.855 ops/ms
Iteration  16: 680.999 ops/ms
Iteration  17: 675.384 ops/ms
Iteration  18: 677.376 ops/ms
Iteration  19: 678.990 ops/ms
Iteration  20: 680.779 ops/ms

Result : 676.413 ?(95%) 1.599 ?(99%) 2.186 ops/ms
  Statistics: (min, avg, max) = (666.181, 676.413, 680.999), stdev = 3.417
  Confidence intervals: 95% [674.813, 678.012], 99% [674.226, 678.599]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 437.691 ops/ms
# Warmup Iteration   2: 635.815 ops/ms
# Warmup Iteration   3: 680.401 ops/ms
# Warmup Iteration   4: 678.364 ops/ms
# Warmup Iteration   5: 678.527 ops/ms
# Warmup Iteration   6: 678.168 ops/ms
# Warmup Iteration   7: 622.188 ops/ms
# Warmup Iteration   8: 662.519 ops/ms
# Warmup Iteration   9: 678.747 ops/ms
# Warmup Iteration  10: 678.091 ops/ms
# Warmup Iteration  11: 681.830 ops/ms
# Warmup Iteration  12: 681.624 ops/ms
# Warmup Iteration  13: 681.623 ops/ms
# Warmup Iteration  14: 678.995 ops/ms
# Warmup Iteration  15: 680.371 ops/ms
# Warmup Iteration  16: 679.410 ops/ms
# Warmup Iteration  17: 684.794 ops/ms
# Warmup Iteration  18: 684.621 ops/ms
# Warmup Iteration  19: 691.160 ops/ms
# Warmup Iteration  20: 683.722 ops/ms
Iteration   1: 686.114 ops/ms
Iteration   2: 680.205 ops/ms
Iteration   3: 690.185 ops/ms
Iteration   4: 688.055 ops/ms
Iteration   5: 686.665 ops/ms
Iteration   6: 685.860 ops/ms
Iteration   7: 686.792 ops/ms
Iteration   8: 685.194 ops/ms
Iteration   9: 686.805 ops/ms
Iteration  10: 685.824 ops/ms
Iteration  11: 690.478 ops/ms
Iteration  12: 684.122 ops/ms
Iteration  13: 690.320 ops/ms
Iteration  14: 687.444 ops/ms
Iteration  15: 686.458 ops/ms
Iteration  16: 685.590 ops/ms
Iteration  17: 687.843 ops/ms
Iteration  18: 685.459 ops/ms
Iteration  19: 686.576 ops/ms
Iteration  20: 684.851 ops/ms

Result : 686.542 ?(95%) 1.084 ?(99%) 1.482 ops/ms
  Statistics: (min, avg, max) = (680.205, 686.542, 690.478), stdev = 2.316
  Confidence intervals: 95% [685.458, 687.626], 99% [685.060, 688.024]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 443.861 ops/ms
# Warmup Iteration   2: 647.865 ops/ms
# Warmup Iteration   3: 687.144 ops/ms
# Warmup Iteration   4: 684.649 ops/ms
# Warmup Iteration   5: 684.319 ops/ms
# Warmup Iteration   6: 687.588 ops/ms
# Warmup Iteration   7: 626.957 ops/ms
# Warmup Iteration   8: 667.134 ops/ms
# Warmup Iteration   9: 681.328 ops/ms
# Warmup Iteration  10: 685.788 ops/ms
# Warmup Iteration  11: 685.915 ops/ms
# Warmup Iteration  12: 687.851 ops/ms
# Warmup Iteration  13: 686.578 ops/ms
# Warmup Iteration  14: 689.167 ops/ms
# Warmup Iteration  15: 686.605 ops/ms
# Warmup Iteration  16: 689.809 ops/ms
# Warmup Iteration  17: 689.251 ops/ms
# Warmup Iteration  18: 687.971 ops/ms
# Warmup Iteration  19: 694.613 ops/ms
# Warmup Iteration  20: 693.042 ops/ms
Iteration   1: 695.578 ops/ms
Iteration   2: 692.414 ops/ms
Iteration   3: 692.233 ops/ms
Iteration   4: 695.759 ops/ms
Iteration   5: 694.972 ops/ms
Iteration   6: 697.882 ops/ms
Iteration   7: 696.891 ops/ms
Iteration   8: 697.904 ops/ms
Iteration   9: 698.443 ops/ms
Iteration  10: 696.924 ops/ms
Iteration  11: 697.383 ops/ms
Iteration  12: 692.650 ops/ms
Iteration  13: 698.397 ops/ms
Iteration  14: 698.186 ops/ms
Iteration  15: 695.393 ops/ms
Iteration  16: 697.117 ops/ms
Iteration  17: 698.190 ops/ms
Iteration  18: 694.154 ops/ms
Iteration  19: 694.165 ops/ms
Iteration  20: 689.712 ops/ms

Result : 695.717 ?(95%) 1.166 ?(99%) 1.594 ops/ms
  Statistics: (min, avg, max) = (689.712, 695.717, 698.443), stdev = 2.491
  Confidence intervals: 95% [694.552, 696.883], 99% [694.124, 697.311]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 2945.646 ops/ms
# Warmup Iteration   2: 3644.501 ops/ms
# Warmup Iteration   3: 3807.135 ops/ms
# Warmup Iteration   4: 3818.325 ops/ms
# Warmup Iteration   5: 3826.265 ops/ms
# Warmup Iteration   6: 3837.567 ops/ms
# Warmup Iteration   7: 3823.486 ops/ms
# Warmup Iteration   8: 3829.891 ops/ms
# Warmup Iteration   9: 3851.865 ops/ms
# Warmup Iteration  10: 3811.844 ops/ms
# Warmup Iteration  11: 3835.854 ops/ms
# Warmup Iteration  12: 3814.389 ops/ms
# Warmup Iteration  13: 3828.691 ops/ms
# Warmup Iteration  14: 3831.121 ops/ms
# Warmup Iteration  15: 3829.794 ops/ms
# Warmup Iteration  16: 3827.201 ops/ms
# Warmup Iteration  17: 3732.152 ops/ms
# Warmup Iteration  18: 3752.508 ops/ms
# Warmup Iteration  19: 3742.890 ops/ms
# Warmup Iteration  20: 3728.072 ops/ms
Iteration   1: 3751.167 ops/ms
Iteration   2: 3765.360 ops/ms
Iteration   3: 3739.960 ops/ms
Iteration   4: 3732.488 ops/ms
Iteration   5: 3743.407 ops/ms
Iteration   6: 3743.197 ops/ms
Iteration   7: 3744.507 ops/ms
Iteration   8: 3716.108 ops/ms
Iteration   9: 3744.985 ops/ms
Iteration  10: 3753.207 ops/ms
Iteration  11: 3746.037 ops/ms
Iteration  12: 3721.549 ops/ms
Iteration  13: 3756.745 ops/ms
Iteration  14: 3743.201 ops/ms
Iteration  15: 3731.379 ops/ms
Iteration  16: 3718.553 ops/ms
Iteration  17: 3726.527 ops/ms
Iteration  18: 3728.747 ops/ms
Iteration  19: 3727.580 ops/ms
Iteration  20: 3732.286 ops/ms

Result : 3738.350 ?(95%) 6.173 ?(99%) 8.438 ops/ms
  Statistics: (min, avg, max) = (3716.108, 3738.350, 3765.360), stdev = 13.190
  Confidence intervals: 95% [3732.176, 3744.523], 99% [3729.911, 3746.788]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 2955.164 ops/ms
# Warmup Iteration   2: 3663.960 ops/ms
# Warmup Iteration   3: 3763.944 ops/ms
# Warmup Iteration   4: 3754.718 ops/ms
# Warmup Iteration   5: 3794.101 ops/ms
# Warmup Iteration   6: 3818.272 ops/ms
# Warmup Iteration   7: 3836.952 ops/ms
# Warmup Iteration   8: 3819.081 ops/ms
# Warmup Iteration   9: 3847.871 ops/ms
# Warmup Iteration  10: 3851.677 ops/ms
# Warmup Iteration  11: 3831.834 ops/ms
# Warmup Iteration  12: 3850.463 ops/ms
# Warmup Iteration  13: 3811.841 ops/ms
# Warmup Iteration  14: 3855.053 ops/ms
# Warmup Iteration  15: 3827.046 ops/ms
# Warmup Iteration  16: 3841.817 ops/ms
# Warmup Iteration  17: 3845.011 ops/ms
# Warmup Iteration  18: 3843.456 ops/ms
# Warmup Iteration  19: 3849.075 ops/ms
# Warmup Iteration  20: 3830.010 ops/ms
Iteration   1: 3838.932 ops/ms
Iteration   2: 3827.468 ops/ms
Iteration   3: 3823.820 ops/ms
Iteration   4: 3826.351 ops/ms
Iteration   5: 3842.476 ops/ms
Iteration   6: 3838.654 ops/ms
Iteration   7: 3837.518 ops/ms
Iteration   8: 3841.379 ops/ms
Iteration   9: 3843.168 ops/ms
Iteration  10: 3820.962 ops/ms
Iteration  11: 3854.638 ops/ms
Iteration  12: 3841.704 ops/ms
Iteration  13: 3818.029 ops/ms
Iteration  14: 3825.465 ops/ms
Iteration  15: 3826.213 ops/ms
Iteration  16: 3838.423 ops/ms
Iteration  17: 3829.771 ops/ms
Iteration  18: 3833.579 ops/ms
Iteration  19: 3841.159 ops/ms
Iteration  20: 3841.443 ops/ms

Result : 3834.558 ?(95%) 4.368 ?(99%) 5.971 ops/ms
  Statistics: (min, avg, max) = (3818.029, 3834.558, 3854.638), stdev = 9.334
  Confidence intervals: 95% [3830.189, 3838.926], 99% [3828.586, 3840.529]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 2929.773 ops/ms
# Warmup Iteration   2: 3675.503 ops/ms
# Warmup Iteration   3: 3784.371 ops/ms
# Warmup Iteration   4: 3762.202 ops/ms
# Warmup Iteration   5: 3776.298 ops/ms
# Warmup Iteration   6: 3804.081 ops/ms
# Warmup Iteration   7: 3854.222 ops/ms
# Warmup Iteration   8: 3858.564 ops/ms
# Warmup Iteration   9: 3839.925 ops/ms
# Warmup Iteration  10: 3856.032 ops/ms
# Warmup Iteration  11: 3834.704 ops/ms
# Warmup Iteration  12: 3833.748 ops/ms
# Warmup Iteration  13: 3833.277 ops/ms
# Warmup Iteration  14: 3858.590 ops/ms
# Warmup Iteration  15: 3842.423 ops/ms
# Warmup Iteration  16: 3811.978 ops/ms
# Warmup Iteration  17: 3843.907 ops/ms
# Warmup Iteration  18: 3830.301 ops/ms
# Warmup Iteration  19: 3836.307 ops/ms
# Warmup Iteration  20: 3817.976 ops/ms
Iteration   1: 3826.259 ops/ms
Iteration   2: 3822.106 ops/ms
Iteration   3: 3832.260 ops/ms
Iteration   4: 3826.287 ops/ms
Iteration   5: 3839.602 ops/ms
Iteration   6: 3817.056 ops/ms
Iteration   7: 3823.710 ops/ms
Iteration   8: 3839.746 ops/ms
Iteration   9: 3812.534 ops/ms
Iteration  10: 3819.960 ops/ms
Iteration  11: 3839.506 ops/ms
Iteration  12: 3826.858 ops/ms
Iteration  13: 3818.693 ops/ms
Iteration  14: 3822.131 ops/ms
Iteration  15: 3824.853 ops/ms
Iteration  16: 3815.212 ops/ms
Iteration  17: 3815.758 ops/ms
Iteration  18: 3832.734 ops/ms
Iteration  19: 3823.218 ops/ms
Iteration  20: 3842.711 ops/ms

Result : 3826.060 ?(95%) 4.211 ?(99%) 5.756 ops/ms
  Statistics: (min, avg, max) = (3812.534, 3826.060, 3842.711), stdev = 8.997
  Confidence intervals: 95% [3821.849, 3830.270], 99% [3820.304, 3831.815]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 2948.115 ops/ms
# Warmup Iteration   2: 3640.054 ops/ms
# Warmup Iteration   3: 3752.401 ops/ms
# Warmup Iteration   4: 3789.103 ops/ms
# Warmup Iteration   5: 3791.254 ops/ms
# Warmup Iteration   6: 3792.410 ops/ms
# Warmup Iteration   7: 3798.872 ops/ms
# Warmup Iteration   8: 3808.954 ops/ms
# Warmup Iteration   9: 3801.678 ops/ms
# Warmup Iteration  10: 3793.690 ops/ms
# Warmup Iteration  11: 3782.264 ops/ms
# Warmup Iteration  12: 3802.073 ops/ms
# Warmup Iteration  13: 3784.117 ops/ms
# Warmup Iteration  14: 3801.206 ops/ms
# Warmup Iteration  15: 3809.739 ops/ms
# Warmup Iteration  16: 3802.892 ops/ms
# Warmup Iteration  17: 3787.778 ops/ms
# Warmup Iteration  18: 3780.240 ops/ms
# Warmup Iteration  19: 3769.231 ops/ms
# Warmup Iteration  20: 3768.143 ops/ms
Iteration   1: 3773.928 ops/ms
Iteration   2: 3795.789 ops/ms
Iteration   3: 3765.381 ops/ms
Iteration   4: 3754.595 ops/ms
Iteration   5: 3779.767 ops/ms
Iteration   6: 3779.501 ops/ms
Iteration   7: 3753.466 ops/ms
Iteration   8: 3759.895 ops/ms
Iteration   9: 3754.351 ops/ms
Iteration  10: 3789.874 ops/ms
Iteration  11: 3756.867 ops/ms
Iteration  12: 3777.545 ops/ms
Iteration  13: 3777.183 ops/ms
Iteration  14: 3774.762 ops/ms
Iteration  15: 3760.734 ops/ms
Iteration  16: 3762.656 ops/ms
Iteration  17: 3777.145 ops/ms
Iteration  18: 3779.286 ops/ms
Iteration  19: 3758.099 ops/ms
Iteration  20: 3788.066 ops/ms

Result : 3770.945 ?(95%) 6.046 ?(99%) 8.265 ops/ms
  Statistics: (min, avg, max) = (3753.466, 3770.945, 3795.789), stdev = 12.919
  Confidence intervals: 95% [3764.898, 3776.991], 99% [3762.680, 3779.209]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 2933.977 ops/ms
# Warmup Iteration   2: 3628.944 ops/ms
# Warmup Iteration   3: 3793.062 ops/ms
# Warmup Iteration   4: 3817.818 ops/ms
# Warmup Iteration   5: 3829.850 ops/ms
# Warmup Iteration   6: 3835.320 ops/ms
# Warmup Iteration   7: 3826.475 ops/ms
# Warmup Iteration   8: 3827.657 ops/ms
# Warmup Iteration   9: 3837.542 ops/ms
# Warmup Iteration  10: 3828.659 ops/ms
# Warmup Iteration  11: 3826.199 ops/ms
# Warmup Iteration  12: 3832.868 ops/ms
# Warmup Iteration  13: 3843.907 ops/ms
# Warmup Iteration  14: 3842.499 ops/ms
# Warmup Iteration  15: 3845.157 ops/ms
# Warmup Iteration  16: 3818.708 ops/ms
# Warmup Iteration  17: 3802.890 ops/ms
# Warmup Iteration  18: 3818.456 ops/ms
# Warmup Iteration  19: 3804.441 ops/ms
# Warmup Iteration  20: 3813.739 ops/ms
Iteration   1: 3817.557 ops/ms
Iteration   2: 3828.570 ops/ms
Iteration   3: 3800.742 ops/ms
Iteration   4: 3802.068 ops/ms
Iteration   5: 3827.106 ops/ms
Iteration   6: 3829.591 ops/ms
Iteration   7: 3828.833 ops/ms
Iteration   8: 3802.697 ops/ms
Iteration   9: 3813.018 ops/ms
Iteration  10: 3818.619 ops/ms
Iteration  11: 3832.311 ops/ms
Iteration  12: 3821.263 ops/ms
Iteration  13: 3810.972 ops/ms
Iteration  14: 3815.163 ops/ms
Iteration  15: 3777.383 ops/ms
Iteration  16: 3816.231 ops/ms
Iteration  17: 3816.100 ops/ms
Iteration  18: 3815.330 ops/ms
Iteration  19: 3817.926 ops/ms
Iteration  20: 3808.751 ops/ms

Result : 3815.012 ?(95%) 5.979 ?(99%) 8.173 ops/ms
  Statistics: (min, avg, max) = (3777.383, 3815.012, 3832.311), stdev = 12.775
  Confidence intervals: 95% [3809.033, 3820.991], 99% [3806.839, 3823.185]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.137 ops/ms
# Warmup Iteration   2: 18.961 ops/ms
# Warmup Iteration   3: 29.004 ops/ms
# Warmup Iteration   4: 28.892 ops/ms
# Warmup Iteration   5: 29.121 ops/ms
# Warmup Iteration   6: 29.276 ops/ms
# Warmup Iteration   7: 24.481 ops/ms
# Warmup Iteration   8: 28.711 ops/ms
# Warmup Iteration   9: 29.056 ops/ms
# Warmup Iteration  10: 29.124 ops/ms
# Warmup Iteration  11: 29.115 ops/ms
# Warmup Iteration  12: 28.968 ops/ms
# Warmup Iteration  13: 29.069 ops/ms
# Warmup Iteration  14: 29.216 ops/ms
# Warmup Iteration  15: 29.121 ops/ms
# Warmup Iteration  16: 28.829 ops/ms
# Warmup Iteration  17: 29.218 ops/ms
# Warmup Iteration  18: 29.320 ops/ms
# Warmup Iteration  19: 29.103 ops/ms
# Warmup Iteration  20: 29.322 ops/ms
Iteration   1: 29.114 ops/ms
Iteration   2: 29.224 ops/ms
Iteration   3: 29.129 ops/ms
Iteration   4: 29.287 ops/ms
Iteration   5: 28.991 ops/ms
Iteration   6: 29.086 ops/ms
Iteration   7: 29.327 ops/ms
Iteration   8: 29.165 ops/ms
Iteration   9: 29.132 ops/ms
Iteration  10: 29.321 ops/ms
Iteration  11: 29.339 ops/ms
Iteration  12: 29.137 ops/ms
Iteration  13: 29.015 ops/ms
Iteration  14: 29.196 ops/ms
Iteration  15: 29.209 ops/ms
Iteration  16: 29.120 ops/ms
Iteration  17: 29.269 ops/ms
Iteration  18: 29.215 ops/ms
Iteration  19: 29.386 ops/ms
Iteration  20: 29.235 ops/ms

Result : 29.195 ?(95%) 0.050 ?(99%) 0.068 ops/ms
  Statistics: (min, avg, max) = (28.991, 29.195, 29.386), stdev = 0.107
  Confidence intervals: 95% [29.145, 29.245], 99% [29.126, 29.263]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.221 ops/ms
# Warmup Iteration   2: 18.781 ops/ms
# Warmup Iteration   3: 29.161 ops/ms
# Warmup Iteration   4: 29.356 ops/ms
# Warmup Iteration   5: 29.004 ops/ms
# Warmup Iteration   6: 29.372 ops/ms
# Warmup Iteration   7: 24.433 ops/ms
# Warmup Iteration   8: 29.162 ops/ms
# Warmup Iteration   9: 29.132 ops/ms
# Warmup Iteration  10: 28.864 ops/ms
# Warmup Iteration  11: 29.136 ops/ms
# Warmup Iteration  12: 29.358 ops/ms
# Warmup Iteration  13: 29.269 ops/ms
# Warmup Iteration  14: 29.118 ops/ms
# Warmup Iteration  15: 29.167 ops/ms
# Warmup Iteration  16: 29.034 ops/ms
# Warmup Iteration  17: 29.210 ops/ms
# Warmup Iteration  18: 29.328 ops/ms
# Warmup Iteration  19: 29.342 ops/ms
# Warmup Iteration  20: 29.344 ops/ms
Iteration   1: 29.278 ops/ms
Iteration   2: 29.399 ops/ms
Iteration   3: 29.349 ops/ms
Iteration   4: 29.270 ops/ms
Iteration   5: 29.369 ops/ms
Iteration   6: 29.297 ops/ms
Iteration   7: 29.106 ops/ms
Iteration   8: 29.218 ops/ms
Iteration   9: 29.297 ops/ms
Iteration  10: 29.346 ops/ms
Iteration  11: 29.448 ops/ms
Iteration  12: 28.677 ops/ms
Iteration  13: 28.117 ops/ms
Iteration  14: 28.243 ops/ms
Iteration  15: 28.572 ops/ms
Iteration  16: 29.342 ops/ms
Iteration  17: 29.292 ops/ms
Iteration  18: 29.090 ops/ms
Iteration  19: 29.318 ops/ms
Iteration  20: 29.425 ops/ms

Result : 29.123 ?(95%) 0.185 ?(99%) 0.252 ops/ms
  Statistics: (min, avg, max) = (28.117, 29.123, 29.448), stdev = 0.394
  Confidence intervals: 95% [28.938, 29.307], 99% [28.870, 29.375]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.175 ops/ms
# Warmup Iteration   2: 19.586 ops/ms
# Warmup Iteration   3: 30.241 ops/ms
# Warmup Iteration   4: 30.445 ops/ms
# Warmup Iteration   5: 30.812 ops/ms
# Warmup Iteration   6: 30.731 ops/ms
# Warmup Iteration   7: 25.288 ops/ms
# Warmup Iteration   8: 30.935 ops/ms
# Warmup Iteration   9: 30.661 ops/ms
# Warmup Iteration  10: 30.702 ops/ms
# Warmup Iteration  11: 30.708 ops/ms
# Warmup Iteration  12: 30.762 ops/ms
# Warmup Iteration  13: 30.469 ops/ms
# Warmup Iteration  14: 30.526 ops/ms
# Warmup Iteration  15: 30.689 ops/ms
# Warmup Iteration  16: 30.828 ops/ms
# Warmup Iteration  17: 30.362 ops/ms
# Warmup Iteration  18: 30.528 ops/ms
# Warmup Iteration  19: 30.502 ops/ms
# Warmup Iteration  20: 30.540 ops/ms
Iteration   1: 30.551 ops/ms
Iteration   2: 30.551 ops/ms
Iteration   3: 30.656 ops/ms
Iteration   4: 30.539 ops/ms
Iteration   5: 30.307 ops/ms
Iteration   6: 30.330 ops/ms
Iteration   7: 30.350 ops/ms
Iteration   8: 30.527 ops/ms
Iteration   9: 30.324 ops/ms
Iteration  10: 30.477 ops/ms
Iteration  11: 30.488 ops/ms
Iteration  12: 30.525 ops/ms
Iteration  13: 30.447 ops/ms
Iteration  14: 30.426 ops/ms
Iteration  15: 30.406 ops/ms
Iteration  16: 30.443 ops/ms
Iteration  17: 30.320 ops/ms
Iteration  18: 30.608 ops/ms
Iteration  19: 30.638 ops/ms
Iteration  20: 30.540 ops/ms

Result : 30.473 ?(95%) 0.051 ?(99%) 0.069 ops/ms
  Statistics: (min, avg, max) = (30.307, 30.473, 30.656), stdev = 0.108
  Confidence intervals: 95% [30.422, 30.523], 99% [30.403, 30.542]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 7.410 ops/ms
# Warmup Iteration   2: 19.644 ops/ms
# Warmup Iteration   3: 30.093 ops/ms
# Warmup Iteration   4: 29.943 ops/ms
# Warmup Iteration   5: 30.143 ops/ms
# Warmup Iteration   6: 30.174 ops/ms
# Warmup Iteration   7: 24.758 ops/ms
# Warmup Iteration   8: 30.029 ops/ms
# Warmup Iteration   9: 29.718 ops/ms
# Warmup Iteration  10: 30.112 ops/ms
# Warmup Iteration  11: 30.255 ops/ms
# Warmup Iteration  12: 29.958 ops/ms
# Warmup Iteration  13: 30.078 ops/ms
# Warmup Iteration  14: 29.736 ops/ms
# Warmup Iteration  15: 29.938 ops/ms
# Warmup Iteration  16: 30.035 ops/ms
# Warmup Iteration  17: 29.534 ops/ms
# Warmup Iteration  18: 29.694 ops/ms
# Warmup Iteration  19: 29.932 ops/ms
# Warmup Iteration  20: 29.827 ops/ms
Iteration   1: 30.111 ops/ms
Iteration   2: 29.999 ops/ms
Iteration   3: 29.958 ops/ms
Iteration   4: 30.066 ops/ms
Iteration   5: 30.051 ops/ms
Iteration   6: 29.966 ops/ms
Iteration   7: 30.154 ops/ms
Iteration   8: 29.871 ops/ms
Iteration   9: 30.105 ops/ms
Iteration  10: 29.959 ops/ms
Iteration  11: 30.094 ops/ms
Iteration  12: 29.851 ops/ms
Iteration  13: 29.977 ops/ms
Iteration  14: 29.658 ops/ms
Iteration  15: 29.900 ops/ms
Iteration  16: 29.985 ops/ms
Iteration  17: 30.101 ops/ms
Iteration  18: 29.978 ops/ms
Iteration  19: 29.982 ops/ms
Iteration  20: 29.861 ops/ms

Result : 29.981 ?(95%) 0.054 ?(99%) 0.074 ops/ms
  Statistics: (min, avg, max) = (29.658, 29.981, 30.154), stdev = 0.116
  Confidence intervals: 95% [29.927, 30.036], 99% [29.907, 30.056]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 6.725 ops/ms
# Warmup Iteration   2: 19.125 ops/ms
# Warmup Iteration   3: 31.198 ops/ms
# Warmup Iteration   4: 31.133 ops/ms
# Warmup Iteration   5: 31.209 ops/ms
# Warmup Iteration   6: 31.322 ops/ms
# Warmup Iteration   7: 25.799 ops/ms
# Warmup Iteration   8: 31.219 ops/ms
# Warmup Iteration   9: 31.383 ops/ms
# Warmup Iteration  10: 31.246 ops/ms
# Warmup Iteration  11: 31.172 ops/ms
# Warmup Iteration  12: 31.278 ops/ms
# Warmup Iteration  13: 31.321 ops/ms
# Warmup Iteration  14: 31.167 ops/ms
# Warmup Iteration  15: 31.264 ops/ms
# Warmup Iteration  16: 31.302 ops/ms
# Warmup Iteration  17: 31.320 ops/ms
# Warmup Iteration  18: 31.063 ops/ms
# Warmup Iteration  19: 31.145 ops/ms
# Warmup Iteration  20: 31.107 ops/ms
Iteration   1: 31.232 ops/ms
Iteration   2: 31.328 ops/ms
Iteration   3: 30.847 ops/ms
Iteration   4: 30.994 ops/ms
Iteration   5: 31.295 ops/ms
Iteration   6: 31.063 ops/ms
Iteration   7: 31.317 ops/ms
Iteration   8: 31.180 ops/ms
Iteration   9: 31.313 ops/ms
Iteration  10: 31.430 ops/ms
Iteration  11: 31.291 ops/ms
Iteration  12: 31.116 ops/ms
Iteration  13: 31.219 ops/ms
Iteration  14: 31.362 ops/ms
Iteration  15: 31.402 ops/ms
Iteration  16: 31.252 ops/ms
Iteration  17: 31.218 ops/ms
Iteration  18: 31.241 ops/ms
Iteration  19: 31.233 ops/ms
Iteration  20: 31.126 ops/ms

Result : 31.223 ?(95%) 0.066 ?(99%) 0.090 ops/ms
  Statistics: (min, avg, max) = (30.847, 31.223, 31.430), stdev = 0.141
  Confidence intervals: 95% [31.157, 31.289], 99% [31.133, 31.313]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1391.727 ops/ms
# Warmup Iteration   2: 1937.928 ops/ms
# Warmup Iteration   3: 2104.210 ops/ms
# Warmup Iteration   4: 2107.312 ops/ms
# Warmup Iteration   5: 2138.836 ops/ms
# Warmup Iteration   6: 2150.163 ops/ms
# Warmup Iteration   7: 2148.784 ops/ms
# Warmup Iteration   8: 2144.786 ops/ms
# Warmup Iteration   9: 2140.247 ops/ms
# Warmup Iteration  10: 2140.294 ops/ms
# Warmup Iteration  11: 2148.707 ops/ms
# Warmup Iteration  12: 2133.806 ops/ms
# Warmup Iteration  13: 2146.820 ops/ms
# Warmup Iteration  14: 2137.721 ops/ms
# Warmup Iteration  15: 2149.911 ops/ms
# Warmup Iteration  16: 2161.185 ops/ms
# Warmup Iteration  17: 2156.966 ops/ms
# Warmup Iteration  18: 2157.037 ops/ms
# Warmup Iteration  19: 2160.466 ops/ms
# Warmup Iteration  20: 2165.977 ops/ms
Iteration   1: 2161.723 ops/ms
Iteration   2: 2166.344 ops/ms
Iteration   3: 2165.172 ops/ms
Iteration   4: 2159.053 ops/ms
Iteration   5: 2142.674 ops/ms
Iteration   6: 2157.557 ops/ms
Iteration   7: 2166.762 ops/ms
Iteration   8: 2152.852 ops/ms
Iteration   9: 2159.374 ops/ms
Iteration  10: 2160.543 ops/ms
Iteration  11: 2167.438 ops/ms
Iteration  12: 2166.882 ops/ms
Iteration  13: 2157.177 ops/ms
Iteration  14: 2167.428 ops/ms
Iteration  15: 2170.594 ops/ms
Iteration  16: 2165.610 ops/ms
Iteration  17: 2154.697 ops/ms
Iteration  18: 2159.062 ops/ms
Iteration  19: 2167.219 ops/ms
Iteration  20: 2159.718 ops/ms

Result : 2161.394 ?(95%) 3.087 ?(99%) 4.219 ops/ms
  Statistics: (min, avg, max) = (2142.674, 2161.394, 2170.594), stdev = 6.595
  Confidence intervals: 95% [2158.308, 2164.481], 99% [2157.175, 2165.613]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1354.630 ops/ms
# Warmup Iteration   2: 2032.955 ops/ms
# Warmup Iteration   3: 2060.469 ops/ms
# Warmup Iteration   4: 2033.558 ops/ms
# Warmup Iteration   5: 2038.208 ops/ms
# Warmup Iteration   6: 2052.203 ops/ms
# Warmup Iteration   7: 2041.333 ops/ms
# Warmup Iteration   8: 2049.516 ops/ms
# Warmup Iteration   9: 2034.139 ops/ms
# Warmup Iteration  10: 2039.516 ops/ms
# Warmup Iteration  11: 2048.693 ops/ms
# Warmup Iteration  12: 2047.565 ops/ms
# Warmup Iteration  13: 2034.525 ops/ms
# Warmup Iteration  14: 2048.303 ops/ms
# Warmup Iteration  15: 2048.316 ops/ms
# Warmup Iteration  16: 2049.506 ops/ms
# Warmup Iteration  17: 2053.912 ops/ms
# Warmup Iteration  18: 2044.446 ops/ms
# Warmup Iteration  19: 2053.623 ops/ms
# Warmup Iteration  20: 2058.512 ops/ms
Iteration   1: 2051.070 ops/ms
Iteration   2: 2053.724 ops/ms
Iteration   3: 2048.405 ops/ms
Iteration   4: 2056.733 ops/ms
Iteration   5: 2062.832 ops/ms
Iteration   6: 2058.783 ops/ms
Iteration   7: 2058.704 ops/ms
Iteration   8: 2054.104 ops/ms
Iteration   9: 2061.844 ops/ms
Iteration  10: 2054.238 ops/ms
Iteration  11: 2053.892 ops/ms
Iteration  12: 2060.009 ops/ms
Iteration  13: 2049.344 ops/ms
Iteration  14: 2045.017 ops/ms
Iteration  15: 2060.189 ops/ms
Iteration  16: 2057.078 ops/ms
Iteration  17: 2062.101 ops/ms
Iteration  18: 2054.319 ops/ms
Iteration  19: 2064.346 ops/ms
Iteration  20: 2063.097 ops/ms

Result : 2056.491 ?(95%) 2.517 ?(99%) 3.441 ops/ms
  Statistics: (min, avg, max) = (2045.017, 2056.491, 2064.346), stdev = 5.379
  Confidence intervals: 95% [2053.974, 2059.009], 99% [2053.050, 2059.932]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1368.108 ops/ms
# Warmup Iteration   2: 2107.674 ops/ms
# Warmup Iteration   3: 2207.022 ops/ms
# Warmup Iteration   4: 2186.859 ops/ms
# Warmup Iteration   5: 2186.251 ops/ms
# Warmup Iteration   6: 2179.496 ops/ms
# Warmup Iteration   7: 2197.387 ops/ms
# Warmup Iteration   8: 2192.548 ops/ms
# Warmup Iteration   9: 2196.163 ops/ms
# Warmup Iteration  10: 2197.430 ops/ms
# Warmup Iteration  11: 2203.163 ops/ms
# Warmup Iteration  12: 2202.135 ops/ms
# Warmup Iteration  13: 2191.922 ops/ms
# Warmup Iteration  14: 2191.782 ops/ms
# Warmup Iteration  15: 2203.548 ops/ms
# Warmup Iteration  16: 2190.463 ops/ms
# Warmup Iteration  17: 2173.671 ops/ms
# Warmup Iteration  18: 2165.490 ops/ms
# Warmup Iteration  19: 2173.364 ops/ms
# Warmup Iteration  20: 2173.798 ops/ms
Iteration   1: 2175.838 ops/ms
Iteration   2: 2175.112 ops/ms
Iteration   3: 2171.335 ops/ms
Iteration   4: 2180.249 ops/ms
Iteration   5: 2153.826 ops/ms
Iteration   6: 2178.964 ops/ms
Iteration   7: 2171.438 ops/ms
Iteration   8: 2171.966 ops/ms
Iteration   9: 2172.745 ops/ms
Iteration  10: 2179.850 ops/ms
Iteration  11: 2176.763 ops/ms
Iteration  12: 2175.305 ops/ms
Iteration  13: 2179.599 ops/ms
Iteration  14: 2171.928 ops/ms
Iteration  15: 2176.351 ops/ms
Iteration  16: 2172.170 ops/ms
Iteration  17: 2171.990 ops/ms
Iteration  18: 2180.347 ops/ms
Iteration  19: 2174.360 ops/ms
Iteration  20: 2173.234 ops/ms

Result : 2174.169 ?(95%) 2.689 ?(99%) 3.676 ops/ms
  Statistics: (min, avg, max) = (2153.826, 2174.169, 2180.347), stdev = 5.746
  Confidence intervals: 95% [2171.480, 2176.858], 99% [2170.493, 2177.844]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1768.803 ops/ms
# Warmup Iteration   2: 2401.066 ops/ms
# Warmup Iteration   3: 2457.780 ops/ms
# Warmup Iteration   4: 2441.372 ops/ms
# Warmup Iteration   5: 2480.809 ops/ms
# Warmup Iteration   6: 2487.008 ops/ms
# Warmup Iteration   7: 2489.629 ops/ms
# Warmup Iteration   8: 2487.438 ops/ms
# Warmup Iteration   9: 2483.021 ops/ms
# Warmup Iteration  10: 2499.331 ops/ms
# Warmup Iteration  11: 2488.084 ops/ms
# Warmup Iteration  12: 2496.151 ops/ms
# Warmup Iteration  13: 2494.910 ops/ms
# Warmup Iteration  14: 2488.273 ops/ms
# Warmup Iteration  15: 2490.131 ops/ms
# Warmup Iteration  16: 2490.176 ops/ms
# Warmup Iteration  17: 2463.338 ops/ms
# Warmup Iteration  18: 2442.340 ops/ms
# Warmup Iteration  19: 2500.915 ops/ms
# Warmup Iteration  20: 2510.104 ops/ms
Iteration   1: 2425.486 ops/ms
Iteration   2: 2433.641 ops/ms
Iteration   3: 2431.773 ops/ms
Iteration   4: 2412.310 ops/ms
Iteration   5: 2472.617 ops/ms
Iteration   6: 2463.310 ops/ms
Iteration   7: 2418.750 ops/ms
Iteration   8: 2431.528 ops/ms
Iteration   9: 2442.958 ops/ms
Iteration  10: 2416.766 ops/ms
Iteration  11: 2433.639 ops/ms
Iteration  12: 2422.131 ops/ms
Iteration  13: 2415.855 ops/ms
Iteration  14: 2439.193 ops/ms
Iteration  15: 2466.583 ops/ms
Iteration  16: 2423.251 ops/ms
Iteration  17: 2436.674 ops/ms
Iteration  18: 2467.711 ops/ms
Iteration  19: 2416.088 ops/ms
Iteration  20: 2421.450 ops/ms

Result : 2434.586 ?(95%) 8.856 ?(99%) 12.106 ops/ms
  Statistics: (min, avg, max) = (2412.310, 2434.586, 2472.617), stdev = 18.923
  Confidence intervals: 95% [2425.729, 2443.442], 99% [2422.480, 2446.692]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1498.490 ops/ms
# Warmup Iteration   2: 2224.412 ops/ms
# Warmup Iteration   3: 2296.199 ops/ms
# Warmup Iteration   4: 2323.722 ops/ms
# Warmup Iteration   5: 2321.670 ops/ms
# Warmup Iteration   6: 2320.806 ops/ms
# Warmup Iteration   7: 2319.205 ops/ms
# Warmup Iteration   8: 2305.607 ops/ms
# Warmup Iteration   9: 2306.319 ops/ms
# Warmup Iteration  10: 2310.607 ops/ms
# Warmup Iteration  11: 2310.141 ops/ms
# Warmup Iteration  12: 2303.554 ops/ms
# Warmup Iteration  13: 2308.841 ops/ms
# Warmup Iteration  14: 2321.227 ops/ms
# Warmup Iteration  15: 2318.779 ops/ms
# Warmup Iteration  16: 2309.918 ops/ms
# Warmup Iteration  17: 2270.309 ops/ms
# Warmup Iteration  18: 2265.166 ops/ms
# Warmup Iteration  19: 2270.189 ops/ms
# Warmup Iteration  20: 2258.712 ops/ms
Iteration   1: 2265.334 ops/ms
Iteration   2: 2269.243 ops/ms
Iteration   3: 2271.203 ops/ms
Iteration   4: 2255.549 ops/ms
Iteration   5: 2276.791 ops/ms
Iteration   6: 2262.006 ops/ms
Iteration   7: 2280.391 ops/ms
Iteration   8: 2255.133 ops/ms
Iteration   9: 2269.227 ops/ms
Iteration  10: 2272.870 ops/ms
Iteration  11: 2277.699 ops/ms
Iteration  12: 2268.171 ops/ms
Iteration  13: 2275.747 ops/ms
Iteration  14: 2271.272 ops/ms
Iteration  15: 2286.441 ops/ms
Iteration  16: 2277.151 ops/ms
Iteration  17: 2268.675 ops/ms
Iteration  18: 2270.743 ops/ms
Iteration  19: 2272.142 ops/ms
Iteration  20: 2263.636 ops/ms

Result : 2270.471 ?(95%) 3.629 ?(99%) 4.960 ops/ms
  Statistics: (min, avg, max) = (2255.133, 2270.471, 2286.441), stdev = 7.753
  Confidence intervals: 95% [2266.843, 2274.100], 99% [2265.511, 2275.431]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.973 ops/ms
# Warmup Iteration   2: 128.862 ops/ms
# Warmup Iteration   3: 195.044 ops/ms
# Warmup Iteration   4: 193.071 ops/ms
# Warmup Iteration   5: 192.596 ops/ms
# Warmup Iteration   6: 193.660 ops/ms
# Warmup Iteration   7: 164.277 ops/ms
# Warmup Iteration   8: 191.071 ops/ms
# Warmup Iteration   9: 192.489 ops/ms
# Warmup Iteration  10: 193.052 ops/ms
# Warmup Iteration  11: 194.121 ops/ms
# Warmup Iteration  12: 194.221 ops/ms
# Warmup Iteration  13: 192.375 ops/ms
# Warmup Iteration  14: 193.070 ops/ms
# Warmup Iteration  15: 194.132 ops/ms
# Warmup Iteration  16: 193.410 ops/ms
# Warmup Iteration  17: 193.444 ops/ms
# Warmup Iteration  18: 194.351 ops/ms
# Warmup Iteration  19: 193.681 ops/ms
# Warmup Iteration  20: 193.581 ops/ms
Iteration   1: 192.359 ops/ms
Iteration   2: 191.406 ops/ms
Iteration   3: 193.502 ops/ms
Iteration   4: 193.945 ops/ms
Iteration   5: 192.565 ops/ms
Iteration   6: 192.779 ops/ms
Iteration   7: 194.474 ops/ms
Iteration   8: 194.408 ops/ms
Iteration   9: 192.073 ops/ms
Iteration  10: 194.394 ops/ms
Iteration  11: 193.067 ops/ms
Iteration  12: 193.315 ops/ms
Iteration  13: 193.041 ops/ms
Iteration  14: 193.651 ops/ms
Iteration  15: 194.050 ops/ms
Iteration  16: 193.086 ops/ms
Iteration  17: 193.656 ops/ms
Iteration  18: 193.582 ops/ms
Iteration  19: 192.831 ops/ms
Iteration  20: 193.451 ops/ms

Result : 193.282 ?(95%) 0.377 ?(99%) 0.516 ops/ms
  Statistics: (min, avg, max) = (191.406, 193.282, 194.474), stdev = 0.806
  Confidence intervals: 95% [192.904, 193.659], 99% [192.766, 193.797]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.394 ops/ms
# Warmup Iteration   2: 122.072 ops/ms
# Warmup Iteration   3: 184.952 ops/ms
# Warmup Iteration   4: 185.320 ops/ms
# Warmup Iteration   5: 184.538 ops/ms
# Warmup Iteration   6: 185.016 ops/ms
# Warmup Iteration   7: 155.893 ops/ms
# Warmup Iteration   8: 184.355 ops/ms
# Warmup Iteration   9: 184.434 ops/ms
# Warmup Iteration  10: 185.177 ops/ms
# Warmup Iteration  11: 185.058 ops/ms
# Warmup Iteration  12: 184.625 ops/ms
# Warmup Iteration  13: 185.212 ops/ms
# Warmup Iteration  14: 185.898 ops/ms
# Warmup Iteration  15: 184.360 ops/ms
# Warmup Iteration  16: 180.503 ops/ms
# Warmup Iteration  17: 179.643 ops/ms
# Warmup Iteration  18: 181.132 ops/ms
# Warmup Iteration  19: 182.205 ops/ms
# Warmup Iteration  20: 183.915 ops/ms
Iteration   1: 184.155 ops/ms
Iteration   2: 180.837 ops/ms
Iteration   3: 181.510 ops/ms
Iteration   4: 183.071 ops/ms
Iteration   5: 176.697 ops/ms
Iteration   6: 182.379 ops/ms
Iteration   7: 180.385 ops/ms
Iteration   8: 186.534 ops/ms
Iteration   9: 185.556 ops/ms
Iteration  10: 184.615 ops/ms
Iteration  11: 185.848 ops/ms
Iteration  12: 185.071 ops/ms
Iteration  13: 185.404 ops/ms
Iteration  14: 185.794 ops/ms
Iteration  15: 185.405 ops/ms
Iteration  16: 184.819 ops/ms
Iteration  17: 185.067 ops/ms
Iteration  18: 186.146 ops/ms
Iteration  19: 185.343 ops/ms
Iteration  20: 186.129 ops/ms

Result : 184.038 ?(95%) 1.175 ?(99%) 1.606 ops/ms
  Statistics: (min, avg, max) = (176.697, 184.038, 186.534), stdev = 2.511
  Confidence intervals: 95% [182.863, 185.213], 99% [182.432, 185.645]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 31.932 ops/ms
# Warmup Iteration   2: 118.794 ops/ms
# Warmup Iteration   3: 182.908 ops/ms
# Warmup Iteration   4: 183.838 ops/ms
# Warmup Iteration   5: 182.863 ops/ms
# Warmup Iteration   6: 181.341 ops/ms
# Warmup Iteration   7: 153.089 ops/ms
# Warmup Iteration   8: 180.182 ops/ms
# Warmup Iteration   9: 180.147 ops/ms
# Warmup Iteration  10: 178.088 ops/ms
# Warmup Iteration  11: 178.260 ops/ms
# Warmup Iteration  12: 178.983 ops/ms
# Warmup Iteration  13: 179.210 ops/ms
# Warmup Iteration  14: 179.467 ops/ms
# Warmup Iteration  15: 179.184 ops/ms
# Warmup Iteration  16: 179.570 ops/ms
# Warmup Iteration  17: 181.579 ops/ms
# Warmup Iteration  18: 182.003 ops/ms
# Warmup Iteration  19: 182.401 ops/ms
# Warmup Iteration  20: 180.019 ops/ms
Iteration   1: 182.633 ops/ms
Iteration   2: 182.643 ops/ms
Iteration   3: 181.877 ops/ms
Iteration   4: 182.154 ops/ms
Iteration   5: 180.964 ops/ms
Iteration   6: 180.904 ops/ms
Iteration   7: 180.937 ops/ms
Iteration   8: 179.615 ops/ms
Iteration   9: 180.783 ops/ms
Iteration  10: 181.269 ops/ms
Iteration  11: 181.685 ops/ms
Iteration  12: 181.559 ops/ms
Iteration  13: 181.573 ops/ms
Iteration  14: 181.578 ops/ms
Iteration  15: 181.902 ops/ms
Iteration  16: 181.454 ops/ms
Iteration  17: 181.546 ops/ms
Iteration  18: 181.118 ops/ms
Iteration  19: 180.238 ops/ms
Iteration  20: 181.640 ops/ms

Result : 181.404 ?(95%) 0.340 ?(99%) 0.465 ops/ms
  Statistics: (min, avg, max) = (179.615, 181.404, 182.643), stdev = 0.726
  Confidence intervals: 95% [181.064, 181.744], 99% [180.939, 181.868]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.314 ops/ms
# Warmup Iteration   2: 123.037 ops/ms
# Warmup Iteration   3: 187.796 ops/ms
# Warmup Iteration   4: 189.326 ops/ms
# Warmup Iteration   5: 188.703 ops/ms
# Warmup Iteration   6: 188.608 ops/ms
# Warmup Iteration   7: 158.141 ops/ms
# Warmup Iteration   8: 188.714 ops/ms
# Warmup Iteration   9: 188.692 ops/ms
# Warmup Iteration  10: 189.682 ops/ms
# Warmup Iteration  11: 188.147 ops/ms
# Warmup Iteration  12: 188.187 ops/ms
# Warmup Iteration  13: 188.102 ops/ms
# Warmup Iteration  14: 188.357 ops/ms
# Warmup Iteration  15: 188.433 ops/ms
# Warmup Iteration  16: 187.589 ops/ms
# Warmup Iteration  17: 189.754 ops/ms
# Warmup Iteration  18: 189.352 ops/ms
# Warmup Iteration  19: 189.057 ops/ms
# Warmup Iteration  20: 188.760 ops/ms
Iteration   1: 188.510 ops/ms
Iteration   2: 189.934 ops/ms
Iteration   3: 189.189 ops/ms
Iteration   4: 188.545 ops/ms
Iteration   5: 189.529 ops/ms
Iteration   6: 188.961 ops/ms
Iteration   7: 189.220 ops/ms
Iteration   8: 189.769 ops/ms
Iteration   9: 189.901 ops/ms
Iteration  10: 188.310 ops/ms
Iteration  11: 189.348 ops/ms
Iteration  12: 187.198 ops/ms
Iteration  13: 189.595 ops/ms
Iteration  14: 187.157 ops/ms
Iteration  15: 189.056 ops/ms
Iteration  16: 187.944 ops/ms
Iteration  17: 188.875 ops/ms
Iteration  18: 187.957 ops/ms
Iteration  19: 189.149 ops/ms
Iteration  20: 188.950 ops/ms

Result : 188.855 ?(95%) 0.380 ?(99%) 0.519 ops/ms
  Statistics: (min, avg, max) = (187.157, 188.855, 189.934), stdev = 0.811
  Confidence intervals: 95% [188.475, 189.235], 99% [188.336, 189.374]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 32.800 ops/ms
# Warmup Iteration   2: 124.639 ops/ms
# Warmup Iteration   3: 187.393 ops/ms
# Warmup Iteration   4: 188.051 ops/ms
# Warmup Iteration   5: 187.574 ops/ms
# Warmup Iteration   6: 188.979 ops/ms
# Warmup Iteration   7: 158.924 ops/ms
# Warmup Iteration   8: 187.523 ops/ms
# Warmup Iteration   9: 186.379 ops/ms
# Warmup Iteration  10: 183.918 ops/ms
# Warmup Iteration  11: 183.807 ops/ms
# Warmup Iteration  12: 182.749 ops/ms
# Warmup Iteration  13: 183.114 ops/ms
# Warmup Iteration  14: 184.165 ops/ms
# Warmup Iteration  15: 185.021 ops/ms
# Warmup Iteration  16: 183.799 ops/ms
# Warmup Iteration  17: 184.322 ops/ms
# Warmup Iteration  18: 180.699 ops/ms
# Warmup Iteration  19: 187.214 ops/ms
# Warmup Iteration  20: 187.309 ops/ms
Iteration   1: 187.066 ops/ms
Iteration   2: 187.660 ops/ms
Iteration   3: 188.545 ops/ms
Iteration   4: 186.302 ops/ms
Iteration   5: 187.465 ops/ms
Iteration   6: 188.035 ops/ms
Iteration   7: 187.371 ops/ms
Iteration   8: 186.942 ops/ms
Iteration   9: 186.605 ops/ms
Iteration  10: 188.706 ops/ms
Iteration  11: 188.168 ops/ms
Iteration  12: 187.300 ops/ms
Iteration  13: 187.074 ops/ms
Iteration  14: 187.345 ops/ms
Iteration  15: 188.717 ops/ms
Iteration  16: 187.558 ops/ms
Iteration  17: 186.260 ops/ms
Iteration  18: 187.885 ops/ms
Iteration  19: 188.923 ops/ms
Iteration  20: 188.646 ops/ms

Result : 187.629 ?(95%) 0.379 ?(99%) 0.519 ops/ms
  Statistics: (min, avg, max) = (186.260, 187.629, 188.923), stdev = 0.810
  Confidence intervals: 95% [187.249, 188.008], 99% [187.110, 188.147]


"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone", aggregate over forked runs:

Result : 102493.898 ?(95%) 208.903 ?(99%) 276.502 ops/ms
  Statistics: (min, avg, max) = (99822.128, 102493.898, 105019.954), stdev = 1052.940
  Confidence intervals: 95% [102284.995, 102702.801], 99% [102217.396, 102770.400]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 50.745 ?(95%) 0.200 ?(99%) 0.264 ops/ms
  Statistics: (min, avg, max) = (48.339, 50.745, 51.810), stdev = 1.007
  Confidence intervals: 95% [50.545, 50.945], 99% [50.481, 51.009]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 52.827 ?(95%) 0.159 ?(99%) 0.210 ops/ms
  Statistics: (min, avg, max) = (50.280, 52.827, 53.727), stdev = 0.801
  Confidence intervals: 95% [52.668, 52.986], 99% [52.616, 53.037]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 87.063 ?(95%) 0.326 ?(99%) 0.432 ops/ms
  Statistics: (min, avg, max) = (84.775, 87.063, 89.948), stdev = 1.645
  Confidence intervals: 95% [86.736, 87.389], 99% [86.631, 87.495]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor", aggregate over forked runs:

Result : 55345.023 ?(95%) 141.581 ?(99%) 187.396 ops/ms
  Statistics: (min, avg, max) = (53472.889, 55345.023, 56476.995), stdev = 713.616
  Confidence intervals: 95% [55203.441, 55486.604], 99% [55157.627, 55532.418]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 615.498 ?(95%) 2.935 ?(99%) 3.885 ops/ms
  Statistics: (min, avg, max) = (582.281, 615.498, 635.414), stdev = 14.794
  Confidence intervals: 95% [612.563, 618.434], 99% [611.613, 619.383]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 1781.642 ?(95%) 2.339 ?(99%) 3.096 ops/ms
  Statistics: (min, avg, max) = (1746.934, 1781.642, 1804.839), stdev = 11.788
  Confidence intervals: 95% [1779.304, 1783.981], 99% [1778.547, 1784.738]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 20.003 ?(95%) 0.034 ?(99%) 0.044 ops/ms
  Statistics: (min, avg, max) = (19.548, 20.003, 20.286), stdev = 0.169
  Confidence intervals: 95% [19.970, 20.037], 99% [19.959, 20.048]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2198.870 ?(95%) 27.811 ?(99%) 36.811 ops/ms
  Statistics: (min, avg, max) = (1942.392, 2198.870, 2381.940), stdev = 140.178
  Confidence intervals: 95% [2171.058, 2226.681], 99% [2162.059, 2235.680]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 173.071 ?(95%) 0.809 ?(99%) 1.071 ops/ms
  Statistics: (min, avg, max) = (164.433, 173.071, 176.808), stdev = 4.079
  Confidence intervals: 95% [172.262, 173.880], 99% [172.000, 174.142]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone", aggregate over forked runs:

Result : 92968.333 ?(95%) 169.694 ?(99%) 224.604 ops/ms
  Statistics: (min, avg, max) = (90627.033, 92968.333, 94531.309), stdev = 855.310
  Confidence intervals: 95% [92798.640, 93138.027], 99% [92743.729, 93192.938]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 43.265 ?(95%) 0.107 ?(99%) 0.142 ops/ms
  Statistics: (min, avg, max) = (42.372, 43.265, 44.058), stdev = 0.540
  Confidence intervals: 95% [43.158, 43.372], 99% [43.123, 43.407]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 18.096 ?(95%) 0.038 ?(99%) 0.050 ops/ms
  Statistics: (min, avg, max) = (17.150, 18.096, 18.296), stdev = 0.190
  Confidence intervals: 95% [18.058, 18.134], 99% [18.046, 18.146]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 86.542 ?(95%) 0.221 ?(99%) 0.293 ops/ms
  Statistics: (min, avg, max) = (83.223, 86.542, 88.171), stdev = 1.114
  Confidence intervals: 95% [86.321, 86.763], 99% [86.249, 86.834]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor", aggregate over forked runs:

Result : 52903.842 ?(95%) 77.909 ?(99%) 103.119 ops/ms
  Statistics: (min, avg, max) = (51858.588, 52903.842, 53931.815), stdev = 392.687
  Confidence intervals: 95% [52825.933, 52981.751], 99% [52800.722, 53006.961]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 691.030 ?(95%) 1.913 ?(99%) 2.531 ops/ms
  Statistics: (min, avg, max) = (666.181, 691.030, 708.659), stdev = 9.640
  Confidence intervals: 95% [689.118, 692.943], 99% [688.499, 693.562]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 3796.985 ?(95%) 7.638 ?(99%) 10.110 ops/ms
  Statistics: (min, avg, max) = (3716.108, 3796.985, 3854.638), stdev = 38.499
  Confidence intervals: 95% [3789.346, 3804.623], 99% [3786.875, 3807.094]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 29.999 ?(95%) 0.163 ?(99%) 0.216 ops/ms
  Statistics: (min, avg, max) = (28.117, 29.999, 31.430), stdev = 0.821
  Confidence intervals: 95% [29.836, 30.162], 99% [29.783, 30.215]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2219.422 ?(95%) 25.436 ?(99%) 33.667 ops/ms
  Statistics: (min, avg, max) = (2045.017, 2219.422, 2472.617), stdev = 128.205
  Confidence intervals: 95% [2193.986, 2244.858], 99% [2185.756, 2253.089]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 187.041 ?(95%) 0.854 ?(99%) 1.130 ops/ms
  Statistics: (min, avg, max) = (176.697, 187.041, 194.474), stdev = 4.305
  Confidence intervals: 95% [186.187, 187.896], 99% [185.911, 188.172]

Benchmark                                                                              Mode Thr    Cnt  Sec         Mean   Mean error    Units
c.v.b.c.primitives.PrimitiveBenchmark.copyByClone                                     thrpt   1    100    1   102493.898      276.502   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByCustomSerialization                       thrpt   1    100    1       50.745        0.264   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByDefaultSerialization                      thrpt   1    100    1       52.827        0.210   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByExternalizable                            thrpt   1    100    1       87.063        0.432   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyConstructor                                 thrpt   1    100    1    55345.023      187.396   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime              thrpt   1    100    1      615.498        3.885   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields                  thrpt   1    100    1     1781.642        3.096   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke                 thrpt   1    100    1       20.003        0.044   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact            thrpt   1    100    1     2198.870       36.811   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments    thrpt   1    100    1      173.071        1.071   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByClone                                        thrpt   1    100    1    92968.333      224.604   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByCustomSerialization                          thrpt   1    100    1       43.265        0.142   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByDefaultSerialization                         thrpt   1    100    1       18.096        0.050   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByExternalizable                               thrpt   1    100    1       86.542        0.293   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyConstructor                                    thrpt   1    100    1    52903.842      103.119   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime                 thrpt   1    100    1      691.030        2.531   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields                     thrpt   1    100    1     3796.985       10.110   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke                    thrpt   1    100    1       29.999        0.216   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact               thrpt   1    100    1     2219.422       33.667   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments       thrpt   1    100    1      187.041        1.130   ops/ms
