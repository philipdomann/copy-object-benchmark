# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66321.882 ops/ms
# Warmup Iteration   2: 105701.675 ops/ms
# Warmup Iteration   3: 101680.114 ops/ms
# Warmup Iteration   4: 103173.332 ops/ms
# Warmup Iteration   5: 102360.806 ops/ms
# Warmup Iteration   6: 100248.553 ops/ms
# Warmup Iteration   7: 100321.136 ops/ms
# Warmup Iteration   8: 92821.773 ops/ms
# Warmup Iteration   9: 87377.805 ops/ms
# Warmup Iteration  10: 93254.571 ops/ms
# Warmup Iteration  11: 100837.020 ops/ms
# Warmup Iteration  12: 102089.255 ops/ms
# Warmup Iteration  13: 72652.403 ops/ms
# Warmup Iteration  14: 91606.040 ops/ms
# Warmup Iteration  15: 98644.748 ops/ms
# Warmup Iteration  16: 98572.652 ops/ms
# Warmup Iteration  17: 101737.108 ops/ms
# Warmup Iteration  18: 97225.051 ops/ms
# Warmup Iteration  19: 102184.810 ops/ms
# Warmup Iteration  20: 101093.114 ops/ms
Iteration   1: 101478.779 ops/ms
Iteration   2: 102250.876 ops/ms
Iteration   3: 102450.216 ops/ms
Iteration   4: 103582.831 ops/ms
Iteration   5: 99370.557 ops/ms
Iteration   6: 103200.066 ops/ms
Iteration   7: 103004.971 ops/ms
Iteration   8: 102873.473 ops/ms
Iteration   9: 102157.550 ops/ms
Iteration  10: 103047.227 ops/ms
Iteration  11: 102984.808 ops/ms
Iteration  12: 102215.238 ops/ms
Iteration  13: 101497.507 ops/ms
Iteration  14: 102036.518 ops/ms
Iteration  15: 102110.538 ops/ms
Iteration  16: 99238.378 ops/ms
Iteration  17: 87009.908 ops/ms
Iteration  18: 98250.768 ops/ms
Iteration  19: 101901.887 ops/ms
Iteration  20: 102520.772 ops/ms

Result : 101159.143 ?(95%) 1691.182 ?(99%) 2311.741 ops/ms
  Statistics: (min, avg, max) = (87009.908, 101159.143, 103582.831), stdev = 3613.568
  Confidence intervals: 95% [99467.961, 102850.326], 99% [98847.403, 103470.884]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 69630.636 ops/ms
# Warmup Iteration   2: 100957.516 ops/ms
# Warmup Iteration   3: 98245.528 ops/ms
# Warmup Iteration   4: 92431.000 ops/ms
# Warmup Iteration   5: 91613.272 ops/ms
# Warmup Iteration   6: 90673.556 ops/ms
# Warmup Iteration   7: 88949.825 ops/ms
# Warmup Iteration   8: 87239.167 ops/ms
# Warmup Iteration   9: 93331.889 ops/ms
# Warmup Iteration  10: 91906.724 ops/ms
# Warmup Iteration  11: 86632.373 ops/ms
# Warmup Iteration  12: 91878.675 ops/ms
# Warmup Iteration  13: 75776.807 ops/ms
# Warmup Iteration  14: 82649.013 ops/ms
# Warmup Iteration  15: 60901.299 ops/ms
# Warmup Iteration  16: 73000.948 ops/ms
# Warmup Iteration  17: 55819.684 ops/ms
# Warmup Iteration  18: 70470.004 ops/ms
# Warmup Iteration  19: 63066.997 ops/ms
# Warmup Iteration  20: 80390.020 ops/ms
Iteration   1: 80860.716 ops/ms
Iteration   2: 81417.142 ops/ms
Iteration   3: 82001.958 ops/ms
Iteration   4: 81171.408 ops/ms
Iteration   5: 77699.362 ops/ms
Iteration   6: 62200.869 ops/ms
Iteration   7: 67650.708 ops/ms
Iteration   8: 65452.029 ops/ms
Iteration   9: 97147.816 ops/ms
Iteration  10: 82113.107 ops/ms
Iteration  11: 82591.056 ops/ms
Iteration  12: 99313.213 ops/ms
Iteration  13: 97227.234 ops/ms
Iteration  14: 61678.595 ops/ms
Iteration  15: 83862.474 ops/ms
Iteration  16: 98873.744 ops/ms
Iteration  17: 98483.536 ops/ms
Iteration  18: 98995.616 ops/ms
Iteration  19: 98942.819 ops/ms
Iteration  20: 98124.186 ops/ms

Result : 84790.379 ?(95%) 6174.426 ?(99%) 8440.053 ops/ms
  Statistics: (min, avg, max) = (61678.595, 84790.379, 99313.213), stdev = 13192.962
  Confidence intervals: 95% [78615.954, 90964.805], 99% [76350.326, 93230.433]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 68251.162 ops/ms
# Warmup Iteration   2: 75558.967 ops/ms
# Warmup Iteration   3: 81888.405 ops/ms
# Warmup Iteration   4: 98471.195 ops/ms
# Warmup Iteration   5: 96098.461 ops/ms
# Warmup Iteration   6: 69133.341 ops/ms
# Warmup Iteration   7: 67982.358 ops/ms
# Warmup Iteration   8: 70420.027 ops/ms
# Warmup Iteration   9: 62888.018 ops/ms
# Warmup Iteration  10: 54349.039 ops/ms
# Warmup Iteration  11: 78905.371 ops/ms
# Warmup Iteration  12: 79040.828 ops/ms
# Warmup Iteration  13: 58710.179 ops/ms
# Warmup Iteration  14: 66071.923 ops/ms
# Warmup Iteration  15: 75252.296 ops/ms
# Warmup Iteration  16: 76529.527 ops/ms
# Warmup Iteration  17: 98220.052 ops/ms
# Warmup Iteration  18: 99522.644 ops/ms
# Warmup Iteration  19: 88916.504 ops/ms
# Warmup Iteration  20: 78512.972 ops/ms
Iteration   1: 99108.350 ops/ms
Iteration   2: 99036.859 ops/ms
Iteration   3: 99963.272 ops/ms
Iteration   4: 99404.152 ops/ms
Iteration   5: 99091.461 ops/ms
Iteration   6: 100085.157 ops/ms
Iteration   7: 99297.438 ops/ms
Iteration   8: 99938.451 ops/ms
Iteration   9: 72410.331 ops/ms
Iteration  10: 82580.921 ops/ms
Iteration  11: 98771.068 ops/ms
Iteration  12: 97956.752 ops/ms
Iteration  13: 100581.521 ops/ms
Iteration  14: 98853.616 ops/ms
Iteration  15: 97555.186 ops/ms
Iteration  16: 99822.489 ops/ms
Iteration  17: 99023.490 ops/ms
Iteration  18: 83564.356 ops/ms
Iteration  19: 77616.676 ops/ms
Iteration  20: 75815.550 ops/ms

Result : 94023.855 ?(95%) 4458.149 ?(99%) 6094.011 ops/ms
  Statistics: (min, avg, max) = (72410.331, 94023.855, 100581.521), stdev = 9525.777
  Confidence intervals: 95% [89565.705, 98482.004], 99% [87929.844, 100117.866]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 69259.793 ops/ms
# Warmup Iteration   2: 103507.467 ops/ms
# Warmup Iteration   3: 99073.103 ops/ms
# Warmup Iteration   4: 97238.283 ops/ms
# Warmup Iteration   5: 96319.247 ops/ms
# Warmup Iteration   6: 58973.190 ops/ms
# Warmup Iteration   7: 53495.544 ops/ms
# Warmup Iteration   8: 65942.567 ops/ms
# Warmup Iteration   9: 97319.477 ops/ms
# Warmup Iteration  10: 98997.177 ops/ms
# Warmup Iteration  11: 100079.896 ops/ms
# Warmup Iteration  12: 98771.491 ops/ms
# Warmup Iteration  13: 89555.541 ops/ms
# Warmup Iteration  14: 64749.711 ops/ms
# Warmup Iteration  15: 88957.740 ops/ms
# Warmup Iteration  16: 76562.680 ops/ms
# Warmup Iteration  17: 57794.634 ops/ms
# Warmup Iteration  18: 55218.150 ops/ms
# Warmup Iteration  19: 69082.756 ops/ms
# Warmup Iteration  20: 79885.060 ops/ms
Iteration   1: 78718.115 ops/ms
Iteration   2: 62412.730 ops/ms
Iteration   3: 85286.316 ops/ms
Iteration   4: 61134.342 ops/ms
Iteration   5: 67951.890 ops/ms
Iteration   6: 82030.083 ops/ms
Iteration   7: 99032.063 ops/ms
Iteration   8: 96031.024 ops/ms
Iteration   9: 72647.557 ops/ms
Iteration  10: 93089.371 ops/ms
Iteration  11: 88702.534 ops/ms
Iteration  12: 87615.864 ops/ms
Iteration  13: 82206.733 ops/ms
Iteration  14: 89304.122 ops/ms
Iteration  15: 92270.579 ops/ms
Iteration  16: 87955.457 ops/ms
Iteration  17: 63467.394 ops/ms
Iteration  18: 78361.772 ops/ms
Iteration  19: 100266.456 ops/ms
Iteration  20: 98647.819 ops/ms

Result : 83356.611 ?(95%) 5818.615 ?(99%) 7953.682 ops/ms
  Statistics: (min, avg, max) = (61134.342, 83356.611, 100266.456), stdev = 12432.698
  Confidence intervals: 95% [77537.996, 89175.226], 99% [75402.929, 91310.293]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 55303.603 ops/ms
# Warmup Iteration   2: 99138.646 ops/ms
# Warmup Iteration   3: 83467.421 ops/ms
# Warmup Iteration   4: 71989.361 ops/ms
# Warmup Iteration   5: 63321.846 ops/ms
# Warmup Iteration   6: 87991.368 ops/ms
# Warmup Iteration   7: 86085.367 ops/ms
# Warmup Iteration   8: 65722.904 ops/ms
# Warmup Iteration   9: 65607.793 ops/ms
# Warmup Iteration  10: 50601.096 ops/ms
# Warmup Iteration  11: 39510.843 ops/ms
# Warmup Iteration  12: 45158.415 ops/ms
# Warmup Iteration  13: 46003.434 ops/ms
# Warmup Iteration  14: 46597.430 ops/ms
# Warmup Iteration  15: 45277.634 ops/ms
# Warmup Iteration  16: 43344.758 ops/ms
# Warmup Iteration  17: 45260.666 ops/ms
# Warmup Iteration  18: 45733.386 ops/ms
# Warmup Iteration  19: 45889.057 ops/ms
# Warmup Iteration  20: 45917.665 ops/ms
Iteration   1: 45336.273 ops/ms
Iteration   2: 44557.089 ops/ms
Iteration   3: 45342.575 ops/ms
Iteration   4: 45601.491 ops/ms
Iteration   5: 46635.716 ops/ms
Iteration   6: 53382.064 ops/ms
Iteration   7: 46259.004 ops/ms
Iteration   8: 45323.535 ops/ms
Iteration   9: 45873.812 ops/ms
Iteration  10: 45848.727 ops/ms
Iteration  11: 44129.696 ops/ms
Iteration  12: 45116.350 ops/ms
Iteration  13: 45434.688 ops/ms
Iteration  14: 43798.859 ops/ms
Iteration  15: 46309.734 ops/ms
Iteration  16: 39313.110 ops/ms
Iteration  17: 37761.965 ops/ms
Iteration  18: 47241.384 ops/ms
Iteration  19: 46086.203 ops/ms
Iteration  20: 47800.472 ops/ms

Result : 45357.637 ?(95%) 1429.386 ?(99%) 1953.881 ops/ms
  Statistics: (min, avg, max) = (37761.965, 45357.637, 53382.064), stdev = 3054.184
  Confidence intervals: 95% [43928.252, 46787.023], 99% [43403.757, 47311.518]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 9.788 ops/ms
# Warmup Iteration   2: 26.510 ops/ms
# Warmup Iteration   3: 36.941 ops/ms
# Warmup Iteration   4: 41.765 ops/ms
# Warmup Iteration   5: 43.421 ops/ms
# Warmup Iteration   6: 44.105 ops/ms
# Warmup Iteration   7: 44.257 ops/ms
# Warmup Iteration   8: 45.389 ops/ms
# Warmup Iteration   9: 44.972 ops/ms
# Warmup Iteration  10: 46.495 ops/ms
# Warmup Iteration  11: 46.849 ops/ms
# Warmup Iteration  12: 46.463 ops/ms
# Warmup Iteration  13: 47.293 ops/ms
# Warmup Iteration  14: 47.318 ops/ms
# Warmup Iteration  15: 48.688 ops/ms
# Warmup Iteration  16: 50.086 ops/ms
# Warmup Iteration  17: 50.578 ops/ms
# Warmup Iteration  18: 50.518 ops/ms
# Warmup Iteration  19: 50.255 ops/ms
# Warmup Iteration  20: 50.688 ops/ms
Iteration   1: 50.361 ops/ms
Iteration   2: 50.474 ops/ms
Iteration   3: 50.302 ops/ms
Iteration   4: 50.739 ops/ms
Iteration   5: 50.430 ops/ms
Iteration   6: 50.558 ops/ms
Iteration   7: 50.361 ops/ms
Iteration   8: 50.685 ops/ms
Iteration   9: 50.730 ops/ms
Iteration  10: 50.475 ops/ms
Iteration  11: 50.780 ops/ms
Iteration  12: 50.784 ops/ms
Iteration  13: 50.452 ops/ms
Iteration  14: 50.766 ops/ms
Iteration  15: 50.495 ops/ms
Iteration  16: 50.523 ops/ms
Iteration  17: 50.563 ops/ms
Iteration  18: 50.535 ops/ms
Iteration  19: 50.573 ops/ms
Iteration  20: 47.050 ops/ms

Result : 50.382 ?(95%) 0.373 ?(99%) 0.510 ops/ms
  Statistics: (min, avg, max) = (47.050, 50.382, 50.784), stdev = 0.798
  Confidence intervals: 95% [50.008, 50.755], 99% [49.871, 50.892]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 12.242 ops/ms
# Warmup Iteration   2: 34.253 ops/ms
# Warmup Iteration   3: 41.911 ops/ms
# Warmup Iteration   4: 47.350 ops/ms
# Warmup Iteration   5: 49.132 ops/ms
# Warmup Iteration   6: 49.772 ops/ms
# Warmup Iteration   7: 49.802 ops/ms
# Warmup Iteration   8: 49.896 ops/ms
# Warmup Iteration   9: 49.982 ops/ms
# Warmup Iteration  10: 50.054 ops/ms
# Warmup Iteration  11: 50.036 ops/ms
# Warmup Iteration  12: 49.774 ops/ms
# Warmup Iteration  13: 47.748 ops/ms
# Warmup Iteration  14: 47.103 ops/ms
# Warmup Iteration  15: 46.965 ops/ms
# Warmup Iteration  16: 48.184 ops/ms
# Warmup Iteration  17: 49.791 ops/ms
# Warmup Iteration  18: 50.879 ops/ms
# Warmup Iteration  19: 51.178 ops/ms
# Warmup Iteration  20: 51.096 ops/ms
Iteration   1: 51.277 ops/ms
Iteration   2: 51.433 ops/ms
Iteration   3: 51.590 ops/ms
Iteration   4: 51.580 ops/ms
Iteration   5: 51.362 ops/ms
Iteration   6: 51.615 ops/ms
Iteration   7: 51.329 ops/ms
Iteration   8: 51.592 ops/ms
Iteration   9: 51.621 ops/ms
Iteration  10: 51.591 ops/ms
Iteration  11: 51.254 ops/ms
Iteration  12: 51.281 ops/ms
Iteration  13: 51.590 ops/ms
Iteration  14: 51.318 ops/ms
Iteration  15: 51.609 ops/ms
Iteration  16: 51.489 ops/ms
Iteration  17: 51.533 ops/ms
Iteration  18: 51.257 ops/ms
Iteration  19: 51.617 ops/ms
Iteration  20: 51.424 ops/ms

Result : 51.468 ?(95%) 0.066 ?(99%) 0.091 ops/ms
  Statistics: (min, avg, max) = (51.254, 51.468, 51.621), stdev = 0.142
  Confidence intervals: 95% [51.402, 51.535], 99% [51.377, 51.559]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 13.966 ops/ms
# Warmup Iteration   2: 36.398 ops/ms
# Warmup Iteration   3: 43.820 ops/ms
# Warmup Iteration   4: 47.881 ops/ms
# Warmup Iteration   5: 49.016 ops/ms
# Warmup Iteration   6: 49.573 ops/ms
# Warmup Iteration   7: 49.584 ops/ms
# Warmup Iteration   8: 49.584 ops/ms
# Warmup Iteration   9: 49.686 ops/ms
# Warmup Iteration  10: 49.733 ops/ms
# Warmup Iteration  11: 49.790 ops/ms
# Warmup Iteration  12: 49.813 ops/ms
# Warmup Iteration  13: 49.730 ops/ms
# Warmup Iteration  14: 49.505 ops/ms
# Warmup Iteration  15: 49.824 ops/ms
# Warmup Iteration  16: 49.390 ops/ms
# Warmup Iteration  17: 49.867 ops/ms
# Warmup Iteration  18: 49.893 ops/ms
# Warmup Iteration  19: 49.855 ops/ms
# Warmup Iteration  20: 49.745 ops/ms
Iteration   1: 49.252 ops/ms
Iteration   2: 49.859 ops/ms
Iteration   3: 49.828 ops/ms
Iteration   4: 49.643 ops/ms
Iteration   5: 49.829 ops/ms
Iteration   6: 49.863 ops/ms
Iteration   7: 49.529 ops/ms
Iteration   8: 49.576 ops/ms
Iteration   9: 49.238 ops/ms
Iteration  10: 49.523 ops/ms
Iteration  11: 49.444 ops/ms
Iteration  12: 49.533 ops/ms
Iteration  13: 49.802 ops/ms
Iteration  14: 49.572 ops/ms
Iteration  15: 49.198 ops/ms
Iteration  16: 49.745 ops/ms
Iteration  17: 49.516 ops/ms
Iteration  18: 49.775 ops/ms
Iteration  19: 49.788 ops/ms
Iteration  20: 49.736 ops/ms

Result : 49.612 ?(95%) 0.099 ?(99%) 0.135 ops/ms
  Statistics: (min, avg, max) = (49.198, 49.612, 49.863), stdev = 0.211
  Confidence intervals: 95% [49.514, 49.711], 99% [49.477, 49.748]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 13.791 ops/ms
# Warmup Iteration   2: 35.343 ops/ms
# Warmup Iteration   3: 43.574 ops/ms
# Warmup Iteration   4: 47.639 ops/ms
# Warmup Iteration   5: 48.442 ops/ms
# Warmup Iteration   6: 48.839 ops/ms
# Warmup Iteration   7: 48.489 ops/ms
# Warmup Iteration   8: 49.055 ops/ms
# Warmup Iteration   9: 49.043 ops/ms
# Warmup Iteration  10: 48.939 ops/ms
# Warmup Iteration  11: 49.043 ops/ms
# Warmup Iteration  12: 48.817 ops/ms
# Warmup Iteration  13: 49.192 ops/ms
# Warmup Iteration  14: 49.215 ops/ms
# Warmup Iteration  15: 48.774 ops/ms
# Warmup Iteration  16: 49.202 ops/ms
# Warmup Iteration  17: 48.856 ops/ms
# Warmup Iteration  18: 48.736 ops/ms
# Warmup Iteration  19: 48.794 ops/ms
# Warmup Iteration  20: 48.842 ops/ms
Iteration   1: 48.860 ops/ms
Iteration   2: 49.063 ops/ms
Iteration   3: 49.052 ops/ms
Iteration   4: 48.450 ops/ms
Iteration   5: 49.002 ops/ms
Iteration   6: 48.879 ops/ms
Iteration   7: 49.195 ops/ms
Iteration   8: 49.051 ops/ms
Iteration   9: 49.015 ops/ms
Iteration  10: 49.025 ops/ms
Iteration  11: 48.954 ops/ms
Iteration  12: 49.071 ops/ms
Iteration  13: 49.217 ops/ms
Iteration  14: 48.860 ops/ms
Iteration  15: 49.072 ops/ms
Iteration  16: 49.011 ops/ms
Iteration  17: 48.876 ops/ms
Iteration  18: 49.024 ops/ms
Iteration  19: 48.711 ops/ms
Iteration  20: 49.174 ops/ms

Result : 48.978 ?(95%) 0.082 ?(99%) 0.112 ops/ms
  Statistics: (min, avg, max) = (48.450, 48.978, 49.217), stdev = 0.175
  Confidence intervals: 95% [48.896, 49.060], 99% [48.866, 49.090]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 14.633 ops/ms
# Warmup Iteration   2: 37.138 ops/ms
# Warmup Iteration   3: 45.252 ops/ms
# Warmup Iteration   4: 49.341 ops/ms
# Warmup Iteration   5: 50.754 ops/ms
# Warmup Iteration   6: 51.172 ops/ms
# Warmup Iteration   7: 50.409 ops/ms
# Warmup Iteration   8: 48.871 ops/ms
# Warmup Iteration   9: 49.336 ops/ms
# Warmup Iteration  10: 50.663 ops/ms
# Warmup Iteration  11: 51.081 ops/ms
# Warmup Iteration  12: 50.949 ops/ms
# Warmup Iteration  13: 51.334 ops/ms
# Warmup Iteration  14: 50.632 ops/ms
# Warmup Iteration  15: 51.171 ops/ms
# Warmup Iteration  16: 50.997 ops/ms
# Warmup Iteration  17: 50.783 ops/ms
# Warmup Iteration  18: 51.070 ops/ms
# Warmup Iteration  19: 51.211 ops/ms
# Warmup Iteration  20: 50.810 ops/ms
Iteration   1: 50.879 ops/ms
Iteration   2: 50.896 ops/ms
Iteration   3: 51.107 ops/ms
Iteration   4: 51.212 ops/ms
Iteration   5: 51.248 ops/ms
Iteration   6: 51.040 ops/ms
Iteration   7: 51.199 ops/ms
Iteration   8: 50.895 ops/ms
Iteration   9: 50.701 ops/ms
Iteration  10: 50.774 ops/ms
Iteration  11: 51.165 ops/ms
Iteration  12: 50.969 ops/ms
Iteration  13: 50.904 ops/ms
Iteration  14: 50.742 ops/ms
Iteration  15: 50.940 ops/ms
Iteration  16: 50.811 ops/ms
Iteration  17: 50.954 ops/ms
Iteration  18: 51.234 ops/ms
Iteration  19: 51.188 ops/ms
Iteration  20: 51.239 ops/ms

Result : 51.005 ?(95%) 0.085 ?(99%) 0.116 ops/ms
  Statistics: (min, avg, max) = (50.701, 51.005, 51.248), stdev = 0.182
  Confidence intervals: 95% [50.920, 51.090], 99% [50.889, 51.121]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.830 ops/ms
# Warmup Iteration   2: 39.082 ops/ms
# Warmup Iteration   3: 47.020 ops/ms
# Warmup Iteration   4: 51.226 ops/ms
# Warmup Iteration   5: 52.057 ops/ms
# Warmup Iteration   6: 52.806 ops/ms
# Warmup Iteration   7: 52.655 ops/ms
# Warmup Iteration   8: 52.674 ops/ms
# Warmup Iteration   9: 52.981 ops/ms
# Warmup Iteration  10: 52.985 ops/ms
# Warmup Iteration  11: 53.020 ops/ms
# Warmup Iteration  12: 52.556 ops/ms
# Warmup Iteration  13: 52.673 ops/ms
# Warmup Iteration  14: 52.796 ops/ms
# Warmup Iteration  15: 52.902 ops/ms
# Warmup Iteration  16: 52.995 ops/ms
# Warmup Iteration  17: 52.779 ops/ms
# Warmup Iteration  18: 52.594 ops/ms
# Warmup Iteration  19: 52.725 ops/ms
# Warmup Iteration  20: 52.748 ops/ms
Iteration   1: 52.413 ops/ms
Iteration   2: 52.784 ops/ms
Iteration   3: 52.533 ops/ms
Iteration   4: 52.108 ops/ms
Iteration   5: 52.703 ops/ms
Iteration   6: 52.782 ops/ms
Iteration   7: 52.510 ops/ms
Iteration   8: 52.525 ops/ms
Iteration   9: 52.757 ops/ms
Iteration  10: 52.345 ops/ms
Iteration  11: 52.737 ops/ms
Iteration  12: 52.756 ops/ms
Iteration  13: 52.611 ops/ms
Iteration  14: 52.713 ops/ms
Iteration  15: 52.382 ops/ms
Iteration  16: 52.672 ops/ms
Iteration  17: 52.510 ops/ms
Iteration  18: 52.748 ops/ms
Iteration  19: 52.794 ops/ms
Iteration  20: 52.737 ops/ms

Result : 52.606 ?(95%) 0.087 ?(99%) 0.119 ops/ms
  Statistics: (min, avg, max) = (52.108, 52.606, 52.794), stdev = 0.186
  Confidence intervals: 95% [52.519, 52.693], 99% [52.487, 52.725]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.930 ops/ms
# Warmup Iteration   2: 39.050 ops/ms
# Warmup Iteration   3: 46.851 ops/ms
# Warmup Iteration   4: 50.899 ops/ms
# Warmup Iteration   5: 52.241 ops/ms
# Warmup Iteration   6: 52.561 ops/ms
# Warmup Iteration   7: 52.734 ops/ms
# Warmup Iteration   8: 52.418 ops/ms
# Warmup Iteration   9: 52.664 ops/ms
# Warmup Iteration  10: 52.845 ops/ms
# Warmup Iteration  11: 52.830 ops/ms
# Warmup Iteration  12: 52.891 ops/ms
# Warmup Iteration  13: 52.726 ops/ms
# Warmup Iteration  14: 52.161 ops/ms
# Warmup Iteration  15: 52.454 ops/ms
# Warmup Iteration  16: 52.481 ops/ms
# Warmup Iteration  17: 52.782 ops/ms
# Warmup Iteration  18: 52.602 ops/ms
# Warmup Iteration  19: 52.371 ops/ms
# Warmup Iteration  20: 52.806 ops/ms
Iteration   1: 52.831 ops/ms
Iteration   2: 52.579 ops/ms
Iteration   3: 52.465 ops/ms
Iteration   4: 52.612 ops/ms
Iteration   5: 52.617 ops/ms
Iteration   6: 52.614 ops/ms
Iteration   7: 52.785 ops/ms
Iteration   8: 52.422 ops/ms
Iteration   9: 52.776 ops/ms
Iteration  10: 52.485 ops/ms
Iteration  11: 52.522 ops/ms
Iteration  12: 52.643 ops/ms
Iteration  13: 52.544 ops/ms
Iteration  14: 52.694 ops/ms
Iteration  15: 52.544 ops/ms
Iteration  16: 52.832 ops/ms
Iteration  17: 52.586 ops/ms
Iteration  18: 52.794 ops/ms
Iteration  19: 52.547 ops/ms
Iteration  20: 52.847 ops/ms

Result : 52.637 ?(95%) 0.062 ?(99%) 0.085 ops/ms
  Statistics: (min, avg, max) = (52.422, 52.637, 52.847), stdev = 0.133
  Confidence intervals: 95% [52.575, 52.699], 99% [52.552, 52.722]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.923 ops/ms
# Warmup Iteration   2: 39.310 ops/ms
# Warmup Iteration   3: 47.108 ops/ms
# Warmup Iteration   4: 51.375 ops/ms
# Warmup Iteration   5: 52.757 ops/ms
# Warmup Iteration   6: 52.267 ops/ms
# Warmup Iteration   7: 50.388 ops/ms
# Warmup Iteration   8: 50.805 ops/ms
# Warmup Iteration   9: 52.495 ops/ms
# Warmup Iteration  10: 53.060 ops/ms
# Warmup Iteration  11: 52.624 ops/ms
# Warmup Iteration  12: 53.198 ops/ms
# Warmup Iteration  13: 50.848 ops/ms
# Warmup Iteration  14: 53.161 ops/ms
# Warmup Iteration  15: 53.027 ops/ms
# Warmup Iteration  16: 52.953 ops/ms
# Warmup Iteration  17: 53.221 ops/ms
# Warmup Iteration  18: 53.290 ops/ms
# Warmup Iteration  19: 53.275 ops/ms
# Warmup Iteration  20: 53.064 ops/ms
Iteration   1: 53.213 ops/ms
Iteration   2: 53.345 ops/ms
Iteration   3: 53.044 ops/ms
Iteration   4: 53.374 ops/ms
Iteration   5: 53.042 ops/ms
Iteration   6: 52.748 ops/ms
Iteration   7: 53.037 ops/ms
Iteration   8: 51.681 ops/ms
Iteration   9: 53.008 ops/ms
Iteration  10: 51.795 ops/ms
Iteration  11: 53.106 ops/ms
Iteration  12: 52.841 ops/ms
Iteration  13: 53.354 ops/ms
Iteration  14: 53.379 ops/ms
Iteration  15: 52.628 ops/ms
Iteration  16: 53.419 ops/ms
Iteration  17: 53.121 ops/ms
Iteration  18: 53.097 ops/ms
Iteration  19: 53.066 ops/ms
Iteration  20: 53.368 ops/ms

Result : 52.983 ?(95%) 0.224 ?(99%) 0.306 ops/ms
  Statistics: (min, avg, max) = (51.681, 52.983, 53.419), stdev = 0.478
  Confidence intervals: 95% [52.759, 53.207], 99% [52.677, 53.289]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 17.877 ops/ms
# Warmup Iteration   2: 39.532 ops/ms
# Warmup Iteration   3: 48.008 ops/ms
# Warmup Iteration   4: 52.431 ops/ms
# Warmup Iteration   5: 53.479 ops/ms
# Warmup Iteration   6: 54.115 ops/ms
# Warmup Iteration   7: 54.173 ops/ms
# Warmup Iteration   8: 53.909 ops/ms
# Warmup Iteration   9: 54.314 ops/ms
# Warmup Iteration  10: 54.340 ops/ms
# Warmup Iteration  11: 54.223 ops/ms
# Warmup Iteration  12: 54.182 ops/ms
# Warmup Iteration  13: 53.944 ops/ms
# Warmup Iteration  14: 54.138 ops/ms
# Warmup Iteration  15: 54.376 ops/ms
# Warmup Iteration  16: 54.389 ops/ms
# Warmup Iteration  17: 54.131 ops/ms
# Warmup Iteration  18: 53.828 ops/ms
# Warmup Iteration  19: 53.993 ops/ms
# Warmup Iteration  20: 53.919 ops/ms
Iteration   1: 54.237 ops/ms
Iteration   2: 53.853 ops/ms
Iteration   3: 54.351 ops/ms
Iteration   4: 53.946 ops/ms
Iteration   5: 54.096 ops/ms
Iteration   6: 54.042 ops/ms
Iteration   7: 54.050 ops/ms
Iteration   8: 54.171 ops/ms
Iteration   9: 53.590 ops/ms
Iteration  10: 54.061 ops/ms
Iteration  11: 54.235 ops/ms
Iteration  12: 54.045 ops/ms
Iteration  13: 54.062 ops/ms
Iteration  14: 53.852 ops/ms
Iteration  15: 54.016 ops/ms
Iteration  16: 54.004 ops/ms
Iteration  17: 54.070 ops/ms
Iteration  18: 54.214 ops/ms
Iteration  19: 54.110 ops/ms
Iteration  20: 54.350 ops/ms

Result : 54.068 ?(95%) 0.083 ?(99%) 0.113 ops/ms
  Statistics: (min, avg, max) = (53.590, 54.068, 54.351), stdev = 0.177
  Confidence intervals: 95% [53.985, 54.151], 99% [53.955, 54.181]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 18.034 ops/ms
# Warmup Iteration   2: 39.871 ops/ms
# Warmup Iteration   3: 47.372 ops/ms
# Warmup Iteration   4: 51.661 ops/ms
# Warmup Iteration   5: 53.114 ops/ms
# Warmup Iteration   6: 53.232 ops/ms
# Warmup Iteration   7: 53.249 ops/ms
# Warmup Iteration   8: 53.522 ops/ms
# Warmup Iteration   9: 53.347 ops/ms
# Warmup Iteration  10: 53.671 ops/ms
# Warmup Iteration  11: 53.689 ops/ms
# Warmup Iteration  12: 53.353 ops/ms
# Warmup Iteration  13: 53.454 ops/ms
# Warmup Iteration  14: 53.535 ops/ms
# Warmup Iteration  15: 53.483 ops/ms
# Warmup Iteration  16: 53.543 ops/ms
# Warmup Iteration  17: 53.439 ops/ms
# Warmup Iteration  18: 53.473 ops/ms
# Warmup Iteration  19: 53.268 ops/ms
# Warmup Iteration  20: 53.415 ops/ms
Iteration   1: 53.287 ops/ms
Iteration   2: 53.183 ops/ms
Iteration   3: 53.444 ops/ms
Iteration   4: 53.474 ops/ms
Iteration   5: 53.262 ops/ms
Iteration   6: 53.213 ops/ms
Iteration   7: 53.365 ops/ms
Iteration   8: 53.153 ops/ms
Iteration   9: 53.056 ops/ms
Iteration  10: 53.315 ops/ms
Iteration  11: 53.226 ops/ms
Iteration  12: 53.395 ops/ms
Iteration  13: 53.034 ops/ms
Iteration  14: 52.982 ops/ms
Iteration  15: 52.939 ops/ms
Iteration  16: 53.358 ops/ms
Iteration  17: 53.122 ops/ms
Iteration  18: 53.378 ops/ms
Iteration  19: 53.257 ops/ms
Iteration  20: 53.040 ops/ms

Result : 53.224 ?(95%) 0.074 ?(99%) 0.101 ops/ms
  Statistics: (min, avg, max) = (52.939, 53.224, 53.474), stdev = 0.158
  Confidence intervals: 95% [53.150, 53.298], 99% [53.123, 53.325]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 23.252 ops/ms
# Warmup Iteration   2: 65.000 ops/ms
# Warmup Iteration   3: 78.558 ops/ms
# Warmup Iteration   4: 85.262 ops/ms
# Warmup Iteration   5: 87.207 ops/ms
# Warmup Iteration   6: 87.852 ops/ms
# Warmup Iteration   7: 87.884 ops/ms
# Warmup Iteration   8: 87.715 ops/ms
# Warmup Iteration   9: 87.568 ops/ms
# Warmup Iteration  10: 87.521 ops/ms
# Warmup Iteration  11: 87.734 ops/ms
# Warmup Iteration  12: 87.493 ops/ms
# Warmup Iteration  13: 88.110 ops/ms
# Warmup Iteration  14: 87.558 ops/ms
# Warmup Iteration  15: 87.895 ops/ms
# Warmup Iteration  16: 87.811 ops/ms
# Warmup Iteration  17: 87.763 ops/ms
# Warmup Iteration  18: 87.777 ops/ms
# Warmup Iteration  19: 88.134 ops/ms
# Warmup Iteration  20: 87.708 ops/ms
Iteration   1: 88.089 ops/ms
Iteration   2: 87.404 ops/ms
Iteration   3: 87.644 ops/ms
Iteration   4: 87.362 ops/ms
Iteration   5: 87.819 ops/ms
Iteration   6: 87.789 ops/ms
Iteration   7: 87.804 ops/ms
Iteration   8: 87.869 ops/ms
Iteration   9: 87.956 ops/ms
Iteration  10: 88.187 ops/ms
Iteration  11: 87.386 ops/ms
Iteration  12: 87.864 ops/ms
Iteration  13: 88.159 ops/ms
Iteration  14: 87.781 ops/ms
Iteration  15: 87.787 ops/ms
Iteration  16: 88.096 ops/ms
Iteration  17: 87.998 ops/ms
Iteration  18: 87.272 ops/ms
Iteration  19: 87.658 ops/ms
Iteration  20: 88.153 ops/ms

Result : 87.804 ?(95%) 0.131 ?(99%) 0.179 ops/ms
  Statistics: (min, avg, max) = (87.272, 87.804, 88.187), stdev = 0.280
  Confidence intervals: 95% [87.673, 87.935], 99% [87.625, 87.983]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 23.623 ops/ms
# Warmup Iteration   2: 64.767 ops/ms
# Warmup Iteration   3: 77.974 ops/ms
# Warmup Iteration   4: 83.399 ops/ms
# Warmup Iteration   5: 85.545 ops/ms
# Warmup Iteration   6: 85.921 ops/ms
# Warmup Iteration   7: 86.224 ops/ms
# Warmup Iteration   8: 86.393 ops/ms
# Warmup Iteration   9: 85.326 ops/ms
# Warmup Iteration  10: 86.035 ops/ms
# Warmup Iteration  11: 85.964 ops/ms
# Warmup Iteration  12: 85.991 ops/ms
# Warmup Iteration  13: 86.228 ops/ms
# Warmup Iteration  14: 86.400 ops/ms
# Warmup Iteration  15: 85.901 ops/ms
# Warmup Iteration  16: 85.921 ops/ms
# Warmup Iteration  17: 85.864 ops/ms
# Warmup Iteration  18: 86.248 ops/ms
# Warmup Iteration  19: 85.810 ops/ms
# Warmup Iteration  20: 85.427 ops/ms
Iteration   1: 86.259 ops/ms
Iteration   2: 85.697 ops/ms
Iteration   3: 86.181 ops/ms
Iteration   4: 86.345 ops/ms
Iteration   5: 86.212 ops/ms
Iteration   6: 85.857 ops/ms
Iteration   7: 86.203 ops/ms
Iteration   8: 85.852 ops/ms
Iteration   9: 85.514 ops/ms
Iteration  10: 85.417 ops/ms
Iteration  11: 85.974 ops/ms
Iteration  12: 86.350 ops/ms
Iteration  13: 86.418 ops/ms
Iteration  14: 86.094 ops/ms
Iteration  15: 86.255 ops/ms
Iteration  16: 85.422 ops/ms
Iteration  17: 86.067 ops/ms
Iteration  18: 85.975 ops/ms
Iteration  19: 86.390 ops/ms
Iteration  20: 86.380 ops/ms

Result : 86.043 ?(95%) 0.151 ?(99%) 0.207 ops/ms
  Statistics: (min, avg, max) = (85.417, 86.043, 86.418), stdev = 0.323
  Confidence intervals: 95% [85.892, 86.194], 99% [85.836, 86.250]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.434 ops/ms
# Warmup Iteration   2: 66.903 ops/ms
# Warmup Iteration   3: 80.674 ops/ms
# Warmup Iteration   4: 86.620 ops/ms
# Warmup Iteration   5: 88.064 ops/ms
# Warmup Iteration   6: 88.934 ops/ms
# Warmup Iteration   7: 89.247 ops/ms
# Warmup Iteration   8: 89.166 ops/ms
# Warmup Iteration   9: 89.220 ops/ms
# Warmup Iteration  10: 89.138 ops/ms
# Warmup Iteration  11: 88.665 ops/ms
# Warmup Iteration  12: 89.329 ops/ms
# Warmup Iteration  13: 89.305 ops/ms
# Warmup Iteration  14: 89.200 ops/ms
# Warmup Iteration  15: 89.148 ops/ms
# Warmup Iteration  16: 89.326 ops/ms
# Warmup Iteration  17: 88.929 ops/ms
# Warmup Iteration  18: 88.893 ops/ms
# Warmup Iteration  19: 89.270 ops/ms
# Warmup Iteration  20: 88.848 ops/ms
Iteration   1: 88.939 ops/ms
Iteration   2: 88.896 ops/ms
Iteration   3: 89.277 ops/ms
Iteration   4: 88.843 ops/ms
Iteration   5: 89.250 ops/ms
Iteration   6: 88.873 ops/ms
Iteration   7: 88.904 ops/ms
Iteration   8: 89.274 ops/ms
Iteration   9: 89.139 ops/ms
Iteration  10: 89.271 ops/ms
Iteration  11: 88.866 ops/ms
Iteration  12: 88.368 ops/ms
Iteration  13: 89.164 ops/ms
Iteration  14: 89.281 ops/ms
Iteration  15: 88.972 ops/ms
Iteration  16: 89.100 ops/ms
Iteration  17: 88.803 ops/ms
Iteration  18: 89.179 ops/ms
Iteration  19: 88.921 ops/ms
Iteration  20: 89.204 ops/ms

Result : 89.026 ?(95%) 0.108 ?(99%) 0.148 ops/ms
  Statistics: (min, avg, max) = (88.368, 89.026, 89.281), stdev = 0.231
  Confidence intervals: 95% [88.918, 89.134], 99% [88.879, 89.174]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 23.407 ops/ms
# Warmup Iteration   2: 63.253 ops/ms
# Warmup Iteration   3: 76.068 ops/ms
# Warmup Iteration   4: 81.823 ops/ms
# Warmup Iteration   5: 83.169 ops/ms
# Warmup Iteration   6: 83.341 ops/ms
# Warmup Iteration   7: 83.549 ops/ms
# Warmup Iteration   8: 83.653 ops/ms
# Warmup Iteration   9: 83.941 ops/ms
# Warmup Iteration  10: 83.580 ops/ms
# Warmup Iteration  11: 83.545 ops/ms
# Warmup Iteration  12: 84.006 ops/ms
# Warmup Iteration  13: 83.706 ops/ms
# Warmup Iteration  14: 84.059 ops/ms
# Warmup Iteration  15: 83.962 ops/ms
# Warmup Iteration  16: 84.085 ops/ms
# Warmup Iteration  17: 84.153 ops/ms
# Warmup Iteration  18: 84.226 ops/ms
# Warmup Iteration  19: 83.607 ops/ms
# Warmup Iteration  20: 84.161 ops/ms
Iteration   1: 84.246 ops/ms
Iteration   2: 84.173 ops/ms
Iteration   3: 83.528 ops/ms
Iteration   4: 84.209 ops/ms
Iteration   5: 83.676 ops/ms
Iteration   6: 84.203 ops/ms
Iteration   7: 83.918 ops/ms
Iteration   8: 84.236 ops/ms
Iteration   9: 83.950 ops/ms
Iteration  10: 83.736 ops/ms
Iteration  11: 84.182 ops/ms
Iteration  12: 84.106 ops/ms
Iteration  13: 83.257 ops/ms
Iteration  14: 83.993 ops/ms
Iteration  15: 84.302 ops/ms
Iteration  16: 84.241 ops/ms
Iteration  17: 84.215 ops/ms
Iteration  18: 84.411 ops/ms
Iteration  19: 84.312 ops/ms
Iteration  20: 84.123 ops/ms

Result : 84.051 ?(95%) 0.138 ?(99%) 0.189 ops/ms
  Statistics: (min, avg, max) = (83.257, 84.051, 84.411), stdev = 0.296
  Confidence intervals: 95% [83.912, 84.189], 99% [83.862, 84.240]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 24.592 ops/ms
# Warmup Iteration   2: 65.422 ops/ms
# Warmup Iteration   3: 78.766 ops/ms
# Warmup Iteration   4: 84.708 ops/ms
# Warmup Iteration   5: 85.771 ops/ms
# Warmup Iteration   6: 86.722 ops/ms
# Warmup Iteration   7: 86.867 ops/ms
# Warmup Iteration   8: 86.415 ops/ms
# Warmup Iteration   9: 86.583 ops/ms
# Warmup Iteration  10: 86.594 ops/ms
# Warmup Iteration  11: 86.468 ops/ms
# Warmup Iteration  12: 84.945 ops/ms
# Warmup Iteration  13: 86.785 ops/ms
# Warmup Iteration  14: 87.088 ops/ms
# Warmup Iteration  15: 86.579 ops/ms
# Warmup Iteration  16: 86.555 ops/ms
# Warmup Iteration  17: 86.854 ops/ms
# Warmup Iteration  18: 86.620 ops/ms
# Warmup Iteration  19: 86.496 ops/ms
# Warmup Iteration  20: 86.934 ops/ms
Iteration   1: 86.883 ops/ms
Iteration   2: 86.284 ops/ms
Iteration   3: 86.876 ops/ms
Iteration   4: 86.972 ops/ms
Iteration   5: 86.688 ops/ms
Iteration   6: 86.428 ops/ms
Iteration   7: 86.812 ops/ms
Iteration   8: 86.837 ops/ms
Iteration   9: 86.325 ops/ms
Iteration  10: 86.461 ops/ms
Iteration  11: 86.881 ops/ms
Iteration  12: 86.810 ops/ms
Iteration  13: 86.450 ops/ms
Iteration  14: 86.692 ops/ms
Iteration  15: 86.842 ops/ms
Iteration  16: 86.457 ops/ms
Iteration  17: 86.593 ops/ms
Iteration  18: 86.523 ops/ms
Iteration  19: 86.833 ops/ms
Iteration  20: 86.210 ops/ms

Result : 86.643 ?(95%) 0.109 ?(99%) 0.149 ops/ms
  Statistics: (min, avg, max) = (86.210, 86.643, 86.972), stdev = 0.234
  Confidence intervals: 95% [86.534, 86.752], 99% [86.493, 86.792]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36921.217 ops/ms
# Warmup Iteration   2: 52543.917 ops/ms
# Warmup Iteration   3: 55457.113 ops/ms
# Warmup Iteration   4: 55255.000 ops/ms
# Warmup Iteration   5: 55194.979 ops/ms
# Warmup Iteration   6: 55377.369 ops/ms
# Warmup Iteration   7: 55475.575 ops/ms
# Warmup Iteration   8: 55054.284 ops/ms
# Warmup Iteration   9: 55613.661 ops/ms
# Warmup Iteration  10: 54762.649 ops/ms
# Warmup Iteration  11: 56298.628 ops/ms
# Warmup Iteration  12: 56804.276 ops/ms
# Warmup Iteration  13: 56784.506 ops/ms
# Warmup Iteration  14: 56097.440 ops/ms
# Warmup Iteration  15: 55367.013 ops/ms
# Warmup Iteration  16: 56234.835 ops/ms
# Warmup Iteration  17: 55788.108 ops/ms
# Warmup Iteration  18: 56659.357 ops/ms
# Warmup Iteration  19: 56963.635 ops/ms
# Warmup Iteration  20: 56626.171 ops/ms
Iteration   1: 55771.979 ops/ms
Iteration   2: 56789.416 ops/ms
Iteration   3: 56956.627 ops/ms
Iteration   4: 56659.396 ops/ms
Iteration   5: 55867.745 ops/ms
Iteration   6: 56831.978 ops/ms
Iteration   7: 56893.203 ops/ms
Iteration   8: 56143.400 ops/ms
Iteration   9: 56623.839 ops/ms
Iteration  10: 56865.462 ops/ms
Iteration  11: 56649.289 ops/ms
Iteration  12: 56108.472 ops/ms
Iteration  13: 57116.008 ops/ms
Iteration  14: 57013.535 ops/ms
Iteration  15: 56248.571 ops/ms
Iteration  16: 56364.357 ops/ms
Iteration  17: 56285.778 ops/ms
Iteration  18: 56780.765 ops/ms
Iteration  19: 55919.880 ops/ms
Iteration  20: 56956.925 ops/ms

Result : 56542.331 ?(95%) 195.720 ?(99%) 267.537 ops/ms
  Statistics: (min, avg, max) = (55771.979, 56542.331, 57116.008), stdev = 418.198
  Confidence intervals: 95% [56346.611, 56738.052], 99% [56274.794, 56809.869]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 35778.845 ops/ms
# Warmup Iteration   2: 54570.769 ops/ms
# Warmup Iteration   3: 55293.981 ops/ms
# Warmup Iteration   4: 56748.216 ops/ms
# Warmup Iteration   5: 56250.928 ops/ms
# Warmup Iteration   6: 56056.520 ops/ms
# Warmup Iteration   7: 56757.736 ops/ms
# Warmup Iteration   8: 56221.554 ops/ms
# Warmup Iteration   9: 56325.448 ops/ms
# Warmup Iteration  10: 55785.523 ops/ms
# Warmup Iteration  11: 56337.445 ops/ms
# Warmup Iteration  12: 56398.109 ops/ms
# Warmup Iteration  13: 56148.514 ops/ms
# Warmup Iteration  14: 56497.886 ops/ms
# Warmup Iteration  15: 55830.410 ops/ms
# Warmup Iteration  16: 55329.207 ops/ms
# Warmup Iteration  17: 56804.584 ops/ms
# Warmup Iteration  18: 56570.413 ops/ms
# Warmup Iteration  19: 56725.140 ops/ms
# Warmup Iteration  20: 56422.314 ops/ms
Iteration   1: 56148.771 ops/ms
Iteration   2: 56359.837 ops/ms
Iteration   3: 56371.337 ops/ms
Iteration   4: 56129.091 ops/ms
Iteration   5: 56661.086 ops/ms
Iteration   6: 56558.611 ops/ms
Iteration   7: 56536.255 ops/ms
Iteration   8: 55628.929 ops/ms
Iteration   9: 56047.545 ops/ms
Iteration  10: 56278.969 ops/ms
Iteration  11: 55845.680 ops/ms
Iteration  12: 56536.970 ops/ms
Iteration  13: 56591.516 ops/ms
Iteration  14: 56495.042 ops/ms
Iteration  15: 55525.514 ops/ms
Iteration  16: 56226.785 ops/ms
Iteration  17: 56702.054 ops/ms
Iteration  18: 56047.450 ops/ms
Iteration  19: 56578.330 ops/ms
Iteration  20: 56291.054 ops/ms

Result : 56278.041 ?(95%) 156.052 ?(99%) 213.314 ops/ms
  Statistics: (min, avg, max) = (55525.514, 56278.041, 56702.054), stdev = 333.439
  Confidence intervals: 95% [56121.989, 56434.094], 99% [56064.728, 56491.355]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36774.787 ops/ms
# Warmup Iteration   2: 52863.012 ops/ms
# Warmup Iteration   3: 56503.717 ops/ms
# Warmup Iteration   4: 56961.264 ops/ms
# Warmup Iteration   5: 56788.377 ops/ms
# Warmup Iteration   6: 56615.044 ops/ms
# Warmup Iteration   7: 56835.979 ops/ms
# Warmup Iteration   8: 56888.835 ops/ms
# Warmup Iteration   9: 56145.082 ops/ms
# Warmup Iteration  10: 56643.034 ops/ms
# Warmup Iteration  11: 56582.670 ops/ms
# Warmup Iteration  12: 56877.605 ops/ms
# Warmup Iteration  13: 56606.235 ops/ms
# Warmup Iteration  14: 56928.817 ops/ms
# Warmup Iteration  15: 56934.195 ops/ms
# Warmup Iteration  16: 57124.233 ops/ms
# Warmup Iteration  17: 56234.529 ops/ms
# Warmup Iteration  18: 56685.437 ops/ms
# Warmup Iteration  19: 57150.905 ops/ms
# Warmup Iteration  20: 56464.454 ops/ms
Iteration   1: 56591.889 ops/ms
Iteration   2: 56627.854 ops/ms
Iteration   3: 56691.158 ops/ms
Iteration   4: 55850.672 ops/ms
Iteration   5: 56556.385 ops/ms
Iteration   6: 57001.541 ops/ms
Iteration   7: 57149.254 ops/ms
Iteration   8: 56781.099 ops/ms
Iteration   9: 56922.466 ops/ms
Iteration  10: 56902.836 ops/ms
Iteration  11: 56922.247 ops/ms
Iteration  12: 56402.319 ops/ms
Iteration  13: 56923.853 ops/ms
Iteration  14: 56675.653 ops/ms
Iteration  15: 56163.834 ops/ms
Iteration  16: 57191.098 ops/ms
Iteration  17: 57022.861 ops/ms
Iteration  18: 57194.227 ops/ms
Iteration  19: 55969.017 ops/ms
Iteration  20: 56944.644 ops/ms

Result : 56724.245 ?(95%) 179.573 ?(99%) 245.465 ops/ms
  Statistics: (min, avg, max) = (55850.672, 56724.245, 57194.227), stdev = 383.695
  Confidence intervals: 95% [56544.673, 56903.818], 99% [56478.781, 56969.710]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36823.604 ops/ms
# Warmup Iteration   2: 53442.296 ops/ms
# Warmup Iteration   3: 56309.299 ops/ms
# Warmup Iteration   4: 56946.619 ops/ms
# Warmup Iteration   5: 57053.033 ops/ms
# Warmup Iteration   6: 57143.163 ops/ms
# Warmup Iteration   7: 56389.476 ops/ms
# Warmup Iteration   8: 56840.310 ops/ms
# Warmup Iteration   9: 57114.217 ops/ms
# Warmup Iteration  10: 56712.653 ops/ms
# Warmup Iteration  11: 56898.576 ops/ms
# Warmup Iteration  12: 56869.889 ops/ms
# Warmup Iteration  13: 56607.013 ops/ms
# Warmup Iteration  14: 56304.109 ops/ms
# Warmup Iteration  15: 56858.750 ops/ms
# Warmup Iteration  16: 56568.134 ops/ms
# Warmup Iteration  17: 56387.576 ops/ms
# Warmup Iteration  18: 57209.406 ops/ms
# Warmup Iteration  19: 56912.707 ops/ms
# Warmup Iteration  20: 57137.697 ops/ms
Iteration   1: 57024.216 ops/ms
Iteration   2: 56936.553 ops/ms
Iteration   3: 56367.656 ops/ms
Iteration   4: 56626.435 ops/ms
Iteration   5: 55731.582 ops/ms
Iteration   6: 57225.833 ops/ms
Iteration   7: 56616.311 ops/ms
Iteration   8: 56671.881 ops/ms
Iteration   9: 56552.946 ops/ms
Iteration  10: 56522.221 ops/ms
Iteration  11: 57225.497 ops/ms
Iteration  12: 56676.441 ops/ms
Iteration  13: 56593.694 ops/ms
Iteration  14: 57231.127 ops/ms
Iteration  15: 57026.910 ops/ms
Iteration  16: 56938.468 ops/ms
Iteration  17: 56373.036 ops/ms
Iteration  18: 56773.634 ops/ms
Iteration  19: 56786.657 ops/ms
Iteration  20: 56744.864 ops/ms

Result : 56732.298 ?(95%) 165.888 ?(99%) 226.758 ops/ms
  Statistics: (min, avg, max) = (55731.582, 56732.298, 57231.127), stdev = 354.454
  Confidence intervals: 95% [56566.410, 56898.186], 99% [56505.540, 56959.056]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36198.575 ops/ms
# Warmup Iteration   2: 53588.240 ops/ms
# Warmup Iteration   3: 56579.497 ops/ms
# Warmup Iteration   4: 56376.081 ops/ms
# Warmup Iteration   5: 56841.766 ops/ms
# Warmup Iteration   6: 56645.651 ops/ms
# Warmup Iteration   7: 57249.773 ops/ms
# Warmup Iteration   8: 56340.122 ops/ms
# Warmup Iteration   9: 56771.283 ops/ms
# Warmup Iteration  10: 57104.308 ops/ms
# Warmup Iteration  11: 56795.201 ops/ms
# Warmup Iteration  12: 56531.102 ops/ms
# Warmup Iteration  13: 56819.826 ops/ms
# Warmup Iteration  14: 56900.195 ops/ms
# Warmup Iteration  15: 56351.344 ops/ms
# Warmup Iteration  16: 57136.652 ops/ms
# Warmup Iteration  17: 56747.864 ops/ms
# Warmup Iteration  18: 56918.996 ops/ms
# Warmup Iteration  19: 55912.494 ops/ms
# Warmup Iteration  20: 57003.838 ops/ms
Iteration   1: 56996.300 ops/ms
Iteration   2: 56996.571 ops/ms
Iteration   3: 56039.208 ops/ms
Iteration   4: 57110.957 ops/ms
Iteration   5: 56754.143 ops/ms
Iteration   6: 57041.023 ops/ms
Iteration   7: 56280.110 ops/ms
Iteration   8: 56571.627 ops/ms
Iteration   9: 57080.311 ops/ms
Iteration  10: 56471.490 ops/ms
Iteration  11: 56643.328 ops/ms
Iteration  12: 56794.365 ops/ms
Iteration  13: 56698.934 ops/ms
Iteration  14: 56018.324 ops/ms
Iteration  15: 57024.810 ops/ms
Iteration  16: 56970.662 ops/ms
Iteration  17: 56556.083 ops/ms
Iteration  18: 56285.547 ops/ms
Iteration  19: 56928.899 ops/ms
Iteration  20: 54480.822 ops/ms

Result : 56587.176 ?(95%) 281.231 ?(99%) 384.425 ops/ms
  Statistics: (min, avg, max) = (54480.822, 56587.176, 57110.957), stdev = 600.909
  Confidence intervals: 95% [56305.945, 56868.407], 99% [56202.751, 56971.601]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 320.620 ops/ms
# Warmup Iteration   2: 459.947 ops/ms
# Warmup Iteration   3: 541.653 ops/ms
# Warmup Iteration   4: 539.777 ops/ms
# Warmup Iteration   5: 539.044 ops/ms
# Warmup Iteration   6: 538.596 ops/ms
# Warmup Iteration   7: 540.939 ops/ms
# Warmup Iteration   8: 536.893 ops/ms
# Warmup Iteration   9: 541.142 ops/ms
# Warmup Iteration  10: 537.841 ops/ms
# Warmup Iteration  11: 541.385 ops/ms
# Warmup Iteration  12: 541.163 ops/ms
# Warmup Iteration  13: 536.044 ops/ms
# Warmup Iteration  14: 540.445 ops/ms
# Warmup Iteration  15: 538.191 ops/ms
# Warmup Iteration  16: 538.508 ops/ms
# Warmup Iteration  17: 540.624 ops/ms
# Warmup Iteration  18: 541.540 ops/ms
# Warmup Iteration  19: 541.577 ops/ms
# Warmup Iteration  20: 540.818 ops/ms
Iteration   1: 542.617 ops/ms
Iteration   2: 542.693 ops/ms
Iteration   3: 543.022 ops/ms
Iteration   4: 540.048 ops/ms
Iteration   5: 542.164 ops/ms
Iteration   6: 543.017 ops/ms
Iteration   7: 542.304 ops/ms
Iteration   8: 540.302 ops/ms
Iteration   9: 539.595 ops/ms
Iteration  10: 543.064 ops/ms
Iteration  11: 542.967 ops/ms
Iteration  12: 539.908 ops/ms
Iteration  13: 540.714 ops/ms
Iteration  14: 542.160 ops/ms
Iteration  15: 541.962 ops/ms
Iteration  16: 540.161 ops/ms
Iteration  17: 540.697 ops/ms
Iteration  18: 539.901 ops/ms
Iteration  19: 536.481 ops/ms
Iteration  20: 538.166 ops/ms

Result : 541.097 ?(95%) 0.845 ?(99%) 1.156 ops/ms
  Statistics: (min, avg, max) = (536.481, 541.097, 543.064), stdev = 1.807
  Confidence intervals: 95% [540.252, 541.943], 99% [539.942, 542.253]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 362.162 ops/ms
# Warmup Iteration   2: 563.447 ops/ms
# Warmup Iteration   3: 614.440 ops/ms
# Warmup Iteration   4: 614.074 ops/ms
# Warmup Iteration   5: 613.965 ops/ms
# Warmup Iteration   6: 614.166 ops/ms
# Warmup Iteration   7: 611.345 ops/ms
# Warmup Iteration   8: 617.562 ops/ms
# Warmup Iteration   9: 615.960 ops/ms
# Warmup Iteration  10: 615.375 ops/ms
# Warmup Iteration  11: 618.622 ops/ms
# Warmup Iteration  12: 615.296 ops/ms
# Warmup Iteration  13: 617.255 ops/ms
# Warmup Iteration  14: 615.366 ops/ms
# Warmup Iteration  15: 616.056 ops/ms
# Warmup Iteration  16: 613.003 ops/ms
# Warmup Iteration  17: 613.063 ops/ms
# Warmup Iteration  18: 613.822 ops/ms
# Warmup Iteration  19: 613.804 ops/ms
# Warmup Iteration  20: 615.228 ops/ms
Iteration   1: 617.070 ops/ms
Iteration   2: 614.586 ops/ms
Iteration   3: 614.303 ops/ms
Iteration   4: 616.930 ops/ms
Iteration   5: 613.636 ops/ms
Iteration   6: 616.389 ops/ms
Iteration   7: 614.315 ops/ms
Iteration   8: 611.582 ops/ms
Iteration   9: 614.825 ops/ms
Iteration  10: 616.267 ops/ms
Iteration  11: 616.639 ops/ms
Iteration  12: 617.052 ops/ms
Iteration  13: 616.902 ops/ms
Iteration  14: 617.475 ops/ms
Iteration  15: 617.661 ops/ms
Iteration  16: 614.887 ops/ms
Iteration  17: 614.461 ops/ms
Iteration  18: 614.070 ops/ms
Iteration  19: 614.330 ops/ms
Iteration  20: 614.330 ops/ms

Result : 615.385 ?(95%) 0.752 ?(99%) 1.028 ops/ms
  Statistics: (min, avg, max) = (611.582, 615.385, 617.661), stdev = 1.607
  Confidence intervals: 95% [614.633, 616.138], 99% [614.358, 616.413]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 332.157 ops/ms
# Warmup Iteration   2: 502.049 ops/ms
# Warmup Iteration   3: 562.314 ops/ms
# Warmup Iteration   4: 565.709 ops/ms
# Warmup Iteration   5: 566.376 ops/ms
# Warmup Iteration   6: 564.005 ops/ms
# Warmup Iteration   7: 564.101 ops/ms
# Warmup Iteration   8: 563.433 ops/ms
# Warmup Iteration   9: 565.994 ops/ms
# Warmup Iteration  10: 563.356 ops/ms
# Warmup Iteration  11: 564.471 ops/ms
# Warmup Iteration  12: 566.266 ops/ms
# Warmup Iteration  13: 562.610 ops/ms
# Warmup Iteration  14: 565.602 ops/ms
# Warmup Iteration  15: 560.414 ops/ms
# Warmup Iteration  16: 565.645 ops/ms
# Warmup Iteration  17: 566.008 ops/ms
# Warmup Iteration  18: 564.917 ops/ms
# Warmup Iteration  19: 567.775 ops/ms
# Warmup Iteration  20: 568.147 ops/ms
Iteration   1: 565.506 ops/ms
Iteration   2: 563.881 ops/ms
Iteration   3: 565.267 ops/ms
Iteration   4: 568.688 ops/ms
Iteration   5: 568.536 ops/ms
Iteration   6: 566.366 ops/ms
Iteration   7: 565.435 ops/ms
Iteration   8: 567.227 ops/ms
Iteration   9: 568.083 ops/ms
Iteration  10: 566.186 ops/ms
Iteration  11: 568.436 ops/ms
Iteration  12: 568.033 ops/ms
Iteration  13: 565.678 ops/ms
Iteration  14: 565.809 ops/ms
Iteration  15: 566.559 ops/ms
Iteration  16: 565.618 ops/ms
Iteration  17: 568.809 ops/ms
Iteration  18: 568.301 ops/ms
Iteration  19: 567.701 ops/ms
Iteration  20: 566.334 ops/ms

Result : 566.823 ?(95%) 0.667 ?(99%) 0.912 ops/ms
  Statistics: (min, avg, max) = (563.881, 566.823, 568.809), stdev = 1.425
  Confidence intervals: 95% [566.156, 567.489], 99% [565.911, 567.734]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 338.205 ops/ms
# Warmup Iteration   2: 506.491 ops/ms
# Warmup Iteration   3: 567.900 ops/ms
# Warmup Iteration   4: 568.081 ops/ms
# Warmup Iteration   5: 568.221 ops/ms
# Warmup Iteration   6: 569.841 ops/ms
# Warmup Iteration   7: 562.478 ops/ms
# Warmup Iteration   8: 567.986 ops/ms
# Warmup Iteration   9: 571.631 ops/ms
# Warmup Iteration  10: 570.985 ops/ms
# Warmup Iteration  11: 571.895 ops/ms
# Warmup Iteration  12: 571.588 ops/ms
# Warmup Iteration  13: 569.685 ops/ms
# Warmup Iteration  14: 571.576 ops/ms
# Warmup Iteration  15: 569.831 ops/ms
# Warmup Iteration  16: 569.242 ops/ms
# Warmup Iteration  17: 563.523 ops/ms
# Warmup Iteration  18: 564.636 ops/ms
# Warmup Iteration  19: 565.359 ops/ms
# Warmup Iteration  20: 564.851 ops/ms
Iteration   1: 570.299 ops/ms
Iteration   2: 571.027 ops/ms
Iteration   3: 568.683 ops/ms
Iteration   4: 565.445 ops/ms
Iteration   5: 566.542 ops/ms
Iteration   6: 570.898 ops/ms
Iteration   7: 567.908 ops/ms
Iteration   8: 569.141 ops/ms
Iteration   9: 570.394 ops/ms
Iteration  10: 561.015 ops/ms
Iteration  11: 561.687 ops/ms
Iteration  12: 555.430 ops/ms
Iteration  13: 545.657 ops/ms
Iteration  14: 545.944 ops/ms
Iteration  15: 563.143 ops/ms
Iteration  16: 567.262 ops/ms
Iteration  17: 568.719 ops/ms
Iteration  18: 566.006 ops/ms
Iteration  19: 560.259 ops/ms
Iteration  20: 563.493 ops/ms

Result : 563.948 ?(95%) 3.482 ?(99%) 4.760 ops/ms
  Statistics: (min, avg, max) = (545.657, 563.948, 571.027), stdev = 7.440
  Confidence intervals: 95% [560.466, 567.430], 99% [559.188, 568.708]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 320.920 ops/ms
# Warmup Iteration   2: 462.267 ops/ms
# Warmup Iteration   3: 523.110 ops/ms
# Warmup Iteration   4: 526.881 ops/ms
# Warmup Iteration   5: 526.573 ops/ms
# Warmup Iteration   6: 525.960 ops/ms
# Warmup Iteration   7: 527.607 ops/ms
# Warmup Iteration   8: 527.693 ops/ms
# Warmup Iteration   9: 527.751 ops/ms
# Warmup Iteration  10: 529.973 ops/ms
# Warmup Iteration  11: 529.981 ops/ms
# Warmup Iteration  12: 526.549 ops/ms
# Warmup Iteration  13: 525.508 ops/ms
# Warmup Iteration  14: 525.746 ops/ms
# Warmup Iteration  15: 526.600 ops/ms
# Warmup Iteration  16: 527.825 ops/ms
# Warmup Iteration  17: 531.366 ops/ms
# Warmup Iteration  18: 529.479 ops/ms
# Warmup Iteration  19: 526.549 ops/ms
# Warmup Iteration  20: 531.430 ops/ms
Iteration   1: 533.760 ops/ms
Iteration   2: 532.508 ops/ms
Iteration   3: 529.505 ops/ms
Iteration   4: 534.467 ops/ms
Iteration   5: 534.688 ops/ms
Iteration   6: 532.049 ops/ms
Iteration   7: 530.993 ops/ms
Iteration   8: 534.924 ops/ms
Iteration   9: 534.443 ops/ms
Iteration  10: 532.489 ops/ms
Iteration  11: 534.458 ops/ms
Iteration  12: 533.157 ops/ms
Iteration  13: 530.912 ops/ms
Iteration  14: 529.777 ops/ms
Iteration  15: 530.882 ops/ms
Iteration  16: 527.419 ops/ms
Iteration  17: 534.713 ops/ms
Iteration  18: 529.063 ops/ms
Iteration  19: 530.718 ops/ms
Iteration  20: 531.972 ops/ms

Result : 532.145 ?(95%) 1.028 ?(99%) 1.405 ops/ms
  Statistics: (min, avg, max) = (527.419, 532.145, 534.924), stdev = 2.196
  Confidence intervals: 95% [531.117, 533.173], 99% [530.740, 533.550]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1211.613 ops/ms
# Warmup Iteration   2: 1589.122 ops/ms
# Warmup Iteration   3: 1684.735 ops/ms
# Warmup Iteration   4: 1707.427 ops/ms
# Warmup Iteration   5: 1723.127 ops/ms
# Warmup Iteration   6: 1726.209 ops/ms
# Warmup Iteration   7: 1727.158 ops/ms
# Warmup Iteration   8: 1727.963 ops/ms
# Warmup Iteration   9: 1729.228 ops/ms
# Warmup Iteration  10: 1725.440 ops/ms
# Warmup Iteration  11: 1732.080 ops/ms
# Warmup Iteration  12: 1713.693 ops/ms
# Warmup Iteration  13: 1723.401 ops/ms
# Warmup Iteration  14: 1710.033 ops/ms
# Warmup Iteration  15: 1727.371 ops/ms
# Warmup Iteration  16: 1726.402 ops/ms
# Warmup Iteration  17: 1634.651 ops/ms
# Warmup Iteration  18: 1635.967 ops/ms
# Warmup Iteration  19: 1645.340 ops/ms
# Warmup Iteration  20: 1730.358 ops/ms
Iteration   1: 1723.799 ops/ms
Iteration   2: 1719.281 ops/ms
Iteration   3: 1729.709 ops/ms
Iteration   4: 1730.090 ops/ms
Iteration   5: 1723.603 ops/ms
Iteration   6: 1716.848 ops/ms
Iteration   7: 1718.683 ops/ms
Iteration   8: 1730.943 ops/ms
Iteration   9: 1731.493 ops/ms
Iteration  10: 1715.527 ops/ms
Iteration  11: 1731.313 ops/ms
Iteration  12: 1705.860 ops/ms
Iteration  13: 1711.261 ops/ms
Iteration  14: 1712.772 ops/ms
Iteration  15: 1713.332 ops/ms
Iteration  16: 1713.719 ops/ms
Iteration  17: 1716.212 ops/ms
Iteration  18: 1719.859 ops/ms
Iteration  19: 1714.399 ops/ms
Iteration  20: 1714.555 ops/ms

Result : 1719.663 ?(95%) 3.595 ?(99%) 4.914 ops/ms
  Statistics: (min, avg, max) = (1705.860, 1719.663, 1731.493), stdev = 7.682
  Confidence intervals: 95% [1716.068, 1723.258], 99% [1714.749, 1724.577]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1228.344 ops/ms
# Warmup Iteration   2: 1659.015 ops/ms
# Warmup Iteration   3: 1753.361 ops/ms
# Warmup Iteration   4: 1794.090 ops/ms
# Warmup Iteration   5: 1799.694 ops/ms
# Warmup Iteration   6: 1805.999 ops/ms
# Warmup Iteration   7: 1803.462 ops/ms
# Warmup Iteration   8: 1799.191 ops/ms
# Warmup Iteration   9: 1811.246 ops/ms
# Warmup Iteration  10: 1812.428 ops/ms
# Warmup Iteration  11: 1733.019 ops/ms
# Warmup Iteration  12: 1765.787 ops/ms
# Warmup Iteration  13: 1803.002 ops/ms
# Warmup Iteration  14: 1811.650 ops/ms
# Warmup Iteration  15: 1813.097 ops/ms
# Warmup Iteration  16: 1780.822 ops/ms
# Warmup Iteration  17: 1796.472 ops/ms
# Warmup Iteration  18: 1801.710 ops/ms
# Warmup Iteration  19: 1800.440 ops/ms
# Warmup Iteration  20: 1802.893 ops/ms
Iteration   1: 1778.432 ops/ms
Iteration   2: 1794.282 ops/ms
Iteration   3: 1789.209 ops/ms
Iteration   4: 1804.053 ops/ms
Iteration   5: 1804.997 ops/ms
Iteration   6: 1793.642 ops/ms
Iteration   7: 1789.176 ops/ms
Iteration   8: 1795.175 ops/ms
Iteration   9: 1794.055 ops/ms
Iteration  10: 1801.832 ops/ms
Iteration  11: 1801.693 ops/ms
Iteration  12: 1797.081 ops/ms
Iteration  13: 1798.642 ops/ms
Iteration  14: 1804.979 ops/ms
Iteration  15: 1798.517 ops/ms
Iteration  16: 1794.602 ops/ms
Iteration  17: 1804.700 ops/ms
Iteration  18: 1790.250 ops/ms
Iteration  19: 1790.451 ops/ms
Iteration  20: 1795.458 ops/ms

Result : 1796.061 ?(95%) 3.155 ?(99%) 4.312 ops/ms
  Statistics: (min, avg, max) = (1778.432, 1796.061, 1804.997), stdev = 6.741
  Confidence intervals: 95% [1792.907, 1799.216], 99% [1791.749, 1800.374]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1226.612 ops/ms
# Warmup Iteration   2: 1656.772 ops/ms
# Warmup Iteration   3: 1751.998 ops/ms
# Warmup Iteration   4: 1775.968 ops/ms
# Warmup Iteration   5: 1799.246 ops/ms
# Warmup Iteration   6: 1793.733 ops/ms
# Warmup Iteration   7: 1803.236 ops/ms
# Warmup Iteration   8: 1805.728 ops/ms
# Warmup Iteration   9: 1803.415 ops/ms
# Warmup Iteration  10: 1808.642 ops/ms
# Warmup Iteration  11: 1789.686 ops/ms
# Warmup Iteration  12: 1811.567 ops/ms
# Warmup Iteration  13: 1808.299 ops/ms
# Warmup Iteration  14: 1804.194 ops/ms
# Warmup Iteration  15: 1806.543 ops/ms
# Warmup Iteration  16: 1806.347 ops/ms
# Warmup Iteration  17: 1803.239 ops/ms
# Warmup Iteration  18: 1809.503 ops/ms
# Warmup Iteration  19: 1801.247 ops/ms
# Warmup Iteration  20: 1802.586 ops/ms
Iteration   1: 1796.114 ops/ms
Iteration   2: 1801.953 ops/ms
Iteration   3: 1796.403 ops/ms
Iteration   4: 1802.177 ops/ms
Iteration   5: 1805.040 ops/ms
Iteration   6: 1791.747 ops/ms
Iteration   7: 1782.522 ops/ms
Iteration   8: 1797.603 ops/ms
Iteration   9: 1794.867 ops/ms
Iteration  10: 1803.870 ops/ms
Iteration  11: 1792.516 ops/ms
Iteration  12: 1797.543 ops/ms
Iteration  13: 1798.082 ops/ms
Iteration  14: 1801.886 ops/ms
Iteration  15: 1798.131 ops/ms
Iteration  16: 1804.823 ops/ms
Iteration  17: 1803.303 ops/ms
Iteration  18: 1798.200 ops/ms
Iteration  19: 1788.794 ops/ms
Iteration  20: 1803.897 ops/ms

Result : 1797.974 ?(95%) 2.740 ?(99%) 3.746 ops/ms
  Statistics: (min, avg, max) = (1782.522, 1797.974, 1805.040), stdev = 5.855
  Confidence intervals: 95% [1795.233, 1800.714], 99% [1794.228, 1801.720]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1219.401 ops/ms
# Warmup Iteration   2: 1653.516 ops/ms
# Warmup Iteration   3: 1764.970 ops/ms
# Warmup Iteration   4: 1793.670 ops/ms
# Warmup Iteration   5: 1801.365 ops/ms
# Warmup Iteration   6: 1808.221 ops/ms
# Warmup Iteration   7: 1797.733 ops/ms
# Warmup Iteration   8: 1813.920 ops/ms
# Warmup Iteration   9: 1814.656 ops/ms
# Warmup Iteration  10: 1815.188 ops/ms
# Warmup Iteration  11: 1781.604 ops/ms
# Warmup Iteration  12: 1802.394 ops/ms
# Warmup Iteration  13: 1817.256 ops/ms
# Warmup Iteration  14: 1808.356 ops/ms
# Warmup Iteration  15: 1815.790 ops/ms
# Warmup Iteration  16: 1803.773 ops/ms
# Warmup Iteration  17: 1803.696 ops/ms
# Warmup Iteration  18: 1809.827 ops/ms
# Warmup Iteration  19: 1800.864 ops/ms
# Warmup Iteration  20: 1802.652 ops/ms
Iteration   1: 1796.052 ops/ms
Iteration   2: 1792.045 ops/ms
Iteration   3: 1803.995 ops/ms
Iteration   4: 1804.407 ops/ms
Iteration   5: 1802.559 ops/ms
Iteration   6: 1803.391 ops/ms
Iteration   7: 1789.264 ops/ms
Iteration   8: 1803.388 ops/ms
Iteration   9: 1797.370 ops/ms
Iteration  10: 1795.262 ops/ms
Iteration  11: 1793.461 ops/ms
Iteration  12: 1792.835 ops/ms
Iteration  13: 1798.672 ops/ms
Iteration  14: 1790.449 ops/ms
Iteration  15: 1790.730 ops/ms
Iteration  16: 1802.721 ops/ms
Iteration  17: 1799.287 ops/ms
Iteration  18: 1804.468 ops/ms
Iteration  19: 1796.294 ops/ms
Iteration  20: 1797.496 ops/ms

Result : 1797.707 ?(95%) 2.411 ?(99%) 3.296 ops/ms
  Statistics: (min, avg, max) = (1789.264, 1797.707, 1804.468), stdev = 5.151
  Confidence intervals: 95% [1795.296, 1800.118], 99% [1794.412, 1801.003]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1226.501 ops/ms
# Warmup Iteration   2: 1654.540 ops/ms
# Warmup Iteration   3: 1762.480 ops/ms
# Warmup Iteration   4: 1798.907 ops/ms
# Warmup Iteration   5: 1802.908 ops/ms
# Warmup Iteration   6: 1802.145 ops/ms
# Warmup Iteration   7: 1805.254 ops/ms
# Warmup Iteration   8: 1795.529 ops/ms
# Warmup Iteration   9: 1803.317 ops/ms
# Warmup Iteration  10: 1798.577 ops/ms
# Warmup Iteration  11: 1796.472 ops/ms
# Warmup Iteration  12: 1787.717 ops/ms
# Warmup Iteration  13: 1796.514 ops/ms
# Warmup Iteration  14: 1805.166 ops/ms
# Warmup Iteration  15: 1796.190 ops/ms
# Warmup Iteration  16: 1796.417 ops/ms
# Warmup Iteration  17: 1799.356 ops/ms
# Warmup Iteration  18: 1801.915 ops/ms
# Warmup Iteration  19: 1792.402 ops/ms
# Warmup Iteration  20: 1801.579 ops/ms
Iteration   1: 1801.442 ops/ms
Iteration   2: 1783.749 ops/ms
Iteration   3: 1800.424 ops/ms
Iteration   4: 1801.121 ops/ms
Iteration   5: 1799.182 ops/ms
Iteration   6: 1796.079 ops/ms
Iteration   7: 1801.679 ops/ms
Iteration   8: 1800.228 ops/ms
Iteration   9: 1794.100 ops/ms
Iteration  10: 1793.380 ops/ms
Iteration  11: 1800.810 ops/ms
Iteration  12: 1788.450 ops/ms
Iteration  13: 1789.270 ops/ms
Iteration  14: 1792.819 ops/ms
Iteration  15: 1786.885 ops/ms
Iteration  16: 1793.344 ops/ms
Iteration  17: 1790.383 ops/ms
Iteration  18: 1784.744 ops/ms
Iteration  19: 1788.156 ops/ms
Iteration  20: 1788.863 ops/ms

Result : 1793.755 ?(95%) 2.824 ?(99%) 3.860 ops/ms
  Statistics: (min, avg, max) = (1783.749, 1793.755, 1801.679), stdev = 6.034
  Confidence intervals: 95% [1790.931, 1796.580], 99% [1789.895, 1797.616]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.319 ops/ms
# Warmup Iteration   2: 17.234 ops/ms
# Warmup Iteration   3: 18.661 ops/ms
# Warmup Iteration   4: 18.716 ops/ms
# Warmup Iteration   5: 18.799 ops/ms
# Warmup Iteration   6: 18.860 ops/ms
# Warmup Iteration   7: 18.806 ops/ms
# Warmup Iteration   8: 18.717 ops/ms
# Warmup Iteration   9: 18.809 ops/ms
# Warmup Iteration  10: 18.528 ops/ms
# Warmup Iteration  11: 17.805 ops/ms
# Warmup Iteration  12: 17.803 ops/ms
# Warmup Iteration  13: 18.653 ops/ms
# Warmup Iteration  14: 18.762 ops/ms
# Warmup Iteration  15: 18.673 ops/ms
# Warmup Iteration  16: 18.845 ops/ms
# Warmup Iteration  17: 18.571 ops/ms
# Warmup Iteration  18: 18.343 ops/ms
# Warmup Iteration  19: 18.721 ops/ms
# Warmup Iteration  20: 18.717 ops/ms
Iteration   1: 18.896 ops/ms
Iteration   2: 18.838 ops/ms
Iteration   3: 18.805 ops/ms
Iteration   4: 18.895 ops/ms
Iteration   5: 18.781 ops/ms
Iteration   6: 18.847 ops/ms
Iteration   7: 18.818 ops/ms
Iteration   8: 18.707 ops/ms
Iteration   9: 18.734 ops/ms
Iteration  10: 18.884 ops/ms
Iteration  11: 18.896 ops/ms
Iteration  12: 18.675 ops/ms
Iteration  13: 18.832 ops/ms
Iteration  14: 18.847 ops/ms
Iteration  15: 18.861 ops/ms
Iteration  16: 18.714 ops/ms
Iteration  17: 18.767 ops/ms
Iteration  18: 18.868 ops/ms
Iteration  19: 18.837 ops/ms
Iteration  20: 18.564 ops/ms

Result : 18.803 ?(95%) 0.041 ?(99%) 0.056 ops/ms
  Statistics: (min, avg, max) = (18.564, 18.803, 18.896), stdev = 0.087
  Confidence intervals: 95% [18.763, 18.844], 99% [18.748, 18.859]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.949 ops/ms
# Warmup Iteration   2: 18.680 ops/ms
# Warmup Iteration   3: 20.221 ops/ms
# Warmup Iteration   4: 20.596 ops/ms
# Warmup Iteration   5: 20.627 ops/ms
# Warmup Iteration   6: 20.537 ops/ms
# Warmup Iteration   7: 20.547 ops/ms
# Warmup Iteration   8: 20.668 ops/ms
# Warmup Iteration   9: 20.654 ops/ms
# Warmup Iteration  10: 20.551 ops/ms
# Warmup Iteration  11: 20.696 ops/ms
# Warmup Iteration  12: 20.713 ops/ms
# Warmup Iteration  13: 20.657 ops/ms
# Warmup Iteration  14: 20.514 ops/ms
# Warmup Iteration  15: 20.716 ops/ms
# Warmup Iteration  16: 20.700 ops/ms
# Warmup Iteration  17: 20.455 ops/ms
# Warmup Iteration  18: 20.462 ops/ms
# Warmup Iteration  19: 20.637 ops/ms
# Warmup Iteration  20: 20.673 ops/ms
Iteration   1: 20.642 ops/ms
Iteration   2: 20.619 ops/ms
Iteration   3: 20.719 ops/ms
Iteration   4: 20.695 ops/ms
Iteration   5: 20.702 ops/ms
Iteration   6: 20.683 ops/ms
Iteration   7: 20.571 ops/ms
Iteration   8: 20.600 ops/ms
Iteration   9: 20.715 ops/ms
Iteration  10: 20.558 ops/ms
Iteration  11: 20.679 ops/ms
Iteration  12: 20.545 ops/ms
Iteration  13: 20.417 ops/ms
Iteration  14: 20.402 ops/ms
Iteration  15: 20.564 ops/ms
Iteration  16: 20.582 ops/ms
Iteration  17: 20.584 ops/ms
Iteration  18: 20.582 ops/ms
Iteration  19: 20.518 ops/ms
Iteration  20: 20.664 ops/ms

Result : 20.602 ?(95%) 0.042 ?(99%) 0.057 ops/ms
  Statistics: (min, avg, max) = (20.402, 20.602, 20.719), stdev = 0.090
  Confidence intervals: 95% [20.560, 20.644], 99% [20.545, 20.659]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.481 ops/ms
# Warmup Iteration   2: 18.071 ops/ms
# Warmup Iteration   3: 19.597 ops/ms
# Warmup Iteration   4: 19.829 ops/ms
# Warmup Iteration   5: 19.796 ops/ms
# Warmup Iteration   6: 19.655 ops/ms
# Warmup Iteration   7: 19.836 ops/ms
# Warmup Iteration   8: 19.848 ops/ms
# Warmup Iteration   9: 19.787 ops/ms
# Warmup Iteration  10: 19.840 ops/ms
# Warmup Iteration  11: 19.857 ops/ms
# Warmup Iteration  12: 19.778 ops/ms
# Warmup Iteration  13: 19.836 ops/ms
# Warmup Iteration  14: 19.812 ops/ms
# Warmup Iteration  15: 19.818 ops/ms
# Warmup Iteration  16: 19.796 ops/ms
# Warmup Iteration  17: 19.823 ops/ms
# Warmup Iteration  18: 19.882 ops/ms
# Warmup Iteration  19: 19.883 ops/ms
# Warmup Iteration  20: 19.812 ops/ms
Iteration   1: 19.719 ops/ms
Iteration   2: 19.829 ops/ms
Iteration   3: 19.642 ops/ms
Iteration   4: 19.800 ops/ms
Iteration   5: 19.815 ops/ms
Iteration   6: 19.805 ops/ms
Iteration   7: 19.806 ops/ms
Iteration   8: 19.758 ops/ms
Iteration   9: 19.765 ops/ms
Iteration  10: 19.812 ops/ms
Iteration  11: 19.696 ops/ms
Iteration  12: 19.824 ops/ms
Iteration  13: 19.875 ops/ms
Iteration  14: 19.884 ops/ms
Iteration  15: 19.880 ops/ms
Iteration  16: 19.881 ops/ms
Iteration  17: 19.894 ops/ms
Iteration  18: 19.749 ops/ms
Iteration  19: 19.768 ops/ms
Iteration  20: 19.916 ops/ms

Result : 19.806 ?(95%) 0.034 ?(99%) 0.046 ops/ms
  Statistics: (min, avg, max) = (19.642, 19.806, 19.916), stdev = 0.072
  Confidence intervals: 95% [19.772, 19.839], 99% [19.760, 19.852]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.703 ops/ms
# Warmup Iteration   2: 17.982 ops/ms
# Warmup Iteration   3: 19.670 ops/ms
# Warmup Iteration   4: 19.908 ops/ms
# Warmup Iteration   5: 19.944 ops/ms
# Warmup Iteration   6: 19.919 ops/ms
# Warmup Iteration   7: 19.992 ops/ms
# Warmup Iteration   8: 19.971 ops/ms
# Warmup Iteration   9: 19.931 ops/ms
# Warmup Iteration  10: 20.021 ops/ms
# Warmup Iteration  11: 20.055 ops/ms
# Warmup Iteration  12: 19.996 ops/ms
# Warmup Iteration  13: 19.970 ops/ms
# Warmup Iteration  14: 19.920 ops/ms
# Warmup Iteration  15: 20.070 ops/ms
# Warmup Iteration  16: 19.913 ops/ms
# Warmup Iteration  17: 20.043 ops/ms
# Warmup Iteration  18: 20.061 ops/ms
# Warmup Iteration  19: 20.047 ops/ms
# Warmup Iteration  20: 19.993 ops/ms
Iteration   1: 19.996 ops/ms
Iteration   2: 20.028 ops/ms
Iteration   3: 19.990 ops/ms
Iteration   4: 20.064 ops/ms
Iteration   5: 20.063 ops/ms
Iteration   6: 20.009 ops/ms
Iteration   7: 19.949 ops/ms
Iteration   8: 20.001 ops/ms
Iteration   9: 19.928 ops/ms
Iteration  10: 19.943 ops/ms
Iteration  11: 20.047 ops/ms
Iteration  12: 20.024 ops/ms
Iteration  13: 20.035 ops/ms
Iteration  14: 19.931 ops/ms
Iteration  15: 19.970 ops/ms
Iteration  16: 20.042 ops/ms
Iteration  17: 19.955 ops/ms
Iteration  18: 20.064 ops/ms
Iteration  19: 19.986 ops/ms
Iteration  20: 20.003 ops/ms

Result : 20.001 ?(95%) 0.021 ?(99%) 0.029 ops/ms
  Statistics: (min, avg, max) = (19.928, 20.001, 20.064), stdev = 0.045
  Confidence intervals: 95% [19.980, 20.022], 99% [19.973, 20.030]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 9.448 ops/ms
# Warmup Iteration   2: 17.820 ops/ms
# Warmup Iteration   3: 19.349 ops/ms
# Warmup Iteration   4: 19.480 ops/ms
# Warmup Iteration   5: 19.505 ops/ms
# Warmup Iteration   6: 19.600 ops/ms
# Warmup Iteration   7: 19.403 ops/ms
# Warmup Iteration   8: 19.488 ops/ms
# Warmup Iteration   9: 19.510 ops/ms
# Warmup Iteration  10: 19.571 ops/ms
# Warmup Iteration  11: 19.585 ops/ms
# Warmup Iteration  12: 19.479 ops/ms
# Warmup Iteration  13: 19.515 ops/ms
# Warmup Iteration  14: 19.525 ops/ms
# Warmup Iteration  15: 19.419 ops/ms
# Warmup Iteration  16: 19.514 ops/ms
# Warmup Iteration  17: 19.606 ops/ms
# Warmup Iteration  18: 19.591 ops/ms
# Warmup Iteration  19: 19.636 ops/ms
# Warmup Iteration  20: 19.517 ops/ms
Iteration   1: 19.595 ops/ms
Iteration   2: 19.609 ops/ms
Iteration   3: 19.553 ops/ms
Iteration   4: 19.566 ops/ms
Iteration   5: 19.555 ops/ms
Iteration   6: 19.494 ops/ms
Iteration   7: 19.530 ops/ms
Iteration   8: 19.470 ops/ms
Iteration   9: 19.574 ops/ms
Iteration  10: 19.617 ops/ms
Iteration  11: 19.560 ops/ms
Iteration  12: 19.482 ops/ms
Iteration  13: 19.493 ops/ms
Iteration  14: 19.560 ops/ms
Iteration  15: 19.613 ops/ms
Iteration  16: 19.574 ops/ms
Iteration  17: 19.548 ops/ms
Iteration  18: 19.592 ops/ms
Iteration  19: 19.493 ops/ms
Iteration  20: 19.553 ops/ms

Result : 19.551 ?(95%) 0.021 ?(99%) 0.029 ops/ms
  Statistics: (min, avg, max) = (19.470, 19.551, 19.617), stdev = 0.045
  Confidence intervals: 95% [19.530, 19.573], 99% [19.523, 19.580]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 323.978 ops/ms
# Warmup Iteration   2: 409.550 ops/ms
# Warmup Iteration   3: 409.989 ops/ms
# Warmup Iteration   4: 416.585 ops/ms
# Warmup Iteration   5: 415.281 ops/ms
# Warmup Iteration   6: 417.132 ops/ms
# Warmup Iteration   7: 416.987 ops/ms
# Warmup Iteration   8: 413.738 ops/ms
# Warmup Iteration   9: 414.707 ops/ms
# Warmup Iteration  10: 415.970 ops/ms
# Warmup Iteration  11: 415.895 ops/ms
# Warmup Iteration  12: 415.427 ops/ms
# Warmup Iteration  13: 415.936 ops/ms
# Warmup Iteration  14: 415.809 ops/ms
# Warmup Iteration  15: 416.137 ops/ms
# Warmup Iteration  16: 414.775 ops/ms
# Warmup Iteration  17: 421.642 ops/ms
# Warmup Iteration  18: 420.407 ops/ms
# Warmup Iteration  19: 422.626 ops/ms
# Warmup Iteration  20: 417.237 ops/ms
Iteration   1: 417.755 ops/ms
Iteration   2: 417.858 ops/ms
Iteration   3: 415.146 ops/ms
Iteration   4: 416.774 ops/ms
Iteration   5: 417.634 ops/ms
Iteration   6: 416.863 ops/ms
Iteration   7: 417.600 ops/ms
Iteration   8: 415.224 ops/ms
Iteration   9: 417.692 ops/ms
Iteration  10: 414.669 ops/ms
Iteration  11: 412.377 ops/ms
Iteration  12: 416.214 ops/ms
Iteration  13: 417.451 ops/ms
Iteration  14: 416.471 ops/ms
Iteration  15: 416.103 ops/ms
Iteration  16: 414.354 ops/ms
Iteration  17: 413.825 ops/ms
Iteration  18: 416.917 ops/ms
Iteration  19: 415.094 ops/ms
Iteration  20: 415.010 ops/ms

Result : 416.052 ?(95%) 0.717 ?(99%) 0.980 ops/ms
  Statistics: (min, avg, max) = (412.377, 416.052, 417.858), stdev = 1.532
  Confidence intervals: 95% [415.335, 416.769], 99% [415.071, 417.032]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 320.475 ops/ms
# Warmup Iteration   2: 392.928 ops/ms
# Warmup Iteration   3: 396.507 ops/ms
# Warmup Iteration   4: 403.490 ops/ms
# Warmup Iteration   5: 402.214 ops/ms
# Warmup Iteration   6: 405.134 ops/ms
# Warmup Iteration   7: 404.033 ops/ms
# Warmup Iteration   8: 406.325 ops/ms
# Warmup Iteration   9: 404.909 ops/ms
# Warmup Iteration  10: 406.310 ops/ms
# Warmup Iteration  11: 405.658 ops/ms
# Warmup Iteration  12: 406.243 ops/ms
# Warmup Iteration  13: 406.429 ops/ms
# Warmup Iteration  14: 406.748 ops/ms
# Warmup Iteration  15: 405.619 ops/ms
# Warmup Iteration  16: 404.913 ops/ms
# Warmup Iteration  17: 402.575 ops/ms
# Warmup Iteration  18: 399.161 ops/ms
# Warmup Iteration  19: 402.952 ops/ms
# Warmup Iteration  20: 403.523 ops/ms
Iteration   1: 404.182 ops/ms
Iteration   2: 404.208 ops/ms
Iteration   3: 401.828 ops/ms
Iteration   4: 404.027 ops/ms
Iteration   5: 403.407 ops/ms
Iteration   6: 404.418 ops/ms
Iteration   7: 403.345 ops/ms
Iteration   8: 404.144 ops/ms
Iteration   9: 402.801 ops/ms
Iteration  10: 404.231 ops/ms
Iteration  11: 401.898 ops/ms
Iteration  12: 405.132 ops/ms
Iteration  13: 405.604 ops/ms
Iteration  14: 405.379 ops/ms
Iteration  15: 403.899 ops/ms
Iteration  16: 405.826 ops/ms
Iteration  17: 406.928 ops/ms
Iteration  18: 407.065 ops/ms
Iteration  19: 406.175 ops/ms
Iteration  20: 406.701 ops/ms

Result : 404.560 ?(95%) 0.716 ?(99%) 0.979 ops/ms
  Statistics: (min, avg, max) = (401.828, 404.560, 407.065), stdev = 1.531
  Confidence intervals: 95% [403.844, 405.276], 99% [403.581, 405.539]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 333.212 ops/ms
# Warmup Iteration   2: 408.239 ops/ms
# Warmup Iteration   3: 406.705 ops/ms
# Warmup Iteration   4: 417.933 ops/ms
# Warmup Iteration   5: 417.708 ops/ms
# Warmup Iteration   6: 416.105 ops/ms
# Warmup Iteration   7: 417.155 ops/ms
# Warmup Iteration   8: 417.156 ops/ms
# Warmup Iteration   9: 418.467 ops/ms
# Warmup Iteration  10: 418.031 ops/ms
# Warmup Iteration  11: 417.688 ops/ms
# Warmup Iteration  12: 416.890 ops/ms
# Warmup Iteration  13: 418.039 ops/ms
# Warmup Iteration  14: 416.631 ops/ms
# Warmup Iteration  15: 417.689 ops/ms
# Warmup Iteration  16: 414.834 ops/ms
# Warmup Iteration  17: 416.006 ops/ms
# Warmup Iteration  18: 417.092 ops/ms
# Warmup Iteration  19: 418.105 ops/ms
# Warmup Iteration  20: 416.547 ops/ms
Iteration   1: 414.244 ops/ms
Iteration   2: 413.611 ops/ms
Iteration   3: 413.455 ops/ms
Iteration   4: 414.489 ops/ms
Iteration   5: 414.545 ops/ms
Iteration   6: 412.694 ops/ms
Iteration   7: 413.228 ops/ms
Iteration   8: 414.816 ops/ms
Iteration   9: 415.457 ops/ms
Iteration  10: 414.916 ops/ms
Iteration  11: 413.497 ops/ms
Iteration  12: 414.816 ops/ms
Iteration  13: 414.524 ops/ms
Iteration  14: 414.644 ops/ms
Iteration  15: 414.246 ops/ms
Iteration  16: 414.579 ops/ms
Iteration  17: 415.653 ops/ms
Iteration  18: 414.336 ops/ms
Iteration  19: 413.494 ops/ms
Iteration  20: 415.952 ops/ms

Result : 414.360 ?(95%) 0.392 ?(99%) 0.535 ops/ms
  Statistics: (min, avg, max) = (412.694, 414.360, 415.952), stdev = 0.837
  Confidence intervals: 95% [413.968, 414.751], 99% [413.825, 414.895]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 323.508 ops/ms
# Warmup Iteration   2: 398.254 ops/ms
# Warmup Iteration   3: 410.753 ops/ms
# Warmup Iteration   4: 411.277 ops/ms
# Warmup Iteration   5: 412.237 ops/ms
# Warmup Iteration   6: 410.578 ops/ms
# Warmup Iteration   7: 411.520 ops/ms
# Warmup Iteration   8: 413.655 ops/ms
# Warmup Iteration   9: 414.688 ops/ms
# Warmup Iteration  10: 416.432 ops/ms
# Warmup Iteration  11: 415.220 ops/ms
# Warmup Iteration  12: 417.209 ops/ms
# Warmup Iteration  13: 416.493 ops/ms
# Warmup Iteration  14: 415.858 ops/ms
# Warmup Iteration  15: 415.314 ops/ms
# Warmup Iteration  16: 416.576 ops/ms
# Warmup Iteration  17: 422.240 ops/ms
# Warmup Iteration  18: 421.016 ops/ms
# Warmup Iteration  19: 423.081 ops/ms
# Warmup Iteration  20: 408.905 ops/ms
Iteration   1: 407.299 ops/ms
Iteration   2: 405.012 ops/ms
Iteration   3: 406.209 ops/ms
Iteration   4: 408.863 ops/ms
Iteration   5: 405.701 ops/ms
Iteration   6: 407.502 ops/ms
Iteration   7: 408.333 ops/ms
Iteration   8: 408.974 ops/ms
Iteration   9: 409.239 ops/ms
Iteration  10: 406.838 ops/ms
Iteration  11: 406.705 ops/ms
Iteration  12: 418.177 ops/ms
Iteration  13: 405.908 ops/ms
Iteration  14: 400.005 ops/ms
Iteration  15: 402.100 ops/ms
Iteration  16: 417.791 ops/ms
Iteration  17: 420.334 ops/ms
Iteration  18: 421.105 ops/ms
Iteration  19: 419.302 ops/ms
Iteration  20: 419.582 ops/ms

Result : 410.249 ?(95%) 3.059 ?(99%) 4.181 ops/ms
  Statistics: (min, avg, max) = (400.005, 410.249, 421.105), stdev = 6.536
  Confidence intervals: 95% [407.190, 413.308], 99% [406.068, 414.430]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 319.291 ops/ms
# Warmup Iteration   2: 403.565 ops/ms
# Warmup Iteration   3: 409.109 ops/ms
# Warmup Iteration   4: 404.620 ops/ms
# Warmup Iteration   5: 407.269 ops/ms
# Warmup Iteration   6: 406.514 ops/ms
# Warmup Iteration   7: 406.490 ops/ms
# Warmup Iteration   8: 418.241 ops/ms
# Warmup Iteration   9: 414.518 ops/ms
# Warmup Iteration  10: 412.275 ops/ms
# Warmup Iteration  11: 416.155 ops/ms
# Warmup Iteration  12: 417.085 ops/ms
# Warmup Iteration  13: 416.788 ops/ms
# Warmup Iteration  14: 416.778 ops/ms
# Warmup Iteration  15: 417.681 ops/ms
# Warmup Iteration  16: 412.930 ops/ms
# Warmup Iteration  17: 413.142 ops/ms
# Warmup Iteration  18: 411.497 ops/ms
# Warmup Iteration  19: 412.031 ops/ms
# Warmup Iteration  20: 414.948 ops/ms
Iteration   1: 415.802 ops/ms
Iteration   2: 413.785 ops/ms
Iteration   3: 413.650 ops/ms
Iteration   4: 411.599 ops/ms
Iteration   5: 415.182 ops/ms
Iteration   6: 408.544 ops/ms
Iteration   7: 413.993 ops/ms
Iteration   8: 415.442 ops/ms
Iteration   9: 415.879 ops/ms
Iteration  10: 415.188 ops/ms
Iteration  11: 415.952 ops/ms
Iteration  12: 419.529 ops/ms
Iteration  13: 418.748 ops/ms
Iteration  14: 419.849 ops/ms
Iteration  15: 420.797 ops/ms
Iteration  16: 420.163 ops/ms
Iteration  17: 420.584 ops/ms
Iteration  18: 419.812 ops/ms
Iteration  19: 421.168 ops/ms
Iteration  20: 417.877 ops/ms

Result : 416.677 ?(95%) 1.603 ?(99%) 2.191 ops/ms
  Statistics: (min, avg, max) = (408.544, 416.677, 421.168), stdev = 3.425
  Confidence intervals: 95% [415.074, 418.280], 99% [414.486, 418.868]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 162.013 ops/ms
# Warmup Iteration   2: 210.842 ops/ms
# Warmup Iteration   3: 216.909 ops/ms
# Warmup Iteration   4: 220.528 ops/ms
# Warmup Iteration   5: 221.779 ops/ms
# Warmup Iteration   6: 221.017 ops/ms
# Warmup Iteration   7: 220.946 ops/ms
# Warmup Iteration   8: 220.470 ops/ms
# Warmup Iteration   9: 221.801 ops/ms
# Warmup Iteration  10: 220.285 ops/ms
# Warmup Iteration  11: 219.934 ops/ms
# Warmup Iteration  12: 218.030 ops/ms
# Warmup Iteration  13: 220.971 ops/ms
# Warmup Iteration  14: 220.123 ops/ms
# Warmup Iteration  15: 221.234 ops/ms
# Warmup Iteration  16: 220.693 ops/ms
# Warmup Iteration  17: 221.980 ops/ms
# Warmup Iteration  18: 222.081 ops/ms
# Warmup Iteration  19: 222.401 ops/ms
# Warmup Iteration  20: 222.434 ops/ms
Iteration   1: 222.105 ops/ms
Iteration   2: 223.872 ops/ms
Iteration   3: 223.683 ops/ms
Iteration   4: 222.766 ops/ms
Iteration   5: 222.397 ops/ms
Iteration   6: 222.663 ops/ms
Iteration   7: 223.573 ops/ms
Iteration   8: 222.861 ops/ms
Iteration   9: 223.790 ops/ms
Iteration  10: 222.893 ops/ms
Iteration  11: 223.101 ops/ms
Iteration  12: 220.363 ops/ms
Iteration  13: 221.148 ops/ms
Iteration  14: 221.530 ops/ms
Iteration  15: 221.866 ops/ms
Iteration  16: 220.847 ops/ms
Iteration  17: 221.410 ops/ms
Iteration  18: 221.878 ops/ms
Iteration  19: 220.610 ops/ms
Iteration  20: 221.266 ops/ms

Result : 222.231 ?(95%) 0.512 ?(99%) 0.699 ops/ms
  Statistics: (min, avg, max) = (220.363, 222.231, 223.872), stdev = 1.093
  Confidence intervals: 95% [221.719, 222.742], 99% [221.532, 222.930]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 171.816 ops/ms
# Warmup Iteration   2: 223.704 ops/ms
# Warmup Iteration   3: 230.091 ops/ms
# Warmup Iteration   4: 239.192 ops/ms
# Warmup Iteration   5: 238.470 ops/ms
# Warmup Iteration   6: 239.229 ops/ms
# Warmup Iteration   7: 239.194 ops/ms
# Warmup Iteration   8: 239.317 ops/ms
# Warmup Iteration   9: 238.600 ops/ms
# Warmup Iteration  10: 238.809 ops/ms
# Warmup Iteration  11: 237.878 ops/ms
# Warmup Iteration  12: 239.403 ops/ms
# Warmup Iteration  13: 239.635 ops/ms
# Warmup Iteration  14: 238.458 ops/ms
# Warmup Iteration  15: 238.984 ops/ms
# Warmup Iteration  16: 239.480 ops/ms
# Warmup Iteration  17: 238.933 ops/ms
# Warmup Iteration  18: 238.836 ops/ms
# Warmup Iteration  19: 238.685 ops/ms
# Warmup Iteration  20: 238.154 ops/ms
Iteration   1: 238.763 ops/ms
Iteration   2: 238.247 ops/ms
Iteration   3: 239.504 ops/ms
Iteration   4: 238.625 ops/ms
Iteration   5: 238.607 ops/ms
Iteration   6: 238.514 ops/ms
Iteration   7: 237.923 ops/ms
Iteration   8: 239.217 ops/ms
Iteration   9: 238.720 ops/ms
Iteration  10: 238.625 ops/ms
Iteration  11: 238.148 ops/ms
Iteration  12: 237.403 ops/ms
Iteration  13: 237.844 ops/ms
Iteration  14: 238.035 ops/ms
Iteration  15: 238.678 ops/ms
Iteration  16: 239.055 ops/ms
Iteration  17: 236.547 ops/ms
Iteration  18: 237.084 ops/ms
Iteration  19: 235.407 ops/ms
Iteration  20: 236.320 ops/ms

Result : 238.063 ?(95%) 0.489 ?(99%) 0.668 ops/ms
  Statistics: (min, avg, max) = (235.407, 238.063, 239.504), stdev = 1.044
  Confidence intervals: 95% [237.574, 238.552], 99% [237.395, 238.731]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 172.041 ops/ms
# Warmup Iteration   2: 226.504 ops/ms
# Warmup Iteration   3: 234.969 ops/ms
# Warmup Iteration   4: 240.339 ops/ms
# Warmup Iteration   5: 240.820 ops/ms
# Warmup Iteration   6: 239.107 ops/ms
# Warmup Iteration   7: 240.105 ops/ms
# Warmup Iteration   8: 240.503 ops/ms
# Warmup Iteration   9: 239.806 ops/ms
# Warmup Iteration  10: 238.846 ops/ms
# Warmup Iteration  11: 240.060 ops/ms
# Warmup Iteration  12: 239.726 ops/ms
# Warmup Iteration  13: 240.281 ops/ms
# Warmup Iteration  14: 240.453 ops/ms
# Warmup Iteration  15: 240.276 ops/ms
# Warmup Iteration  16: 240.542 ops/ms
# Warmup Iteration  17: 241.150 ops/ms
# Warmup Iteration  18: 241.846 ops/ms
# Warmup Iteration  19: 239.635 ops/ms
# Warmup Iteration  20: 240.342 ops/ms
Iteration   1: 241.108 ops/ms
Iteration   2: 241.624 ops/ms
Iteration   3: 241.141 ops/ms
Iteration   4: 240.199 ops/ms
Iteration   5: 237.837 ops/ms
Iteration   6: 241.744 ops/ms
Iteration   7: 240.788 ops/ms
Iteration   8: 241.537 ops/ms
Iteration   9: 240.597 ops/ms
Iteration  10: 240.618 ops/ms
Iteration  11: 240.562 ops/ms
Iteration  12: 242.158 ops/ms
Iteration  13: 240.389 ops/ms
Iteration  14: 242.016 ops/ms
Iteration  15: 242.596 ops/ms
Iteration  16: 241.226 ops/ms
Iteration  17: 240.353 ops/ms
Iteration  18: 241.349 ops/ms
Iteration  19: 241.246 ops/ms
Iteration  20: 241.223 ops/ms

Result : 241.016 ?(95%) 0.461 ?(99%) 0.630 ops/ms
  Statistics: (min, avg, max) = (237.837, 241.016, 242.596), stdev = 0.985
  Confidence intervals: 95% [240.554, 241.477], 99% [240.385, 241.646]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 170.519 ops/ms
# Warmup Iteration   2: 225.416 ops/ms
# Warmup Iteration   3: 231.562 ops/ms
# Warmup Iteration   4: 236.393 ops/ms
# Warmup Iteration   5: 233.273 ops/ms
# Warmup Iteration   6: 224.539 ops/ms
# Warmup Iteration   7: 226.126 ops/ms
# Warmup Iteration   8: 235.858 ops/ms
# Warmup Iteration   9: 234.443 ops/ms
# Warmup Iteration  10: 234.467 ops/ms
# Warmup Iteration  11: 236.226 ops/ms
# Warmup Iteration  12: 230.763 ops/ms
# Warmup Iteration  13: 234.624 ops/ms
# Warmup Iteration  14: 233.425 ops/ms
# Warmup Iteration  15: 235.364 ops/ms
# Warmup Iteration  16: 235.563 ops/ms
# Warmup Iteration  17: 236.562 ops/ms
# Warmup Iteration  18: 235.682 ops/ms
# Warmup Iteration  19: 235.707 ops/ms
# Warmup Iteration  20: 237.215 ops/ms
Iteration   1: 236.183 ops/ms
Iteration   2: 234.943 ops/ms
Iteration   3: 236.319 ops/ms
Iteration   4: 235.953 ops/ms
Iteration   5: 234.982 ops/ms
Iteration   6: 236.229 ops/ms
Iteration   7: 234.769 ops/ms
Iteration   8: 237.207 ops/ms
Iteration   9: 235.271 ops/ms
Iteration  10: 237.247 ops/ms
Iteration  11: 237.244 ops/ms
Iteration  12: 237.650 ops/ms
Iteration  13: 237.424 ops/ms
Iteration  14: 235.708 ops/ms
Iteration  15: 237.706 ops/ms
Iteration  16: 236.038 ops/ms
Iteration  17: 236.549 ops/ms
Iteration  18: 237.797 ops/ms
Iteration  19: 236.595 ops/ms
Iteration  20: 237.485 ops/ms

Result : 236.465 ?(95%) 0.461 ?(99%) 0.631 ops/ms
  Statistics: (min, avg, max) = (234.769, 236.465, 237.797), stdev = 0.986
  Confidence intervals: 95% [236.004, 236.926], 99% [235.834, 237.096]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 168.639 ops/ms
# Warmup Iteration   2: 215.737 ops/ms
# Warmup Iteration   3: 228.156 ops/ms
# Warmup Iteration   4: 232.269 ops/ms
# Warmup Iteration   5: 233.080 ops/ms
# Warmup Iteration   6: 231.673 ops/ms
# Warmup Iteration   7: 232.510 ops/ms
# Warmup Iteration   8: 230.754 ops/ms
# Warmup Iteration   9: 230.680 ops/ms
# Warmup Iteration  10: 230.875 ops/ms
# Warmup Iteration  11: 231.624 ops/ms
# Warmup Iteration  12: 230.913 ops/ms
# Warmup Iteration  13: 231.338 ops/ms
# Warmup Iteration  14: 231.843 ops/ms
# Warmup Iteration  15: 230.395 ops/ms
# Warmup Iteration  16: 229.964 ops/ms
# Warmup Iteration  17: 230.603 ops/ms
# Warmup Iteration  18: 228.830 ops/ms
# Warmup Iteration  19: 231.157 ops/ms
# Warmup Iteration  20: 228.765 ops/ms
Iteration   1: 230.296 ops/ms
Iteration   2: 229.537 ops/ms
Iteration   3: 231.059 ops/ms
Iteration   4: 230.251 ops/ms
Iteration   5: 229.132 ops/ms
Iteration   6: 228.600 ops/ms
Iteration   7: 229.431 ops/ms
Iteration   8: 231.571 ops/ms
Iteration   9: 228.330 ops/ms
Iteration  10: 227.697 ops/ms
Iteration  11: 230.941 ops/ms
Iteration  12: 230.878 ops/ms
Iteration  13: 230.714 ops/ms
Iteration  14: 232.095 ops/ms
Iteration  15: 230.909 ops/ms
Iteration  16: 230.799 ops/ms
Iteration  17: 231.705 ops/ms
Iteration  18: 230.068 ops/ms
Iteration  19: 231.021 ops/ms
Iteration  20: 230.176 ops/ms

Result : 230.260 ?(95%) 0.545 ?(99%) 0.745 ops/ms
  Statistics: (min, avg, max) = (227.697, 230.260, 232.095), stdev = 1.164
  Confidence intervals: 95% [229.716, 230.805], 99% [229.516, 231.005]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 64153.210 ops/ms
# Warmup Iteration   2: 94271.176 ops/ms
# Warmup Iteration   3: 93236.147 ops/ms
# Warmup Iteration   4: 92817.464 ops/ms
# Warmup Iteration   5: 92759.088 ops/ms
# Warmup Iteration   6: 90415.155 ops/ms
# Warmup Iteration   7: 93378.617 ops/ms
# Warmup Iteration   8: 92015.788 ops/ms
# Warmup Iteration   9: 93580.332 ops/ms
# Warmup Iteration  10: 92590.570 ops/ms
# Warmup Iteration  11: 92845.470 ops/ms
# Warmup Iteration  12: 92760.479 ops/ms
# Warmup Iteration  13: 89972.460 ops/ms
# Warmup Iteration  14: 92887.345 ops/ms
# Warmup Iteration  15: 92206.002 ops/ms
# Warmup Iteration  16: 92285.651 ops/ms
# Warmup Iteration  17: 92325.805 ops/ms
# Warmup Iteration  18: 93370.215 ops/ms
# Warmup Iteration  19: 92415.452 ops/ms
# Warmup Iteration  20: 89776.901 ops/ms
Iteration   1: 92753.733 ops/ms
Iteration   2: 93385.004 ops/ms
Iteration   3: 92519.022 ops/ms
Iteration   4: 91073.290 ops/ms
Iteration   5: 93264.716 ops/ms
Iteration   6: 93487.693 ops/ms
Iteration   7: 92876.423 ops/ms
Iteration   8: 93197.957 ops/ms
Iteration   9: 92740.598 ops/ms
Iteration  10: 92897.694 ops/ms
Iteration  11: 91107.332 ops/ms
Iteration  12: 92383.853 ops/ms
Iteration  13: 93868.958 ops/ms
Iteration  14: 92544.695 ops/ms
Iteration  15: 90234.511 ops/ms
Iteration  16: 92832.702 ops/ms
Iteration  17: 93449.267 ops/ms
Iteration  18: 93168.006 ops/ms
Iteration  19: 93536.384 ops/ms
Iteration  20: 92538.721 ops/ms

Result : 92693.028 ?(95%) 429.992 ?(99%) 587.773 ops/ms
  Statistics: (min, avg, max) = (90234.511, 92693.028, 93868.958), stdev = 918.770
  Confidence intervals: 95% [92263.035, 93123.020], 99% [92105.255, 93280.801]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 65106.504 ops/ms
# Warmup Iteration   2: 92896.285 ops/ms
# Warmup Iteration   3: 92657.493 ops/ms
# Warmup Iteration   4: 93200.842 ops/ms
# Warmup Iteration   5: 93300.570 ops/ms
# Warmup Iteration   6: 91915.005 ops/ms
# Warmup Iteration   7: 94003.052 ops/ms
# Warmup Iteration   8: 93332.555 ops/ms
# Warmup Iteration   9: 89573.258 ops/ms
# Warmup Iteration  10: 93879.492 ops/ms
# Warmup Iteration  11: 93542.675 ops/ms
# Warmup Iteration  12: 93124.818 ops/ms
# Warmup Iteration  13: 90891.277 ops/ms
# Warmup Iteration  14: 92789.013 ops/ms
# Warmup Iteration  15: 91843.754 ops/ms
# Warmup Iteration  16: 92349.452 ops/ms
# Warmup Iteration  17: 93486.489 ops/ms
# Warmup Iteration  18: 93024.846 ops/ms
# Warmup Iteration  19: 93355.452 ops/ms
# Warmup Iteration  20: 92984.381 ops/ms
Iteration   1: 91802.263 ops/ms
Iteration   2: 94005.624 ops/ms
Iteration   3: 90942.909 ops/ms
Iteration   4: 91141.545 ops/ms
Iteration   5: 93103.311 ops/ms
Iteration   6: 93033.303 ops/ms
Iteration   7: 92904.649 ops/ms
Iteration   8: 90255.664 ops/ms
Iteration   9: 93309.800 ops/ms
Iteration  10: 93190.530 ops/ms
Iteration  11: 92580.390 ops/ms
Iteration  12: 93824.703 ops/ms
Iteration  13: 93103.100 ops/ms
Iteration  14: 93317.758 ops/ms
Iteration  15: 91656.326 ops/ms
Iteration  16: 93054.371 ops/ms
Iteration  17: 93445.940 ops/ms
Iteration  18: 91886.474 ops/ms
Iteration  19: 93329.478 ops/ms
Iteration  20: 92874.685 ops/ms

Result : 92638.141 ?(95%) 474.568 ?(99%) 648.705 ops/ms
  Statistics: (min, avg, max) = (90255.664, 92638.141, 94005.624), stdev = 1014.015
  Confidence intervals: 95% [92163.573, 93112.709], 99% [91989.436, 93286.846]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 64592.260 ops/ms
# Warmup Iteration   2: 94124.217 ops/ms
# Warmup Iteration   3: 93974.358 ops/ms
# Warmup Iteration   4: 93970.213 ops/ms
# Warmup Iteration   5: 92871.466 ops/ms
# Warmup Iteration   6: 89923.548 ops/ms
# Warmup Iteration   7: 93496.871 ops/ms
# Warmup Iteration   8: 92805.901 ops/ms
# Warmup Iteration   9: 93255.043 ops/ms
# Warmup Iteration  10: 93122.407 ops/ms
# Warmup Iteration  11: 93362.595 ops/ms
# Warmup Iteration  12: 92902.776 ops/ms
# Warmup Iteration  13: 90611.162 ops/ms
# Warmup Iteration  14: 92950.459 ops/ms
# Warmup Iteration  15: 93224.409 ops/ms
# Warmup Iteration  16: 92830.105 ops/ms
# Warmup Iteration  17: 91476.553 ops/ms
# Warmup Iteration  18: 93576.243 ops/ms
# Warmup Iteration  19: 93098.598 ops/ms
# Warmup Iteration  20: 90608.769 ops/ms
Iteration   1: 93498.392 ops/ms
Iteration   2: 93335.934 ops/ms
Iteration   3: 94230.107 ops/ms
Iteration   4: 90911.650 ops/ms
Iteration   5: 92308.518 ops/ms
Iteration   6: 93587.898 ops/ms
Iteration   7: 92607.710 ops/ms
Iteration   8: 90988.527 ops/ms
Iteration   9: 93221.320 ops/ms
Iteration  10: 92605.694 ops/ms
Iteration  11: 90572.545 ops/ms
Iteration  12: 92848.759 ops/ms
Iteration  13: 92766.768 ops/ms
Iteration  14: 93727.261 ops/ms
Iteration  15: 90716.176 ops/ms
Iteration  16: 92691.611 ops/ms
Iteration  17: 93386.925 ops/ms
Iteration  18: 93481.307 ops/ms
Iteration  19: 92575.669 ops/ms
Iteration  20: 93565.997 ops/ms

Result : 92681.438 ?(95%) 505.039 ?(99%) 690.357 ops/ms
  Statistics: (min, avg, max) = (90572.545, 92681.438, 94230.107), stdev = 1079.122
  Confidence intervals: 95% [92176.400, 93186.477], 99% [91991.082, 93371.795]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 64348.533 ops/ms
# Warmup Iteration   2: 94237.228 ops/ms
# Warmup Iteration   3: 93803.312 ops/ms
# Warmup Iteration   4: 92714.513 ops/ms
# Warmup Iteration   5: 93822.805 ops/ms
# Warmup Iteration   6: 91550.178 ops/ms
# Warmup Iteration   7: 93895.030 ops/ms
# Warmup Iteration   8: 92977.283 ops/ms
# Warmup Iteration   9: 91791.270 ops/ms
# Warmup Iteration  10: 92344.311 ops/ms
# Warmup Iteration  11: 93584.663 ops/ms
# Warmup Iteration  12: 92662.742 ops/ms
# Warmup Iteration  13: 90830.122 ops/ms
# Warmup Iteration  14: 93030.666 ops/ms
# Warmup Iteration  15: 92954.629 ops/ms
# Warmup Iteration  16: 93798.791 ops/ms
# Warmup Iteration  17: 93360.525 ops/ms
# Warmup Iteration  18: 93142.367 ops/ms
# Warmup Iteration  19: 92802.170 ops/ms
# Warmup Iteration  20: 92928.593 ops/ms
Iteration   1: 92206.058 ops/ms
Iteration   2: 92420.954 ops/ms
Iteration   3: 93069.421 ops/ms
Iteration   4: 93259.621 ops/ms
Iteration   5: 92780.970 ops/ms
Iteration   6: 94275.571 ops/ms
Iteration   7: 93859.508 ops/ms
Iteration   8: 90254.359 ops/ms
Iteration   9: 93342.940 ops/ms
Iteration  10: 92891.325 ops/ms
Iteration  11: 89951.527 ops/ms
Iteration  12: 92681.407 ops/ms
Iteration  13: 93788.428 ops/ms
Iteration  14: 92924.449 ops/ms
Iteration  15: 90634.036 ops/ms
Iteration  16: 92131.145 ops/ms
Iteration  17: 94177.958 ops/ms
Iteration  18: 93319.142 ops/ms
Iteration  19: 91982.982 ops/ms
Iteration  20: 92714.323 ops/ms

Result : 92633.306 ?(95%) 562.128 ?(99%) 768.394 ops/ms
  Statistics: (min, avg, max) = (89951.527, 92633.306, 94275.571), stdev = 1201.105
  Confidence intervals: 95% [92071.178, 93195.434], 99% [91864.912, 93401.700]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 65213.141 ops/ms
# Warmup Iteration   2: 94203.745 ops/ms
# Warmup Iteration   3: 94233.565 ops/ms
# Warmup Iteration   4: 93198.754 ops/ms
# Warmup Iteration   5: 93639.861 ops/ms
# Warmup Iteration   6: 90874.779 ops/ms
# Warmup Iteration   7: 92905.453 ops/ms
# Warmup Iteration   8: 94247.601 ops/ms
# Warmup Iteration   9: 93583.898 ops/ms
# Warmup Iteration  10: 90232.100 ops/ms
# Warmup Iteration  11: 93768.490 ops/ms
# Warmup Iteration  12: 93559.567 ops/ms
# Warmup Iteration  13: 93668.288 ops/ms
# Warmup Iteration  14: 92693.597 ops/ms
# Warmup Iteration  15: 92104.614 ops/ms
# Warmup Iteration  16: 90581.112 ops/ms
# Warmup Iteration  17: 93611.542 ops/ms
# Warmup Iteration  18: 92942.490 ops/ms
# Warmup Iteration  19: 93512.757 ops/ms
# Warmup Iteration  20: 92494.669 ops/ms
Iteration   1: 92189.174 ops/ms
Iteration   2: 92925.011 ops/ms
Iteration   3: 92620.717 ops/ms
Iteration   4: 90389.536 ops/ms
Iteration   5: 93022.021 ops/ms
Iteration   6: 92859.922 ops/ms
Iteration   7: 93258.672 ops/ms
Iteration   8: 89934.562 ops/ms
Iteration   9: 93453.302 ops/ms
Iteration  10: 93331.533 ops/ms
Iteration  11: 92366.257 ops/ms
Iteration  12: 93151.261 ops/ms
Iteration  13: 92736.521 ops/ms
Iteration  14: 93083.930 ops/ms
Iteration  15: 89857.709 ops/ms
Iteration  16: 93319.230 ops/ms
Iteration  17: 93286.930 ops/ms
Iteration  18: 92672.700 ops/ms
Iteration  19: 91354.077 ops/ms
Iteration  20: 88546.282 ops/ms

Result : 92217.967 ?(95%) 665.341 ?(99%) 909.480 ops/ms
  Statistics: (min, avg, max) = (88546.282, 92217.967, 93453.302), stdev = 1421.642
  Confidence intervals: 95% [91552.626, 92883.309], 99% [91308.487, 93127.447]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 10.439 ops/ms
# Warmup Iteration   2: 29.998 ops/ms
# Warmup Iteration   3: 37.407 ops/ms
# Warmup Iteration   4: 41.477 ops/ms
# Warmup Iteration   5: 42.842 ops/ms
# Warmup Iteration   6: 43.129 ops/ms
# Warmup Iteration   7: 42.612 ops/ms
# Warmup Iteration   8: 42.569 ops/ms
# Warmup Iteration   9: 43.234 ops/ms
# Warmup Iteration  10: 43.365 ops/ms
# Warmup Iteration  11: 43.334 ops/ms
# Warmup Iteration  12: 43.403 ops/ms
# Warmup Iteration  13: 43.423 ops/ms
# Warmup Iteration  14: 43.299 ops/ms
# Warmup Iteration  15: 43.323 ops/ms
# Warmup Iteration  16: 42.760 ops/ms
# Warmup Iteration  17: 43.159 ops/ms
# Warmup Iteration  18: 42.852 ops/ms
# Warmup Iteration  19: 42.557 ops/ms
# Warmup Iteration  20: 42.823 ops/ms
Iteration   1: 43.187 ops/ms
Iteration   2: 43.074 ops/ms
Iteration   3: 42.855 ops/ms
Iteration   4: 43.364 ops/ms
Iteration   5: 43.308 ops/ms
Iteration   6: 43.202 ops/ms
Iteration   7: 43.132 ops/ms
Iteration   8: 42.892 ops/ms
Iteration   9: 43.100 ops/ms
Iteration  10: 43.355 ops/ms
Iteration  11: 42.857 ops/ms
Iteration  12: 43.255 ops/ms
Iteration  13: 43.330 ops/ms
Iteration  14: 43.104 ops/ms
Iteration  15: 43.126 ops/ms
Iteration  16: 43.232 ops/ms
Iteration  17: 43.294 ops/ms
Iteration  18: 43.312 ops/ms
Iteration  19: 42.998 ops/ms
Iteration  20: 43.321 ops/ms

Result : 43.165 ?(95%) 0.077 ?(99%) 0.105 ops/ms
  Statistics: (min, avg, max) = (42.855, 43.165, 43.364), stdev = 0.164
  Confidence intervals: 95% [43.088, 43.242], 99% [43.060, 43.270]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.235 ops/ms
# Warmup Iteration   2: 30.715 ops/ms
# Warmup Iteration   3: 37.327 ops/ms
# Warmup Iteration   4: 41.091 ops/ms
# Warmup Iteration   5: 41.959 ops/ms
# Warmup Iteration   6: 42.521 ops/ms
# Warmup Iteration   7: 42.647 ops/ms
# Warmup Iteration   8: 42.604 ops/ms
# Warmup Iteration   9: 42.462 ops/ms
# Warmup Iteration  10: 42.839 ops/ms
# Warmup Iteration  11: 42.865 ops/ms
# Warmup Iteration  12: 42.917 ops/ms
# Warmup Iteration  13: 42.869 ops/ms
# Warmup Iteration  14: 42.344 ops/ms
# Warmup Iteration  15: 42.671 ops/ms
# Warmup Iteration  16: 42.830 ops/ms
# Warmup Iteration  17: 42.433 ops/ms
# Warmup Iteration  18: 42.865 ops/ms
# Warmup Iteration  19: 42.826 ops/ms
# Warmup Iteration  20: 42.780 ops/ms
Iteration   1: 42.858 ops/ms
Iteration   2: 42.312 ops/ms
Iteration   3: 42.619 ops/ms
Iteration   4: 42.923 ops/ms
Iteration   5: 42.900 ops/ms
Iteration   6: 42.338 ops/ms
Iteration   7: 42.678 ops/ms
Iteration   8: 42.586 ops/ms
Iteration   9: 42.442 ops/ms
Iteration  10: 42.807 ops/ms
Iteration  11: 42.784 ops/ms
Iteration  12: 42.867 ops/ms
Iteration  13: 42.793 ops/ms
Iteration  14: 42.827 ops/ms
Iteration  15: 42.723 ops/ms
Iteration  16: 42.594 ops/ms
Iteration  17: 42.898 ops/ms
Iteration  18: 42.848 ops/ms
Iteration  19: 42.644 ops/ms
Iteration  20: 42.851 ops/ms

Result : 42.715 ?(95%) 0.086 ?(99%) 0.118 ops/ms
  Statistics: (min, avg, max) = (42.312, 42.715, 42.923), stdev = 0.185
  Confidence intervals: 95% [42.628, 42.801], 99% [42.596, 42.833]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.285 ops/ms
# Warmup Iteration   2: 30.822 ops/ms
# Warmup Iteration   3: 37.386 ops/ms
# Warmup Iteration   4: 41.499 ops/ms
# Warmup Iteration   5: 42.477 ops/ms
# Warmup Iteration   6: 42.625 ops/ms
# Warmup Iteration   7: 43.028 ops/ms
# Warmup Iteration   8: 43.119 ops/ms
# Warmup Iteration   9: 43.165 ops/ms
# Warmup Iteration  10: 42.880 ops/ms
# Warmup Iteration  11: 42.792 ops/ms
# Warmup Iteration  12: 42.967 ops/ms
# Warmup Iteration  13: 42.822 ops/ms
# Warmup Iteration  14: 43.184 ops/ms
# Warmup Iteration  15: 43.173 ops/ms
# Warmup Iteration  16: 43.047 ops/ms
# Warmup Iteration  17: 43.010 ops/ms
# Warmup Iteration  18: 43.036 ops/ms
# Warmup Iteration  19: 42.890 ops/ms
# Warmup Iteration  20: 43.004 ops/ms
Iteration   1: 43.260 ops/ms
Iteration   2: 43.070 ops/ms
Iteration   3: 42.869 ops/ms
Iteration   4: 42.978 ops/ms
Iteration   5: 43.280 ops/ms
Iteration   6: 43.099 ops/ms
Iteration   7: 43.204 ops/ms
Iteration   8: 42.959 ops/ms
Iteration   9: 43.160 ops/ms
Iteration  10: 43.297 ops/ms
Iteration  11: 43.013 ops/ms
Iteration  12: 43.291 ops/ms
Iteration  13: 43.214 ops/ms
Iteration  14: 43.202 ops/ms
Iteration  15: 43.175 ops/ms
Iteration  16: 42.953 ops/ms
Iteration  17: 43.313 ops/ms
Iteration  18: 43.222 ops/ms
Iteration  19: 43.235 ops/ms
Iteration  20: 43.166 ops/ms

Result : 43.148 ?(95%) 0.062 ?(99%) 0.085 ops/ms
  Statistics: (min, avg, max) = (42.869, 43.148, 43.313), stdev = 0.132
  Confidence intervals: 95% [43.086, 43.210], 99% [43.063, 43.233]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.433 ops/ms
# Warmup Iteration   2: 30.601 ops/ms
# Warmup Iteration   3: 37.602 ops/ms
# Warmup Iteration   4: 41.780 ops/ms
# Warmup Iteration   5: 43.271 ops/ms
# Warmup Iteration   6: 43.422 ops/ms
# Warmup Iteration   7: 43.755 ops/ms
# Warmup Iteration   8: 43.750 ops/ms
# Warmup Iteration   9: 43.909 ops/ms
# Warmup Iteration  10: 43.789 ops/ms
# Warmup Iteration  11: 43.985 ops/ms
# Warmup Iteration  12: 43.963 ops/ms
# Warmup Iteration  13: 43.872 ops/ms
# Warmup Iteration  14: 43.662 ops/ms
# Warmup Iteration  15: 43.829 ops/ms
# Warmup Iteration  16: 43.979 ops/ms
# Warmup Iteration  17: 43.799 ops/ms
# Warmup Iteration  18: 43.841 ops/ms
# Warmup Iteration  19: 43.933 ops/ms
# Warmup Iteration  20: 43.759 ops/ms
Iteration   1: 43.665 ops/ms
Iteration   2: 43.644 ops/ms
Iteration   3: 43.605 ops/ms
Iteration   4: 43.879 ops/ms
Iteration   5: 43.722 ops/ms
Iteration   6: 43.687 ops/ms
Iteration   7: 43.740 ops/ms
Iteration   8: 43.909 ops/ms
Iteration   9: 43.683 ops/ms
Iteration  10: 43.673 ops/ms
Iteration  11: 43.598 ops/ms
Iteration  12: 43.748 ops/ms
Iteration  13: 43.709 ops/ms
Iteration  14: 43.861 ops/ms
Iteration  15: 43.851 ops/ms
Iteration  16: 43.705 ops/ms
Iteration  17: 43.616 ops/ms
Iteration  18: 43.894 ops/ms
Iteration  19: 43.819 ops/ms
Iteration  20: 43.600 ops/ms

Result : 43.730 ?(95%) 0.048 ?(99%) 0.066 ops/ms
  Statistics: (min, avg, max) = (43.598, 43.730, 43.909), stdev = 0.104
  Confidence intervals: 95% [43.682, 43.779], 99% [43.664, 43.797]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 11.559 ops/ms
# Warmup Iteration   2: 30.866 ops/ms
# Warmup Iteration   3: 37.239 ops/ms
# Warmup Iteration   4: 41.464 ops/ms
# Warmup Iteration   5: 42.575 ops/ms
# Warmup Iteration   6: 43.028 ops/ms
# Warmup Iteration   7: 43.235 ops/ms
# Warmup Iteration   8: 43.306 ops/ms
# Warmup Iteration   9: 43.168 ops/ms
# Warmup Iteration  10: 43.159 ops/ms
# Warmup Iteration  11: 42.969 ops/ms
# Warmup Iteration  12: 43.207 ops/ms
# Warmup Iteration  13: 42.876 ops/ms
# Warmup Iteration  14: 43.298 ops/ms
# Warmup Iteration  15: 43.063 ops/ms
# Warmup Iteration  16: 42.927 ops/ms
# Warmup Iteration  17: 43.198 ops/ms
# Warmup Iteration  18: 43.364 ops/ms
# Warmup Iteration  19: 43.151 ops/ms
# Warmup Iteration  20: 43.102 ops/ms
Iteration   1: 43.009 ops/ms
Iteration   2: 43.159 ops/ms
Iteration   3: 42.884 ops/ms
Iteration   4: 43.048 ops/ms
Iteration   5: 43.330 ops/ms
Iteration   6: 42.741 ops/ms
Iteration   7: 43.245 ops/ms
Iteration   8: 43.302 ops/ms
Iteration   9: 43.081 ops/ms
Iteration  10: 43.308 ops/ms
Iteration  11: 43.097 ops/ms
Iteration  12: 43.360 ops/ms
Iteration  13: 43.102 ops/ms
Iteration  14: 43.267 ops/ms
Iteration  15: 43.034 ops/ms
Iteration  16: 43.036 ops/ms
Iteration  17: 42.946 ops/ms
Iteration  18: 43.284 ops/ms
Iteration  19: 43.348 ops/ms
Iteration  20: 42.891 ops/ms

Result : 43.124 ?(95%) 0.083 ?(99%) 0.114 ops/ms
  Statistics: (min, avg, max) = (42.741, 43.124, 43.360), stdev = 0.178
  Confidence intervals: 95% [43.040, 43.207], 99% [43.010, 43.238]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.987 ops/ms
# Warmup Iteration   2: 13.399 ops/ms
# Warmup Iteration   3: 16.218 ops/ms
# Warmup Iteration   4: 17.799 ops/ms
# Warmup Iteration   5: 18.206 ops/ms
# Warmup Iteration   6: 18.222 ops/ms
# Warmup Iteration   7: 18.239 ops/ms
# Warmup Iteration   8: 18.204 ops/ms
# Warmup Iteration   9: 18.241 ops/ms
# Warmup Iteration  10: 18.285 ops/ms
# Warmup Iteration  11: 18.320 ops/ms
# Warmup Iteration  12: 18.324 ops/ms
# Warmup Iteration  13: 18.245 ops/ms
# Warmup Iteration  14: 18.279 ops/ms
# Warmup Iteration  15: 18.261 ops/ms
# Warmup Iteration  16: 18.303 ops/ms
# Warmup Iteration  17: 18.175 ops/ms
# Warmup Iteration  18: 18.093 ops/ms
# Warmup Iteration  19: 18.229 ops/ms
# Warmup Iteration  20: 18.127 ops/ms
Iteration   1: 18.171 ops/ms
Iteration   2: 18.191 ops/ms
Iteration   3: 18.300 ops/ms
Iteration   4: 18.286 ops/ms
Iteration   5: 18.213 ops/ms
Iteration   6: 18.077 ops/ms
Iteration   7: 18.276 ops/ms
Iteration   8: 18.192 ops/ms
Iteration   9: 18.288 ops/ms
Iteration  10: 18.285 ops/ms
Iteration  11: 18.278 ops/ms
Iteration  12: 18.220 ops/ms
Iteration  13: 18.205 ops/ms
Iteration  14: 18.224 ops/ms
Iteration  15: 18.274 ops/ms
Iteration  16: 18.234 ops/ms
Iteration  17: 18.206 ops/ms
Iteration  18: 18.178 ops/ms
Iteration  19: 18.282 ops/ms
Iteration  20: 18.273 ops/ms

Result : 18.233 ?(95%) 0.026 ?(99%) 0.036 ops/ms
  Statistics: (min, avg, max) = (18.077, 18.233, 18.300), stdev = 0.056
  Confidence intervals: 95% [18.207, 18.259], 99% [18.197, 18.268]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.851 ops/ms
# Warmup Iteration   2: 13.543 ops/ms
# Warmup Iteration   3: 16.628 ops/ms
# Warmup Iteration   4: 18.312 ops/ms
# Warmup Iteration   5: 18.781 ops/ms
# Warmup Iteration   6: 18.781 ops/ms
# Warmup Iteration   7: 18.134 ops/ms
# Warmup Iteration   8: 18.020 ops/ms
# Warmup Iteration   9: 18.060 ops/ms
# Warmup Iteration  10: 18.734 ops/ms
# Warmup Iteration  11: 18.751 ops/ms
# Warmup Iteration  12: 18.956 ops/ms
# Warmup Iteration  13: 18.962 ops/ms
# Warmup Iteration  14: 18.366 ops/ms
# Warmup Iteration  15: 18.613 ops/ms
# Warmup Iteration  16: 18.810 ops/ms
# Warmup Iteration  17: 18.922 ops/ms
# Warmup Iteration  18: 18.879 ops/ms
# Warmup Iteration  19: 18.970 ops/ms
# Warmup Iteration  20: 18.923 ops/ms
Iteration   1: 18.884 ops/ms
Iteration   2: 18.965 ops/ms
Iteration   3: 18.877 ops/ms
Iteration   4: 18.848 ops/ms
Iteration   5: 18.788 ops/ms
Iteration   6: 18.867 ops/ms
Iteration   7: 18.795 ops/ms
Iteration   8: 18.934 ops/ms
Iteration   9: 18.439 ops/ms
Iteration  10: 18.159 ops/ms
Iteration  11: 18.129 ops/ms
Iteration  12: 18.478 ops/ms
Iteration  13: 18.819 ops/ms
Iteration  14: 18.872 ops/ms
Iteration  15: 18.971 ops/ms
Iteration  16: 18.427 ops/ms
Iteration  17: 18.711 ops/ms
Iteration  18: 18.599 ops/ms
Iteration  19: 18.727 ops/ms
Iteration  20: 18.908 ops/ms

Result : 18.710 ?(95%) 0.119 ?(99%) 0.163 ops/ms
  Statistics: (min, avg, max) = (18.129, 18.710, 18.971), stdev = 0.255
  Confidence intervals: 95% [18.590, 18.829], 99% [18.547, 18.873]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.730 ops/ms
# Warmup Iteration   2: 12.951 ops/ms
# Warmup Iteration   3: 15.660 ops/ms
# Warmup Iteration   4: 17.130 ops/ms
# Warmup Iteration   5: 17.449 ops/ms
# Warmup Iteration   6: 17.433 ops/ms
# Warmup Iteration   7: 17.576 ops/ms
# Warmup Iteration   8: 17.622 ops/ms
# Warmup Iteration   9: 17.624 ops/ms
# Warmup Iteration  10: 17.581 ops/ms
# Warmup Iteration  11: 17.557 ops/ms
# Warmup Iteration  12: 17.516 ops/ms
# Warmup Iteration  13: 17.587 ops/ms
# Warmup Iteration  14: 17.519 ops/ms
# Warmup Iteration  15: 17.490 ops/ms
# Warmup Iteration  16: 17.637 ops/ms
# Warmup Iteration  17: 17.604 ops/ms
# Warmup Iteration  18: 17.431 ops/ms
# Warmup Iteration  19: 17.643 ops/ms
# Warmup Iteration  20: 17.498 ops/ms
Iteration   1: 17.499 ops/ms
Iteration   2: 17.534 ops/ms
Iteration   3: 17.602 ops/ms
Iteration   4: 17.496 ops/ms
Iteration   5: 17.620 ops/ms
Iteration   6: 17.597 ops/ms
Iteration   7: 17.622 ops/ms
Iteration   8: 17.637 ops/ms
Iteration   9: 17.614 ops/ms
Iteration  10: 17.610 ops/ms
Iteration  11: 17.604 ops/ms
Iteration  12: 17.468 ops/ms
Iteration  13: 17.527 ops/ms
Iteration  14: 17.490 ops/ms
Iteration  15: 17.364 ops/ms
Iteration  16: 17.446 ops/ms
Iteration  17: 17.524 ops/ms
Iteration  18: 17.533 ops/ms
Iteration  19: 17.684 ops/ms
Iteration  20: 17.602 ops/ms

Result : 17.554 ?(95%) 0.037 ?(99%) 0.050 ops/ms
  Statistics: (min, avg, max) = (17.364, 17.554, 17.684), stdev = 0.078
  Confidence intervals: 95% [17.517, 17.590], 99% [17.504, 17.604]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.699 ops/ms
# Warmup Iteration   2: 12.993 ops/ms
# Warmup Iteration   3: 15.826 ops/ms
# Warmup Iteration   4: 17.620 ops/ms
# Warmup Iteration   5: 17.994 ops/ms
# Warmup Iteration   6: 18.099 ops/ms
# Warmup Iteration   7: 18.045 ops/ms
# Warmup Iteration   8: 18.196 ops/ms
# Warmup Iteration   9: 18.103 ops/ms
# Warmup Iteration  10: 18.130 ops/ms
# Warmup Iteration  11: 18.213 ops/ms
# Warmup Iteration  12: 18.215 ops/ms
# Warmup Iteration  13: 17.978 ops/ms
# Warmup Iteration  14: 18.090 ops/ms
# Warmup Iteration  15: 18.131 ops/ms
# Warmup Iteration  16: 18.145 ops/ms
# Warmup Iteration  17: 18.151 ops/ms
# Warmup Iteration  18: 18.085 ops/ms
# Warmup Iteration  19: 18.195 ops/ms
# Warmup Iteration  20: 18.142 ops/ms
Iteration   1: 18.172 ops/ms
Iteration   2: 18.182 ops/ms
Iteration   3: 18.051 ops/ms
Iteration   4: 18.187 ops/ms
Iteration   5: 18.190 ops/ms
Iteration   6: 18.107 ops/ms
Iteration   7: 18.198 ops/ms
Iteration   8: 18.143 ops/ms
Iteration   9: 18.067 ops/ms
Iteration  10: 18.080 ops/ms
Iteration  11: 18.064 ops/ms
Iteration  12: 18.191 ops/ms
Iteration  13: 18.136 ops/ms
Iteration  14: 18.061 ops/ms
Iteration  15: 18.107 ops/ms
Iteration  16: 18.051 ops/ms
Iteration  17: 18.140 ops/ms
Iteration  18: 18.121 ops/ms
Iteration  19: 18.179 ops/ms
Iteration  20: 18.113 ops/ms

Result : 18.127 ?(95%) 0.024 ?(99%) 0.033 ops/ms
  Statistics: (min, avg, max) = (18.051, 18.127, 18.198), stdev = 0.052
  Confidence intervals: 95% [18.103, 18.151], 99% [18.094, 18.160]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 6.993 ops/ms
# Warmup Iteration   2: 13.526 ops/ms
# Warmup Iteration   3: 16.465 ops/ms
# Warmup Iteration   4: 18.091 ops/ms
# Warmup Iteration   5: 18.466 ops/ms
# Warmup Iteration   6: 18.520 ops/ms
# Warmup Iteration   7: 18.477 ops/ms
# Warmup Iteration   8: 18.494 ops/ms
# Warmup Iteration   9: 18.555 ops/ms
# Warmup Iteration  10: 18.474 ops/ms
# Warmup Iteration  11: 18.482 ops/ms
# Warmup Iteration  12: 18.552 ops/ms
# Warmup Iteration  13: 18.475 ops/ms
# Warmup Iteration  14: 18.553 ops/ms
# Warmup Iteration  15: 18.588 ops/ms
# Warmup Iteration  16: 18.557 ops/ms
# Warmup Iteration  17: 18.607 ops/ms
# Warmup Iteration  18: 18.589 ops/ms
# Warmup Iteration  19: 18.596 ops/ms
# Warmup Iteration  20: 18.623 ops/ms
Iteration   1: 18.616 ops/ms
Iteration   2: 18.598 ops/ms
Iteration   3: 18.540 ops/ms
Iteration   4: 18.634 ops/ms
Iteration   5: 18.626 ops/ms
Iteration   6: 18.568 ops/ms
Iteration   7: 18.602 ops/ms
Iteration   8: 18.610 ops/ms
Iteration   9: 18.622 ops/ms
Iteration  10: 18.550 ops/ms
Iteration  11: 18.537 ops/ms
Iteration  12: 18.537 ops/ms
Iteration  13: 18.540 ops/ms
Iteration  14: 18.587 ops/ms
Iteration  15: 18.533 ops/ms
Iteration  16: 18.473 ops/ms
Iteration  17: 18.578 ops/ms
Iteration  18: 18.554 ops/ms
Iteration  19: 18.573 ops/ms
Iteration  20: 18.552 ops/ms

Result : 18.571 ?(95%) 0.019 ?(99%) 0.026 ops/ms
  Statistics: (min, avg, max) = (18.473, 18.571, 18.634), stdev = 0.041
  Confidence intervals: 95% [18.552, 18.591], 99% [18.546, 18.597]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.000 ops/ms
# Warmup Iteration   2: 63.712 ops/ms
# Warmup Iteration   3: 78.378 ops/ms
# Warmup Iteration   4: 84.278 ops/ms
# Warmup Iteration   5: 86.072 ops/ms
# Warmup Iteration   6: 86.844 ops/ms
# Warmup Iteration   7: 87.220 ops/ms
# Warmup Iteration   8: 86.910 ops/ms
# Warmup Iteration   9: 87.012 ops/ms
# Warmup Iteration  10: 86.948 ops/ms
# Warmup Iteration  11: 87.152 ops/ms
# Warmup Iteration  12: 87.356 ops/ms
# Warmup Iteration  13: 86.906 ops/ms
# Warmup Iteration  14: 87.292 ops/ms
# Warmup Iteration  15: 87.308 ops/ms
# Warmup Iteration  16: 85.936 ops/ms
# Warmup Iteration  17: 86.622 ops/ms
# Warmup Iteration  18: 86.824 ops/ms
# Warmup Iteration  19: 86.720 ops/ms
# Warmup Iteration  20: 87.294 ops/ms
Iteration   1: 87.241 ops/ms
Iteration   2: 87.324 ops/ms
Iteration   3: 87.249 ops/ms
Iteration   4: 86.866 ops/ms
Iteration   5: 87.340 ops/ms
Iteration   6: 87.099 ops/ms
Iteration   7: 87.357 ops/ms
Iteration   8: 87.291 ops/ms
Iteration   9: 87.055 ops/ms
Iteration  10: 86.993 ops/ms
Iteration  11: 86.629 ops/ms
Iteration  12: 87.326 ops/ms
Iteration  13: 87.351 ops/ms
Iteration  14: 86.692 ops/ms
Iteration  15: 87.154 ops/ms
Iteration  16: 87.366 ops/ms
Iteration  17: 87.321 ops/ms
Iteration  18: 86.963 ops/ms
Iteration  19: 87.220 ops/ms
Iteration  20: 86.891 ops/ms

Result : 87.136 ?(95%) 0.107 ?(99%) 0.146 ops/ms
  Statistics: (min, avg, max) = (86.629, 87.136, 87.366), stdev = 0.229
  Confidence intervals: 95% [87.029, 87.244], 99% [86.990, 87.283]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.878 ops/ms
# Warmup Iteration   2: 64.106 ops/ms
# Warmup Iteration   3: 78.658 ops/ms
# Warmup Iteration   4: 85.834 ops/ms
# Warmup Iteration   5: 87.965 ops/ms
# Warmup Iteration   6: 88.652 ops/ms
# Warmup Iteration   7: 89.134 ops/ms
# Warmup Iteration   8: 89.144 ops/ms
# Warmup Iteration   9: 89.282 ops/ms
# Warmup Iteration  10: 89.122 ops/ms
# Warmup Iteration  11: 88.911 ops/ms
# Warmup Iteration  12: 89.079 ops/ms
# Warmup Iteration  13: 88.798 ops/ms
# Warmup Iteration  14: 88.865 ops/ms
# Warmup Iteration  15: 89.256 ops/ms
# Warmup Iteration  16: 89.353 ops/ms
# Warmup Iteration  17: 89.372 ops/ms
# Warmup Iteration  18: 89.182 ops/ms
# Warmup Iteration  19: 88.609 ops/ms
# Warmup Iteration  20: 89.200 ops/ms
Iteration   1: 89.253 ops/ms
Iteration   2: 89.006 ops/ms
Iteration   3: 89.376 ops/ms
Iteration   4: 88.958 ops/ms
Iteration   5: 89.263 ops/ms
Iteration   6: 88.623 ops/ms
Iteration   7: 88.863 ops/ms
Iteration   8: 89.309 ops/ms
Iteration   9: 88.485 ops/ms
Iteration  10: 88.968 ops/ms
Iteration  11: 89.028 ops/ms
Iteration  12: 89.017 ops/ms
Iteration  13: 88.812 ops/ms
Iteration  14: 89.413 ops/ms
Iteration  15: 89.353 ops/ms
Iteration  16: 88.936 ops/ms
Iteration  17: 89.296 ops/ms
Iteration  18: 89.405 ops/ms
Iteration  19: 89.311 ops/ms
Iteration  20: 88.589 ops/ms

Result : 89.063 ?(95%) 0.135 ?(99%) 0.184 ops/ms
  Statistics: (min, avg, max) = (88.485, 89.063, 89.413), stdev = 0.288
  Confidence intervals: 95% [88.928, 89.198], 99% [88.879, 89.247]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 20.485 ops/ms
# Warmup Iteration   2: 63.108 ops/ms
# Warmup Iteration   3: 77.143 ops/ms
# Warmup Iteration   4: 83.492 ops/ms
# Warmup Iteration   5: 85.621 ops/ms
# Warmup Iteration   6: 86.451 ops/ms
# Warmup Iteration   7: 86.535 ops/ms
# Warmup Iteration   8: 86.726 ops/ms
# Warmup Iteration   9: 86.232 ops/ms
# Warmup Iteration  10: 86.113 ops/ms
# Warmup Iteration  11: 86.388 ops/ms
# Warmup Iteration  12: 86.788 ops/ms
# Warmup Iteration  13: 86.307 ops/ms
# Warmup Iteration  14: 86.178 ops/ms
# Warmup Iteration  15: 86.357 ops/ms
# Warmup Iteration  16: 86.836 ops/ms
# Warmup Iteration  17: 85.923 ops/ms
# Warmup Iteration  18: 86.285 ops/ms
# Warmup Iteration  19: 86.146 ops/ms
# Warmup Iteration  20: 86.280 ops/ms
Iteration   1: 86.403 ops/ms
Iteration   2: 85.935 ops/ms
Iteration   3: 86.708 ops/ms
Iteration   4: 86.024 ops/ms
Iteration   5: 86.288 ops/ms
Iteration   6: 86.286 ops/ms
Iteration   7: 86.172 ops/ms
Iteration   8: 86.716 ops/ms
Iteration   9: 86.792 ops/ms
Iteration  10: 86.300 ops/ms
Iteration  11: 86.448 ops/ms
Iteration  12: 86.234 ops/ms
Iteration  13: 86.737 ops/ms
Iteration  14: 86.749 ops/ms
Iteration  15: 86.566 ops/ms
Iteration  16: 86.351 ops/ms
Iteration  17: 86.423 ops/ms
Iteration  18: 86.392 ops/ms
Iteration  19: 86.706 ops/ms
Iteration  20: 86.745 ops/ms

Result : 86.449 ?(95%) 0.120 ?(99%) 0.164 ops/ms
  Statistics: (min, avg, max) = (85.935, 86.449, 86.793), stdev = 0.257
  Confidence intervals: 95% [86.329, 86.569], 99% [86.284, 86.613]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.065 ops/ms
# Warmup Iteration   2: 62.288 ops/ms
# Warmup Iteration   3: 76.274 ops/ms
# Warmup Iteration   4: 83.734 ops/ms
# Warmup Iteration   5: 85.496 ops/ms
# Warmup Iteration   6: 86.461 ops/ms
# Warmup Iteration   7: 86.900 ops/ms
# Warmup Iteration   8: 87.127 ops/ms
# Warmup Iteration   9: 87.031 ops/ms
# Warmup Iteration  10: 86.991 ops/ms
# Warmup Iteration  11: 86.725 ops/ms
# Warmup Iteration  12: 86.644 ops/ms
# Warmup Iteration  13: 87.301 ops/ms
# Warmup Iteration  14: 87.055 ops/ms
# Warmup Iteration  15: 86.900 ops/ms
# Warmup Iteration  16: 87.371 ops/ms
# Warmup Iteration  17: 87.463 ops/ms
# Warmup Iteration  18: 87.081 ops/ms
# Warmup Iteration  19: 86.476 ops/ms
# Warmup Iteration  20: 87.423 ops/ms
Iteration   1: 87.316 ops/ms
Iteration   2: 86.459 ops/ms
Iteration   3: 87.012 ops/ms
Iteration   4: 87.417 ops/ms
Iteration   5: 86.090 ops/ms
Iteration   6: 87.077 ops/ms
Iteration   7: 86.839 ops/ms
Iteration   8: 86.783 ops/ms
Iteration   9: 87.084 ops/ms
Iteration  10: 87.118 ops/ms
Iteration  11: 87.323 ops/ms
Iteration  12: 87.573 ops/ms
Iteration  13: 86.917 ops/ms
Iteration  14: 87.396 ops/ms
Iteration  15: 86.536 ops/ms
Iteration  16: 86.843 ops/ms
Iteration  17: 87.373 ops/ms
Iteration  18: 86.820 ops/ms
Iteration  19: 87.170 ops/ms
Iteration  20: 86.957 ops/ms

Result : 87.005 ?(95%) 0.171 ?(99%) 0.233 ops/ms
  Statistics: (min, avg, max) = (86.090, 87.005, 87.573), stdev = 0.365
  Confidence intervals: 95% [86.834, 87.176], 99% [86.772, 87.239]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 21.587 ops/ms
# Warmup Iteration   2: 64.488 ops/ms
# Warmup Iteration   3: 78.139 ops/ms
# Warmup Iteration   4: 84.832 ops/ms
# Warmup Iteration   5: 86.758 ops/ms
# Warmup Iteration   6: 87.801 ops/ms
# Warmup Iteration   7: 87.605 ops/ms
# Warmup Iteration   8: 87.743 ops/ms
# Warmup Iteration   9: 87.536 ops/ms
# Warmup Iteration  10: 87.667 ops/ms
# Warmup Iteration  11: 87.832 ops/ms
# Warmup Iteration  12: 87.815 ops/ms
# Warmup Iteration  13: 87.913 ops/ms
# Warmup Iteration  14: 87.394 ops/ms
# Warmup Iteration  15: 88.141 ops/ms
# Warmup Iteration  16: 88.222 ops/ms
# Warmup Iteration  17: 87.764 ops/ms
# Warmup Iteration  18: 87.983 ops/ms
# Warmup Iteration  19: 88.178 ops/ms
# Warmup Iteration  20: 88.205 ops/ms
Iteration   1: 87.280 ops/ms
Iteration   2: 88.250 ops/ms
Iteration   3: 85.657 ops/ms
Iteration   4: 83.753 ops/ms
Iteration   5: 82.787 ops/ms
Iteration   6: 87.804 ops/ms
Iteration   7: 87.958 ops/ms
Iteration   8: 87.625 ops/ms
Iteration   9: 87.315 ops/ms
Iteration  10: 86.164 ops/ms
Iteration  11: 86.254 ops/ms
Iteration  12: 86.943 ops/ms
Iteration  13: 87.583 ops/ms
Iteration  14: 87.983 ops/ms
Iteration  15: 87.879 ops/ms
Iteration  16: 87.545 ops/ms
Iteration  17: 87.998 ops/ms
Iteration  18: 87.419 ops/ms
Iteration  19: 87.849 ops/ms
Iteration  20: 87.625 ops/ms

Result : 86.983 ?(95%) 0.677 ?(99%) 0.925 ops/ms
  Statistics: (min, avg, max) = (82.787, 86.983, 88.250), stdev = 1.446
  Confidence intervals: 95% [86.307, 87.660], 99% [86.059, 87.908]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 34692.288 ops/ms
# Warmup Iteration   2: 54804.375 ops/ms
# Warmup Iteration   3: 54146.680 ops/ms
# Warmup Iteration   4: 53509.104 ops/ms
# Warmup Iteration   5: 53720.031 ops/ms
# Warmup Iteration   6: 54186.741 ops/ms
# Warmup Iteration   7: 53602.310 ops/ms
# Warmup Iteration   8: 54332.605 ops/ms
# Warmup Iteration   9: 53361.247 ops/ms
# Warmup Iteration  10: 54459.730 ops/ms
# Warmup Iteration  11: 54273.557 ops/ms
# Warmup Iteration  12: 54462.947 ops/ms
# Warmup Iteration  13: 53523.786 ops/ms
# Warmup Iteration  14: 53904.737 ops/ms
# Warmup Iteration  15: 54035.198 ops/ms
# Warmup Iteration  16: 53403.547 ops/ms
# Warmup Iteration  17: 53885.911 ops/ms
# Warmup Iteration  18: 54282.812 ops/ms
# Warmup Iteration  19: 54347.780 ops/ms
# Warmup Iteration  20: 54146.114 ops/ms
Iteration   1: 54299.204 ops/ms
Iteration   2: 53150.900 ops/ms
Iteration   3: 53773.569 ops/ms
Iteration   4: 54212.217 ops/ms
Iteration   5: 53695.677 ops/ms
Iteration   6: 54045.028 ops/ms
Iteration   7: 54405.058 ops/ms
Iteration   8: 54135.832 ops/ms
Iteration   9: 53831.614 ops/ms
Iteration  10: 54108.450 ops/ms
Iteration  11: 53729.415 ops/ms
Iteration  12: 54368.085 ops/ms
Iteration  13: 53386.358 ops/ms
Iteration  14: 54005.766 ops/ms
Iteration  15: 54278.906 ops/ms
Iteration  16: 54283.582 ops/ms
Iteration  17: 53583.581 ops/ms
Iteration  18: 54425.251 ops/ms
Iteration  19: 54238.605 ops/ms
Iteration  20: 54033.133 ops/ms

Result : 53999.512 ?(95%) 165.635 ?(99%) 226.413 ops/ms
  Statistics: (min, avg, max) = (53150.900, 53999.512, 54425.251), stdev = 353.914
  Confidence intervals: 95% [53833.877, 54165.147], 99% [53773.099, 54225.924]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35724.599 ops/ms
# Warmup Iteration   2: 54808.516 ops/ms
# Warmup Iteration   3: 54505.828 ops/ms
# Warmup Iteration   4: 53836.883 ops/ms
# Warmup Iteration   5: 53662.547 ops/ms
# Warmup Iteration   6: 54538.954 ops/ms
# Warmup Iteration   7: 54265.599 ops/ms
# Warmup Iteration   8: 54468.634 ops/ms
# Warmup Iteration   9: 53454.527 ops/ms
# Warmup Iteration  10: 54304.097 ops/ms
# Warmup Iteration  11: 54253.967 ops/ms
# Warmup Iteration  12: 53910.324 ops/ms
# Warmup Iteration  13: 53478.192 ops/ms
# Warmup Iteration  14: 53925.901 ops/ms
# Warmup Iteration  15: 54457.637 ops/ms
# Warmup Iteration  16: 54054.071 ops/ms
# Warmup Iteration  17: 53319.605 ops/ms
# Warmup Iteration  18: 54565.692 ops/ms
# Warmup Iteration  19: 54029.512 ops/ms
# Warmup Iteration  20: 54523.775 ops/ms
Iteration   1: 53447.175 ops/ms
Iteration   2: 54074.445 ops/ms
Iteration   3: 54177.321 ops/ms
Iteration   4: 53921.145 ops/ms
Iteration   5: 53675.460 ops/ms
Iteration   6: 54513.429 ops/ms
Iteration   7: 54034.040 ops/ms
Iteration   8: 53768.858 ops/ms
Iteration   9: 53637.448 ops/ms
Iteration  10: 54332.514 ops/ms
Iteration  11: 54305.773 ops/ms
Iteration  12: 54004.920 ops/ms
Iteration  13: 53298.085 ops/ms
Iteration  14: 54307.476 ops/ms
Iteration  15: 54274.264 ops/ms
Iteration  16: 53892.504 ops/ms
Iteration  17: 53620.382 ops/ms
Iteration  18: 54294.348 ops/ms
Iteration  19: 54272.799 ops/ms
Iteration  20: 54049.176 ops/ms

Result : 53995.078 ?(95%) 155.183 ?(99%) 212.125 ops/ms
  Statistics: (min, avg, max) = (53298.085, 53995.078, 54513.429), stdev = 331.581
  Confidence intervals: 95% [53839.895, 54150.261], 99% [53782.953, 54207.204]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35461.943 ops/ms
# Warmup Iteration   2: 54695.754 ops/ms
# Warmup Iteration   3: 54662.673 ops/ms
# Warmup Iteration   4: 54887.911 ops/ms
# Warmup Iteration   5: 54134.865 ops/ms
# Warmup Iteration   6: 54813.250 ops/ms
# Warmup Iteration   7: 54643.179 ops/ms
# Warmup Iteration   8: 56600.912 ops/ms
# Warmup Iteration   9: 55251.714 ops/ms
# Warmup Iteration  10: 56250.611 ops/ms
# Warmup Iteration  11: 56617.491 ops/ms
# Warmup Iteration  12: 56402.954 ops/ms
# Warmup Iteration  13: 55399.441 ops/ms
# Warmup Iteration  14: 56589.147 ops/ms
# Warmup Iteration  15: 56373.510 ops/ms
# Warmup Iteration  16: 56044.307 ops/ms
# Warmup Iteration  17: 55560.009 ops/ms
# Warmup Iteration  18: 56040.733 ops/ms
# Warmup Iteration  19: 56331.633 ops/ms
# Warmup Iteration  20: 56253.907 ops/ms
Iteration   1: 55951.985 ops/ms
Iteration   2: 56335.050 ops/ms
Iteration   3: 56481.330 ops/ms
Iteration   4: 56315.951 ops/ms
Iteration   5: 56235.756 ops/ms
Iteration   6: 56221.976 ops/ms
Iteration   7: 56359.980 ops/ms
Iteration   8: 55428.413 ops/ms
Iteration   9: 56410.637 ops/ms
Iteration  10: 56240.711 ops/ms
Iteration  11: 56521.983 ops/ms
Iteration  12: 55110.280 ops/ms
Iteration  13: 55895.544 ops/ms
Iteration  14: 55668.511 ops/ms
Iteration  15: 55985.589 ops/ms
Iteration  16: 55241.931 ops/ms
Iteration  17: 55664.839 ops/ms
Iteration  18: 55905.989 ops/ms
Iteration  19: 55963.830 ops/ms
Iteration  20: 55070.456 ops/ms

Result : 55950.537 ?(95%) 212.880 ?(99%) 290.994 ops/ms
  Statistics: (min, avg, max) = (55070.456, 55950.537, 56521.983), stdev = 454.864
  Confidence intervals: 95% [55737.657, 56163.417], 99% [55659.543, 56241.531]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36258.056 ops/ms
# Warmup Iteration   2: 54519.878 ops/ms
# Warmup Iteration   3: 54766.469 ops/ms
# Warmup Iteration   4: 53661.676 ops/ms
# Warmup Iteration   5: 54767.905 ops/ms
# Warmup Iteration   6: 54590.822 ops/ms
# Warmup Iteration   7: 54110.267 ops/ms
# Warmup Iteration   8: 54888.576 ops/ms
# Warmup Iteration   9: 56164.089 ops/ms
# Warmup Iteration  10: 56089.156 ops/ms
# Warmup Iteration  11: 55870.776 ops/ms
# Warmup Iteration  12: 55314.265 ops/ms
# Warmup Iteration  13: 55874.737 ops/ms
# Warmup Iteration  14: 55882.866 ops/ms
# Warmup Iteration  15: 56316.024 ops/ms
# Warmup Iteration  16: 55242.087 ops/ms
# Warmup Iteration  17: 56019.966 ops/ms
# Warmup Iteration  18: 54829.540 ops/ms
# Warmup Iteration  19: 55636.568 ops/ms
# Warmup Iteration  20: 56055.055 ops/ms
Iteration   1: 56112.346 ops/ms
Iteration   2: 55670.305 ops/ms
Iteration   3: 56296.100 ops/ms
Iteration   4: 54970.800 ops/ms
Iteration   5: 55755.387 ops/ms
Iteration   6: 55873.846 ops/ms
Iteration   7: 54972.793 ops/ms
Iteration   8: 56180.349 ops/ms
Iteration   9: 56294.120 ops/ms
Iteration  10: 56176.851 ops/ms
Iteration  11: 55656.487 ops/ms
Iteration  12: 55692.750 ops/ms
Iteration  13: 55491.386 ops/ms
Iteration  14: 55601.902 ops/ms
Iteration  15: 54897.069 ops/ms
Iteration  16: 55547.737 ops/ms
Iteration  17: 55586.134 ops/ms
Iteration  18: 55619.966 ops/ms
Iteration  19: 54854.216 ops/ms
Iteration  20: 55924.305 ops/ms

Result : 55658.742 ?(95%) 212.176 ?(99%) 290.032 ops/ms
  Statistics: (min, avg, max) = (54854.216, 55658.742, 56296.100), stdev = 453.360
  Confidence intervals: 95% [55446.566, 55870.919], 99% [55368.711, 55948.774]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36435.841 ops/ms
# Warmup Iteration   2: 55464.229 ops/ms
# Warmup Iteration   3: 53285.472 ops/ms
# Warmup Iteration   4: 53821.555 ops/ms
# Warmup Iteration   5: 54473.692 ops/ms
# Warmup Iteration   6: 52771.238 ops/ms
# Warmup Iteration   7: 51935.080 ops/ms
# Warmup Iteration   8: 51471.840 ops/ms
# Warmup Iteration   9: 53541.473 ops/ms
# Warmup Iteration  10: 53927.156 ops/ms
# Warmup Iteration  11: 53479.012 ops/ms
# Warmup Iteration  12: 54228.376 ops/ms
# Warmup Iteration  13: 53997.452 ops/ms
# Warmup Iteration  14: 54002.427 ops/ms
# Warmup Iteration  15: 52998.409 ops/ms
# Warmup Iteration  16: 53959.004 ops/ms
# Warmup Iteration  17: 54350.175 ops/ms
# Warmup Iteration  18: 53872.938 ops/ms
# Warmup Iteration  19: 53038.003 ops/ms
# Warmup Iteration  20: 54600.858 ops/ms
Iteration   1: 54348.009 ops/ms
Iteration   2: 54040.956 ops/ms
Iteration   3: 53155.926 ops/ms
Iteration   4: 53764.250 ops/ms
Iteration   5: 54331.516 ops/ms
Iteration   6: 54541.368 ops/ms
Iteration   7: 53489.275 ops/ms
Iteration   8: 54064.427 ops/ms
Iteration   9: 54584.127 ops/ms
Iteration  10: 53591.600 ops/ms
Iteration  11: 53066.746 ops/ms
Iteration  12: 54297.204 ops/ms
Iteration  13: 53567.235 ops/ms
Iteration  14: 54377.067 ops/ms
Iteration  15: 53345.325 ops/ms
Iteration  16: 53942.573 ops/ms
Iteration  17: 54473.879 ops/ms
Iteration  18: 54231.656 ops/ms
Iteration  19: 53285.167 ops/ms
Iteration  20: 54575.596 ops/ms

Result : 53953.695 ?(95%) 236.822 ?(99%) 323.721 ops/ms
  Statistics: (min, avg, max) = (53066.746, 53953.695, 54584.127), stdev = 506.021
  Confidence intervals: 95% [53716.873, 54190.518], 99% [53629.974, 54277.417]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 408.291 ops/ms
# Warmup Iteration   2: 630.885 ops/ms
# Warmup Iteration   3: 708.221 ops/ms
# Warmup Iteration   4: 707.587 ops/ms
# Warmup Iteration   5: 712.622 ops/ms
# Warmup Iteration   6: 708.694 ops/ms
# Warmup Iteration   7: 709.352 ops/ms
# Warmup Iteration   8: 709.233 ops/ms
# Warmup Iteration   9: 713.666 ops/ms
# Warmup Iteration  10: 711.523 ops/ms
# Warmup Iteration  11: 713.504 ops/ms
# Warmup Iteration  12: 713.562 ops/ms
# Warmup Iteration  13: 709.733 ops/ms
# Warmup Iteration  14: 711.989 ops/ms
# Warmup Iteration  15: 710.319 ops/ms
# Warmup Iteration  16: 707.922 ops/ms
# Warmup Iteration  17: 712.338 ops/ms
# Warmup Iteration  18: 708.153 ops/ms
# Warmup Iteration  19: 710.985 ops/ms
# Warmup Iteration  20: 706.530 ops/ms
Iteration   1: 705.699 ops/ms
Iteration   2: 711.904 ops/ms
Iteration   3: 711.200 ops/ms
Iteration   4: 709.030 ops/ms
Iteration   5: 704.652 ops/ms
Iteration   6: 709.246 ops/ms
Iteration   7: 710.108 ops/ms
Iteration   8: 708.614 ops/ms
Iteration   9: 708.618 ops/ms
Iteration  10: 711.439 ops/ms
Iteration  11: 709.571 ops/ms
Iteration  12: 708.563 ops/ms
Iteration  13: 705.536 ops/ms
Iteration  14: 712.309 ops/ms
Iteration  15: 712.035 ops/ms
Iteration  16: 705.429 ops/ms
Iteration  17: 707.588 ops/ms
Iteration  18: 709.442 ops/ms
Iteration  19: 707.090 ops/ms
Iteration  20: 707.847 ops/ms

Result : 708.796 ?(95%) 1.086 ?(99%) 1.485 ops/ms
  Statistics: (min, avg, max) = (704.652, 708.796, 712.309), stdev = 2.321
  Confidence intervals: 95% [707.710, 709.882], 99% [707.311, 710.281]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 398.462 ops/ms
# Warmup Iteration   2: 535.733 ops/ms
# Warmup Iteration   3: 590.613 ops/ms
# Warmup Iteration   4: 598.455 ops/ms
# Warmup Iteration   5: 597.491 ops/ms
# Warmup Iteration   6: 599.768 ops/ms
# Warmup Iteration   7: 597.099 ops/ms
# Warmup Iteration   8: 596.413 ops/ms
# Warmup Iteration   9: 600.885 ops/ms
# Warmup Iteration  10: 600.390 ops/ms
# Warmup Iteration  11: 599.682 ops/ms
# Warmup Iteration  12: 599.718 ops/ms
# Warmup Iteration  13: 600.111 ops/ms
# Warmup Iteration  14: 601.041 ops/ms
# Warmup Iteration  15: 601.040 ops/ms
# Warmup Iteration  16: 593.473 ops/ms
# Warmup Iteration  17: 600.614 ops/ms
# Warmup Iteration  18: 601.451 ops/ms
# Warmup Iteration  19: 598.745 ops/ms
# Warmup Iteration  20: 598.484 ops/ms
Iteration   1: 602.472 ops/ms
Iteration   2: 602.400 ops/ms
Iteration   3: 600.203 ops/ms
Iteration   4: 599.598 ops/ms
Iteration   5: 598.676 ops/ms
Iteration   6: 599.048 ops/ms
Iteration   7: 603.434 ops/ms
Iteration   8: 598.969 ops/ms
Iteration   9: 602.369 ops/ms
Iteration  10: 602.967 ops/ms
Iteration  11: 600.592 ops/ms
Iteration  12: 597.436 ops/ms
Iteration  13: 599.325 ops/ms
Iteration  14: 599.216 ops/ms
Iteration  15: 599.436 ops/ms
Iteration  16: 599.081 ops/ms
Iteration  17: 596.662 ops/ms
Iteration  18: 602.262 ops/ms
Iteration  19: 601.825 ops/ms
Iteration  20: 599.364 ops/ms

Result : 600.267 ?(95%) 0.897 ?(99%) 1.226 ops/ms
  Statistics: (min, avg, max) = (596.662, 600.267, 603.434), stdev = 1.916
  Confidence intervals: 95% [599.370, 601.163], 99% [599.041, 601.492]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 402.510 ops/ms
# Warmup Iteration   2: 643.459 ops/ms
# Warmup Iteration   3: 713.467 ops/ms
# Warmup Iteration   4: 722.611 ops/ms
# Warmup Iteration   5: 718.211 ops/ms
# Warmup Iteration   6: 719.935 ops/ms
# Warmup Iteration   7: 718.612 ops/ms
# Warmup Iteration   8: 718.743 ops/ms
# Warmup Iteration   9: 719.647 ops/ms
# Warmup Iteration  10: 722.448 ops/ms
# Warmup Iteration  11: 715.274 ops/ms
# Warmup Iteration  12: 721.437 ops/ms
# Warmup Iteration  13: 722.091 ops/ms
# Warmup Iteration  14: 722.319 ops/ms
# Warmup Iteration  15: 715.884 ops/ms
# Warmup Iteration  16: 723.119 ops/ms
# Warmup Iteration  17: 718.618 ops/ms
# Warmup Iteration  18: 722.410 ops/ms
# Warmup Iteration  19: 716.683 ops/ms
# Warmup Iteration  20: 720.675 ops/ms
Iteration   1: 718.367 ops/ms
Iteration   2: 717.993 ops/ms
Iteration   3: 718.465 ops/ms
Iteration   4: 717.846 ops/ms
Iteration   5: 717.188 ops/ms
Iteration   6: 718.289 ops/ms
Iteration   7: 717.316 ops/ms
Iteration   8: 712.630 ops/ms
Iteration   9: 716.525 ops/ms
Iteration  10: 716.135 ops/ms
Iteration  11: 717.041 ops/ms
Iteration  12: 720.505 ops/ms
Iteration  13: 721.709 ops/ms
Iteration  14: 719.261 ops/ms
Iteration  15: 721.338 ops/ms
Iteration  16: 718.683 ops/ms
Iteration  17: 717.686 ops/ms
Iteration  18: 718.478 ops/ms
Iteration  19: 721.665 ops/ms
Iteration  20: 720.906 ops/ms

Result : 718.401 ?(95%) 1.014 ?(99%) 1.386 ops/ms
  Statistics: (min, avg, max) = (712.630, 718.401, 721.709), stdev = 2.167
  Confidence intervals: 95% [717.387, 719.415], 99% [717.015, 719.788]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 446.550 ops/ms
# Warmup Iteration   2: 657.801 ops/ms
# Warmup Iteration   3: 691.403 ops/ms
# Warmup Iteration   4: 699.483 ops/ms
# Warmup Iteration   5: 691.611 ops/ms
# Warmup Iteration   6: 699.045 ops/ms
# Warmup Iteration   7: 700.210 ops/ms
# Warmup Iteration   8: 698.971 ops/ms
# Warmup Iteration   9: 696.385 ops/ms
# Warmup Iteration  10: 696.485 ops/ms
# Warmup Iteration  11: 697.147 ops/ms
# Warmup Iteration  12: 699.002 ops/ms
# Warmup Iteration  13: 693.954 ops/ms
# Warmup Iteration  14: 698.260 ops/ms
# Warmup Iteration  15: 695.274 ops/ms
# Warmup Iteration  16: 695.609 ops/ms
# Warmup Iteration  17: 694.641 ops/ms
# Warmup Iteration  18: 693.838 ops/ms
# Warmup Iteration  19: 695.846 ops/ms
# Warmup Iteration  20: 695.201 ops/ms
Iteration   1: 695.555 ops/ms
Iteration   2: 697.743 ops/ms
Iteration   3: 697.381 ops/ms
Iteration   4: 692.062 ops/ms
Iteration   5: 694.012 ops/ms
Iteration   6: 698.070 ops/ms
Iteration   7: 698.394 ops/ms
Iteration   8: 692.573 ops/ms
Iteration   9: 694.504 ops/ms
Iteration  10: 698.682 ops/ms
Iteration  11: 698.596 ops/ms
Iteration  12: 694.378 ops/ms
Iteration  13: 694.029 ops/ms
Iteration  14: 694.280 ops/ms
Iteration  15: 697.366 ops/ms
Iteration  16: 694.652 ops/ms
Iteration  17: 690.909 ops/ms
Iteration  18: 692.614 ops/ms
Iteration  19: 697.245 ops/ms
Iteration  20: 694.660 ops/ms

Result : 695.385 ?(95%) 1.120 ?(99%) 1.531 ops/ms
  Statistics: (min, avg, max) = (690.909, 695.385, 698.682), stdev = 2.394
  Confidence intervals: 95% [694.265, 696.505], 99% [693.854, 696.917]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 377.148 ops/ms
# Warmup Iteration   2: 500.627 ops/ms
# Warmup Iteration   3: 535.498 ops/ms
# Warmup Iteration   4: 548.484 ops/ms
# Warmup Iteration   5: 552.871 ops/ms
# Warmup Iteration   6: 552.917 ops/ms
# Warmup Iteration   7: 548.559 ops/ms
# Warmup Iteration   8: 552.543 ops/ms
# Warmup Iteration   9: 550.868 ops/ms
# Warmup Iteration  10: 550.992 ops/ms
# Warmup Iteration  11: 549.191 ops/ms
# Warmup Iteration  12: 551.026 ops/ms
# Warmup Iteration  13: 552.493 ops/ms
# Warmup Iteration  14: 554.192 ops/ms
# Warmup Iteration  15: 551.605 ops/ms
# Warmup Iteration  16: 551.364 ops/ms
# Warmup Iteration  17: 552.134 ops/ms
# Warmup Iteration  18: 550.134 ops/ms
# Warmup Iteration  19: 550.777 ops/ms
# Warmup Iteration  20: 551.563 ops/ms
Iteration   1: 549.954 ops/ms
Iteration   2: 549.761 ops/ms
Iteration   3: 549.135 ops/ms
Iteration   4: 548.711 ops/ms
Iteration   5: 550.977 ops/ms
Iteration   6: 549.734 ops/ms
Iteration   7: 551.959 ops/ms
Iteration   8: 549.105 ops/ms
Iteration   9: 552.465 ops/ms
Iteration  10: 549.134 ops/ms
Iteration  11: 550.001 ops/ms
Iteration  12: 550.367 ops/ms
Iteration  13: 551.763 ops/ms
Iteration  14: 551.898 ops/ms
Iteration  15: 553.102 ops/ms
Iteration  16: 550.003 ops/ms
Iteration  17: 551.882 ops/ms
Iteration  18: 549.802 ops/ms
Iteration  19: 549.392 ops/ms
Iteration  20: 550.433 ops/ms

Result : 550.479 ?(95%) 0.598 ?(99%) 0.817 ops/ms
  Statistics: (min, avg, max) = (548.711, 550.479, 553.102), stdev = 1.277
  Confidence intervals: 95% [549.881, 551.077], 99% [549.662, 551.296]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3109.954 ops/ms
# Warmup Iteration   2: 3627.544 ops/ms
# Warmup Iteration   3: 3675.334 ops/ms
# Warmup Iteration   4: 3807.352 ops/ms
# Warmup Iteration   5: 3823.596 ops/ms
# Warmup Iteration   6: 3817.722 ops/ms
# Warmup Iteration   7: 3814.913 ops/ms
# Warmup Iteration   8: 3846.864 ops/ms
# Warmup Iteration   9: 3858.674 ops/ms
# Warmup Iteration  10: 3828.631 ops/ms
# Warmup Iteration  11: 3844.536 ops/ms
# Warmup Iteration  12: 3838.306 ops/ms
# Warmup Iteration  13: 3846.592 ops/ms
# Warmup Iteration  14: 3850.268 ops/ms
# Warmup Iteration  15: 3837.790 ops/ms
# Warmup Iteration  16: 3822.256 ops/ms
# Warmup Iteration  17: 3840.252 ops/ms
# Warmup Iteration  18: 3864.570 ops/ms
# Warmup Iteration  19: 3870.230 ops/ms
# Warmup Iteration  20: 3740.170 ops/ms
Iteration   1: 3716.371 ops/ms
Iteration   2: 3727.041 ops/ms
Iteration   3: 3740.636 ops/ms
Iteration   4: 3728.335 ops/ms
Iteration   5: 3740.478 ops/ms
Iteration   6: 3721.402 ops/ms
Iteration   7: 3739.058 ops/ms
Iteration   8: 3717.400 ops/ms
Iteration   9: 3726.472 ops/ms
Iteration  10: 3739.580 ops/ms
Iteration  11: 3703.238 ops/ms
Iteration  12: 3855.145 ops/ms
Iteration  13: 3847.539 ops/ms
Iteration  14: 3851.099 ops/ms
Iteration  15: 3813.573 ops/ms
Iteration  16: 3841.727 ops/ms
Iteration  17: 3847.486 ops/ms
Iteration  18: 3843.508 ops/ms
Iteration  19: 3846.746 ops/ms
Iteration  20: 3846.238 ops/ms

Result : 3779.654 ?(95%) 28.343 ?(99%) 38.743 ops/ms
  Statistics: (min, avg, max) = (3703.238, 3779.654, 3855.145), stdev = 60.560
  Confidence intervals: 95% [3751.311, 3807.996], 99% [3740.911, 3818.396]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3090.283 ops/ms
# Warmup Iteration   2: 3696.565 ops/ms
# Warmup Iteration   3: 3812.848 ops/ms
# Warmup Iteration   4: 3803.597 ops/ms
# Warmup Iteration   5: 3805.925 ops/ms
# Warmup Iteration   6: 3807.487 ops/ms
# Warmup Iteration   7: 3821.242 ops/ms
# Warmup Iteration   8: 3853.772 ops/ms
# Warmup Iteration   9: 3865.749 ops/ms
# Warmup Iteration  10: 3852.091 ops/ms
# Warmup Iteration  11: 3840.147 ops/ms
# Warmup Iteration  12: 3829.770 ops/ms
# Warmup Iteration  13: 3861.269 ops/ms
# Warmup Iteration  14: 3863.095 ops/ms
# Warmup Iteration  15: 3856.843 ops/ms
# Warmup Iteration  16: 3854.838 ops/ms
# Warmup Iteration  17: 3864.641 ops/ms
# Warmup Iteration  18: 3851.266 ops/ms
# Warmup Iteration  19: 3833.615 ops/ms
# Warmup Iteration  20: 3727.482 ops/ms
Iteration   1: 3740.407 ops/ms
Iteration   2: 3738.018 ops/ms
Iteration   3: 3738.813 ops/ms
Iteration   4: 3738.854 ops/ms
Iteration   5: 3749.792 ops/ms
Iteration   6: 3734.640 ops/ms
Iteration   7: 3750.563 ops/ms
Iteration   8: 3743.698 ops/ms
Iteration   9: 3736.773 ops/ms
Iteration  10: 3722.300 ops/ms
Iteration  11: 3738.093 ops/ms
Iteration  12: 3844.903 ops/ms
Iteration  13: 3836.399 ops/ms
Iteration  14: 3841.961 ops/ms
Iteration  15: 3845.424 ops/ms
Iteration  16: 3856.092 ops/ms
Iteration  17: 3850.663 ops/ms
Iteration  18: 3853.430 ops/ms
Iteration  19: 3856.083 ops/ms
Iteration  20: 3827.697 ops/ms

Result : 3787.230 ?(95%) 25.754 ?(99%) 35.204 ops/ms
  Statistics: (min, avg, max) = (3722.300, 3787.230, 3856.092), stdev = 55.028
  Confidence intervals: 95% [3761.477, 3812.984], 99% [3752.027, 3822.434]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3091.933 ops/ms
# Warmup Iteration   2: 3711.062 ops/ms
# Warmup Iteration   3: 3837.137 ops/ms
# Warmup Iteration   4: 3730.524 ops/ms
# Warmup Iteration   5: 3743.733 ops/ms
# Warmup Iteration   6: 3712.076 ops/ms
# Warmup Iteration   7: 3741.766 ops/ms
# Warmup Iteration   8: 3814.554 ops/ms
# Warmup Iteration   9: 3822.755 ops/ms
# Warmup Iteration  10: 3826.620 ops/ms
# Warmup Iteration  11: 3804.106 ops/ms
# Warmup Iteration  12: 3821.825 ops/ms
# Warmup Iteration  13: 3831.906 ops/ms
# Warmup Iteration  14: 3834.166 ops/ms
# Warmup Iteration  15: 3840.414 ops/ms
# Warmup Iteration  16: 3814.162 ops/ms
# Warmup Iteration  17: 3838.887 ops/ms
# Warmup Iteration  18: 3837.788 ops/ms
# Warmup Iteration  19: 3838.303 ops/ms
# Warmup Iteration  20: 3851.971 ops/ms
Iteration   1: 3879.457 ops/ms
Iteration   2: 3842.955 ops/ms
Iteration   3: 3805.652 ops/ms
Iteration   4: 3859.540 ops/ms
Iteration   5: 3863.217 ops/ms
Iteration   6: 3854.208 ops/ms
Iteration   7: 3844.999 ops/ms
Iteration   8: 3860.596 ops/ms
Iteration   9: 3858.287 ops/ms
Iteration  10: 3874.369 ops/ms
Iteration  11: 3870.605 ops/ms
Iteration  12: 3841.851 ops/ms
Iteration  13: 3838.442 ops/ms
Iteration  14: 3852.248 ops/ms
Iteration  15: 3824.403 ops/ms
Iteration  16: 3853.509 ops/ms
Iteration  17: 3855.596 ops/ms
Iteration  18: 3797.266 ops/ms
Iteration  19: 3673.993 ops/ms
Iteration  20: 3653.295 ops/ms

Result : 3830.224 ?(95%) 28.392 ?(99%) 38.810 ops/ms
  Statistics: (min, avg, max) = (3653.295, 3830.224, 3879.457), stdev = 60.666
  Confidence intervals: 95% [3801.832, 3858.617], 99% [3791.414, 3869.035]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3102.130 ops/ms
# Warmup Iteration   2: 3717.253 ops/ms
# Warmup Iteration   3: 3797.138 ops/ms
# Warmup Iteration   4: 3831.031 ops/ms
# Warmup Iteration   5: 3806.628 ops/ms
# Warmup Iteration   6: 3761.501 ops/ms
# Warmup Iteration   7: 3810.330 ops/ms
# Warmup Iteration   8: 3815.885 ops/ms
# Warmup Iteration   9: 3829.610 ops/ms
# Warmup Iteration  10: 3838.951 ops/ms
# Warmup Iteration  11: 3832.255 ops/ms
# Warmup Iteration  12: 3842.134 ops/ms
# Warmup Iteration  13: 3831.322 ops/ms
# Warmup Iteration  14: 3837.089 ops/ms
# Warmup Iteration  15: 3811.248 ops/ms
# Warmup Iteration  16: 3817.324 ops/ms
# Warmup Iteration  17: 3748.455 ops/ms
# Warmup Iteration  18: 3818.226 ops/ms
# Warmup Iteration  19: 3835.109 ops/ms
# Warmup Iteration  20: 3779.280 ops/ms
Iteration   1: 3732.183 ops/ms
Iteration   2: 3783.585 ops/ms
Iteration   3: 3797.103 ops/ms
Iteration   4: 3805.480 ops/ms
Iteration   5: 3797.354 ops/ms
Iteration   6: 3788.226 ops/ms
Iteration   7: 3772.280 ops/ms
Iteration   8: 3769.042 ops/ms
Iteration   9: 3766.755 ops/ms
Iteration  10: 3781.687 ops/ms
Iteration  11: 3785.255 ops/ms
Iteration  12: 3743.836 ops/ms
Iteration  13: 3738.651 ops/ms
Iteration  14: 3723.208 ops/ms
Iteration  15: 3743.462 ops/ms
Iteration  16: 3719.430 ops/ms
Iteration  17: 3751.177 ops/ms
Iteration  18: 3725.988 ops/ms
Iteration  19: 3757.086 ops/ms
Iteration  20: 3731.893 ops/ms

Result : 3760.684 ?(95%) 12.870 ?(99%) 17.592 ops/ms
  Statistics: (min, avg, max) = (3719.430, 3760.684, 3805.480), stdev = 27.499
  Confidence intervals: 95% [3747.814, 3773.554], 99% [3743.092, 3778.276]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3089.079 ops/ms
# Warmup Iteration   2: 3673.598 ops/ms
# Warmup Iteration   3: 3774.103 ops/ms
# Warmup Iteration   4: 3801.178 ops/ms
# Warmup Iteration   5: 3819.652 ops/ms
# Warmup Iteration   6: 3810.745 ops/ms
# Warmup Iteration   7: 3815.166 ops/ms
# Warmup Iteration   8: 3804.590 ops/ms
# Warmup Iteration   9: 3819.211 ops/ms
# Warmup Iteration  10: 3807.705 ops/ms
# Warmup Iteration  11: 3805.533 ops/ms
# Warmup Iteration  12: 3821.381 ops/ms
# Warmup Iteration  13: 3829.728 ops/ms
# Warmup Iteration  14: 3828.276 ops/ms
# Warmup Iteration  15: 3810.070 ops/ms
# Warmup Iteration  16: 3826.086 ops/ms
# Warmup Iteration  17: 3849.640 ops/ms
# Warmup Iteration  18: 3841.667 ops/ms
# Warmup Iteration  19: 3827.540 ops/ms
# Warmup Iteration  20: 3816.319 ops/ms
Iteration   1: 3817.489 ops/ms
Iteration   2: 3787.307 ops/ms
Iteration   3: 3803.230 ops/ms
Iteration   4: 3803.972 ops/ms
Iteration   5: 3803.589 ops/ms
Iteration   6: 3821.929 ops/ms
Iteration   7: 3808.134 ops/ms
Iteration   8: 3820.340 ops/ms
Iteration   9: 3796.919 ops/ms
Iteration  10: 3807.832 ops/ms
Iteration  11: 3801.911 ops/ms
Iteration  12: 3717.928 ops/ms
Iteration  13: 3718.166 ops/ms
Iteration  14: 3731.273 ops/ms
Iteration  15: 3739.166 ops/ms
Iteration  16: 3727.786 ops/ms
Iteration  17: 3728.437 ops/ms
Iteration  18: 3714.693 ops/ms
Iteration  19: 3719.482 ops/ms
Iteration  20: 3717.659 ops/ms

Result : 3769.362 ?(95%) 20.230 ?(99%) 27.653 ops/ms
  Statistics: (min, avg, max) = (3714.693, 3769.362, 3821.929), stdev = 43.226
  Confidence intervals: 95% [3749.132, 3789.592], 99% [3741.709, 3797.015]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 19.107 ops/ms
# Warmup Iteration   2: 35.539 ops/ms
# Warmup Iteration   3: 37.487 ops/ms
# Warmup Iteration   4: 37.936 ops/ms
# Warmup Iteration   5: 37.940 ops/ms
# Warmup Iteration   6: 37.861 ops/ms
# Warmup Iteration   7: 38.053 ops/ms
# Warmup Iteration   8: 38.071 ops/ms
# Warmup Iteration   9: 38.095 ops/ms
# Warmup Iteration  10: 38.066 ops/ms
# Warmup Iteration  11: 38.055 ops/ms
# Warmup Iteration  12: 37.929 ops/ms
# Warmup Iteration  13: 37.930 ops/ms
# Warmup Iteration  14: 37.999 ops/ms
# Warmup Iteration  15: 37.775 ops/ms
# Warmup Iteration  16: 38.052 ops/ms
# Warmup Iteration  17: 37.867 ops/ms
# Warmup Iteration  18: 38.079 ops/ms
# Warmup Iteration  19: 38.050 ops/ms
# Warmup Iteration  20: 38.029 ops/ms
Iteration   1: 38.062 ops/ms
Iteration   2: 38.048 ops/ms
Iteration   3: 38.105 ops/ms
Iteration   4: 37.931 ops/ms
Iteration   5: 38.057 ops/ms
Iteration   6: 37.918 ops/ms
Iteration   7: 37.805 ops/ms
Iteration   8: 38.181 ops/ms
Iteration   9: 38.126 ops/ms
Iteration  10: 38.097 ops/ms
Iteration  11: 38.181 ops/ms
Iteration  12: 37.339 ops/ms
Iteration  13: 36.327 ops/ms
Iteration  14: 35.587 ops/ms
Iteration  15: 37.929 ops/ms
Iteration  16: 37.882 ops/ms
Iteration  17: 38.003 ops/ms
Iteration  18: 37.993 ops/ms
Iteration  19: 37.611 ops/ms
Iteration  20: 36.981 ops/ms

Result : 37.708 ?(95%) 0.317 ?(99%) 0.433 ops/ms
  Statistics: (min, avg, max) = (35.587, 37.708, 38.181), stdev = 0.678
  Confidence intervals: 95% [37.391, 38.025], 99% [37.275, 38.142]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 16.990 ops/ms
# Warmup Iteration   2: 30.607 ops/ms
# Warmup Iteration   3: 32.230 ops/ms
# Warmup Iteration   4: 32.582 ops/ms
# Warmup Iteration   5: 32.760 ops/ms
# Warmup Iteration   6: 32.719 ops/ms
# Warmup Iteration   7: 32.829 ops/ms
# Warmup Iteration   8: 32.883 ops/ms
# Warmup Iteration   9: 32.944 ops/ms
# Warmup Iteration  10: 32.706 ops/ms
# Warmup Iteration  11: 32.685 ops/ms
# Warmup Iteration  12: 33.014 ops/ms
# Warmup Iteration  13: 32.629 ops/ms
# Warmup Iteration  14: 32.878 ops/ms
# Warmup Iteration  15: 32.761 ops/ms
# Warmup Iteration  16: 32.797 ops/ms
# Warmup Iteration  17: 32.760 ops/ms
# Warmup Iteration  18: 32.562 ops/ms
# Warmup Iteration  19: 32.976 ops/ms
# Warmup Iteration  20: 33.018 ops/ms
Iteration   1: 32.968 ops/ms
Iteration   2: 32.784 ops/ms
Iteration   3: 32.862 ops/ms
Iteration   4: 32.826 ops/ms
Iteration   5: 32.761 ops/ms
Iteration   6: 32.815 ops/ms
Iteration   7: 32.980 ops/ms
Iteration   8: 32.929 ops/ms
Iteration   9: 32.931 ops/ms
Iteration  10: 32.943 ops/ms
Iteration  11: 32.858 ops/ms
Iteration  12: 32.854 ops/ms
Iteration  13: 32.978 ops/ms
Iteration  14: 32.956 ops/ms
Iteration  15: 32.847 ops/ms
Iteration  16: 32.737 ops/ms
Iteration  17: 32.944 ops/ms
Iteration  18: 32.916 ops/ms
Iteration  19: 32.833 ops/ms
Iteration  20: 32.762 ops/ms

Result : 32.874 ?(95%) 0.037 ?(99%) 0.050 ops/ms
  Statistics: (min, avg, max) = (32.737, 32.874, 32.980), stdev = 0.078
  Confidence intervals: 95% [32.838, 32.911], 99% [32.824, 32.924]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 19.829 ops/ms
# Warmup Iteration   2: 37.447 ops/ms
# Warmup Iteration   3: 40.319 ops/ms
# Warmup Iteration   4: 41.075 ops/ms
# Warmup Iteration   5: 41.199 ops/ms
# Warmup Iteration   6: 41.156 ops/ms
# Warmup Iteration   7: 41.154 ops/ms
# Warmup Iteration   8: 40.986 ops/ms
# Warmup Iteration   9: 40.654 ops/ms
# Warmup Iteration  10: 41.175 ops/ms
# Warmup Iteration  11: 40.831 ops/ms
# Warmup Iteration  12: 40.921 ops/ms
# Warmup Iteration  13: 40.998 ops/ms
# Warmup Iteration  14: 41.063 ops/ms
# Warmup Iteration  15: 40.724 ops/ms
# Warmup Iteration  16: 40.615 ops/ms
# Warmup Iteration  17: 41.202 ops/ms
# Warmup Iteration  18: 41.284 ops/ms
# Warmup Iteration  19: 41.192 ops/ms
# Warmup Iteration  20: 41.172 ops/ms
Iteration   1: 41.119 ops/ms
Iteration   2: 41.153 ops/ms
Iteration   3: 40.750 ops/ms
Iteration   4: 41.240 ops/ms
Iteration   5: 41.081 ops/ms
Iteration   6: 40.917 ops/ms
Iteration   7: 40.968 ops/ms
Iteration   8: 41.142 ops/ms
Iteration   9: 41.019 ops/ms
Iteration  10: 41.137 ops/ms
Iteration  11: 41.202 ops/ms
Iteration  12: 41.214 ops/ms
Iteration  13: 40.957 ops/ms
Iteration  14: 41.147 ops/ms
Iteration  15: 41.232 ops/ms
Iteration  16: 40.959 ops/ms
Iteration  17: 41.010 ops/ms
Iteration  18: 40.988 ops/ms
Iteration  19: 41.057 ops/ms
Iteration  20: 41.058 ops/ms

Result : 41.067 ?(95%) 0.058 ?(99%) 0.079 ops/ms
  Statistics: (min, avg, max) = (40.750, 41.067, 41.240), stdev = 0.124
  Confidence intervals: 95% [41.009, 41.126], 99% [40.988, 41.147]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 19.688 ops/ms
# Warmup Iteration   2: 36.120 ops/ms
# Warmup Iteration   3: 40.324 ops/ms
# Warmup Iteration   4: 41.423 ops/ms
# Warmup Iteration   5: 41.607 ops/ms
# Warmup Iteration   6: 41.667 ops/ms
# Warmup Iteration   7: 41.650 ops/ms
# Warmup Iteration   8: 41.357 ops/ms
# Warmup Iteration   9: 41.506 ops/ms
# Warmup Iteration  10: 41.473 ops/ms
# Warmup Iteration  11: 41.582 ops/ms
# Warmup Iteration  12: 41.687 ops/ms
# Warmup Iteration  13: 41.288 ops/ms
# Warmup Iteration  14: 41.311 ops/ms
# Warmup Iteration  15: 41.541 ops/ms
# Warmup Iteration  16: 41.635 ops/ms
# Warmup Iteration  17: 41.353 ops/ms
# Warmup Iteration  18: 41.448 ops/ms
# Warmup Iteration  19: 41.400 ops/ms
# Warmup Iteration  20: 41.164 ops/ms
Iteration   1: 41.534 ops/ms
Iteration   2: 41.427 ops/ms
Iteration   3: 41.476 ops/ms
Iteration   4: 41.622 ops/ms
Iteration   5: 41.643 ops/ms
Iteration   6: 41.588 ops/ms
Iteration   7: 41.313 ops/ms
Iteration   8: 41.624 ops/ms
Iteration   9: 41.616 ops/ms
Iteration  10: 41.500 ops/ms
Iteration  11: 41.439 ops/ms
Iteration  12: 41.584 ops/ms
Iteration  13: 41.549 ops/ms
Iteration  14: 41.642 ops/ms
Iteration  15: 41.661 ops/ms
Iteration  16: 41.512 ops/ms
Iteration  17: 41.437 ops/ms
Iteration  18: 41.715 ops/ms
Iteration  19: 41.633 ops/ms
Iteration  20: 41.600 ops/ms

Result : 41.556 ?(95%) 0.047 ?(99%) 0.064 ops/ms
  Statistics: (min, avg, max) = (41.313, 41.556, 41.715), stdev = 0.100
  Confidence intervals: 95% [41.509, 41.603], 99% [41.492, 41.620]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 16.621 ops/ms
# Warmup Iteration   2: 30.216 ops/ms
# Warmup Iteration   3: 32.750 ops/ms
# Warmup Iteration   4: 33.053 ops/ms
# Warmup Iteration   5: 33.250 ops/ms
# Warmup Iteration   6: 33.302 ops/ms
# Warmup Iteration   7: 33.276 ops/ms
# Warmup Iteration   8: 33.218 ops/ms
# Warmup Iteration   9: 33.355 ops/ms
# Warmup Iteration  10: 33.388 ops/ms
# Warmup Iteration  11: 33.216 ops/ms
# Warmup Iteration  12: 33.327 ops/ms
# Warmup Iteration  13: 33.257 ops/ms
# Warmup Iteration  14: 33.270 ops/ms
# Warmup Iteration  15: 33.394 ops/ms
# Warmup Iteration  16: 33.317 ops/ms
# Warmup Iteration  17: 33.250 ops/ms
# Warmup Iteration  18: 33.131 ops/ms
# Warmup Iteration  19: 33.229 ops/ms
# Warmup Iteration  20: 33.328 ops/ms
Iteration   1: 33.342 ops/ms
Iteration   2: 33.234 ops/ms
Iteration   3: 33.425 ops/ms
Iteration   4: 33.422 ops/ms
Iteration   5: 33.154 ops/ms
Iteration   6: 33.308 ops/ms
Iteration   7: 33.286 ops/ms
Iteration   8: 33.304 ops/ms
Iteration   9: 33.273 ops/ms
Iteration  10: 33.424 ops/ms
Iteration  11: 33.273 ops/ms
Iteration  12: 33.134 ops/ms
Iteration  13: 33.333 ops/ms
Iteration  14: 33.367 ops/ms
Iteration  15: 33.191 ops/ms
Iteration  16: 33.300 ops/ms
Iteration  17: 33.278 ops/ms
Iteration  18: 33.306 ops/ms
Iteration  19: 32.998 ops/ms
Iteration  20: 33.409 ops/ms

Result : 33.288 ?(95%) 0.050 ?(99%) 0.069 ops/ms
  Statistics: (min, avg, max) = (32.998, 33.288, 33.425), stdev = 0.108
  Confidence intervals: 95% [33.237, 33.338], 99% [33.219, 33.357]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 614.795 ops/ms
# Warmup Iteration   2: 734.586 ops/ms
# Warmup Iteration   3: 736.356 ops/ms
# Warmup Iteration   4: 733.031 ops/ms
# Warmup Iteration   5: 737.239 ops/ms
# Warmup Iteration   6: 732.801 ops/ms
# Warmup Iteration   7: 734.013 ops/ms
# Warmup Iteration   8: 737.382 ops/ms
# Warmup Iteration   9: 738.042 ops/ms
# Warmup Iteration  10: 736.701 ops/ms
# Warmup Iteration  11: 737.878 ops/ms
# Warmup Iteration  12: 735.217 ops/ms
# Warmup Iteration  13: 735.364 ops/ms
# Warmup Iteration  14: 736.025 ops/ms
# Warmup Iteration  15: 734.910 ops/ms
# Warmup Iteration  16: 731.505 ops/ms
# Warmup Iteration  17: 746.806 ops/ms
# Warmup Iteration  18: 745.696 ops/ms
# Warmup Iteration  19: 747.706 ops/ms
# Warmup Iteration  20: 744.653 ops/ms
Iteration   1: 743.044 ops/ms
Iteration   2: 742.436 ops/ms
Iteration   3: 745.105 ops/ms
Iteration   4: 745.570 ops/ms
Iteration   5: 746.957 ops/ms
Iteration   6: 745.316 ops/ms
Iteration   7: 745.445 ops/ms
Iteration   8: 746.707 ops/ms
Iteration   9: 745.544 ops/ms
Iteration  10: 743.644 ops/ms
Iteration  11: 742.067 ops/ms
Iteration  12: 742.663 ops/ms
Iteration  13: 741.383 ops/ms
Iteration  14: 743.502 ops/ms
Iteration  15: 745.113 ops/ms
Iteration  16: 742.949 ops/ms
Iteration  17: 740.003 ops/ms
Iteration  18: 741.041 ops/ms
Iteration  19: 742.225 ops/ms
Iteration  20: 740.861 ops/ms

Result : 743.579 ?(95%) 0.952 ?(99%) 1.301 ops/ms
  Statistics: (min, avg, max) = (740.003, 743.579, 746.957), stdev = 2.034
  Confidence intervals: 95% [742.627, 744.531], 99% [742.278, 744.880]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 607.764 ops/ms
# Warmup Iteration   2: 724.530 ops/ms
# Warmup Iteration   3: 723.735 ops/ms
# Warmup Iteration   4: 741.318 ops/ms
# Warmup Iteration   5: 741.433 ops/ms
# Warmup Iteration   6: 739.830 ops/ms
# Warmup Iteration   7: 739.535 ops/ms
# Warmup Iteration   8: 738.189 ops/ms
# Warmup Iteration   9: 743.441 ops/ms
# Warmup Iteration  10: 736.520 ops/ms
# Warmup Iteration  11: 741.824 ops/ms
# Warmup Iteration  12: 739.536 ops/ms
# Warmup Iteration  13: 739.377 ops/ms
# Warmup Iteration  14: 740.593 ops/ms
# Warmup Iteration  15: 736.931 ops/ms
# Warmup Iteration  16: 742.666 ops/ms
# Warmup Iteration  17: 740.574 ops/ms
# Warmup Iteration  18: 744.784 ops/ms
# Warmup Iteration  19: 740.087 ops/ms
# Warmup Iteration  20: 738.987 ops/ms
Iteration   1: 739.057 ops/ms
Iteration   2: 741.417 ops/ms
Iteration   3: 738.078 ops/ms
Iteration   4: 739.740 ops/ms
Iteration   5: 739.285 ops/ms
Iteration   6: 739.471 ops/ms
Iteration   7: 737.232 ops/ms
Iteration   8: 741.655 ops/ms
Iteration   9: 739.076 ops/ms
Iteration  10: 738.713 ops/ms
Iteration  11: 740.721 ops/ms
Iteration  12: 740.657 ops/ms
Iteration  13: 739.414 ops/ms
Iteration  14: 737.236 ops/ms
Iteration  15: 737.597 ops/ms
Iteration  16: 739.435 ops/ms
Iteration  17: 739.409 ops/ms
Iteration  18: 740.231 ops/ms
Iteration  19: 736.769 ops/ms
Iteration  20: 738.027 ops/ms

Result : 739.161 ?(95%) 0.645 ?(99%) 0.881 ops/ms
  Statistics: (min, avg, max) = (736.769, 739.161, 741.655), stdev = 1.377
  Confidence intervals: 95% [738.516, 739.806], 99% [738.280, 740.042]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 617.333 ops/ms
# Warmup Iteration   2: 737.727 ops/ms
# Warmup Iteration   3: 738.259 ops/ms
# Warmup Iteration   4: 746.026 ops/ms
# Warmup Iteration   5: 753.171 ops/ms
# Warmup Iteration   6: 754.426 ops/ms
# Warmup Iteration   7: 750.486 ops/ms
# Warmup Iteration   8: 755.610 ops/ms
# Warmup Iteration   9: 755.703 ops/ms
# Warmup Iteration  10: 753.758 ops/ms
# Warmup Iteration  11: 753.274 ops/ms
# Warmup Iteration  12: 751.643 ops/ms
# Warmup Iteration  13: 753.274 ops/ms
# Warmup Iteration  14: 754.970 ops/ms
# Warmup Iteration  15: 755.634 ops/ms
# Warmup Iteration  16: 753.413 ops/ms
# Warmup Iteration  17: 747.599 ops/ms
# Warmup Iteration  18: 749.849 ops/ms
# Warmup Iteration  19: 745.035 ops/ms
# Warmup Iteration  20: 750.365 ops/ms
Iteration   1: 750.898 ops/ms
Iteration   2: 750.955 ops/ms
Iteration   3: 749.951 ops/ms
Iteration   4: 748.129 ops/ms
Iteration   5: 752.041 ops/ms
Iteration   6: 748.709 ops/ms
Iteration   7: 748.297 ops/ms
Iteration   8: 750.967 ops/ms
Iteration   9: 750.734 ops/ms
Iteration  10: 749.130 ops/ms
Iteration  11: 753.640 ops/ms
Iteration  12: 741.965 ops/ms
Iteration  13: 746.765 ops/ms
Iteration  14: 745.590 ops/ms
Iteration  15: 744.822 ops/ms
Iteration  16: 742.500 ops/ms
Iteration  17: 746.380 ops/ms
Iteration  18: 746.928 ops/ms
Iteration  19: 742.607 ops/ms
Iteration  20: 745.329 ops/ms

Result : 747.817 ?(95%) 1.558 ?(99%) 2.130 ops/ms
  Statistics: (min, avg, max) = (741.965, 747.817, 753.640), stdev = 3.330
  Confidence intervals: 95% [746.259, 749.375], 99% [745.687, 749.947]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 616.285 ops/ms
# Warmup Iteration   2: 732.021 ops/ms
# Warmup Iteration   3: 740.028 ops/ms
# Warmup Iteration   4: 741.200 ops/ms
# Warmup Iteration   5: 748.453 ops/ms
# Warmup Iteration   6: 750.980 ops/ms
# Warmup Iteration   7: 751.615 ops/ms
# Warmup Iteration   8: 752.866 ops/ms
# Warmup Iteration   9: 755.264 ops/ms
# Warmup Iteration  10: 753.368 ops/ms
# Warmup Iteration  11: 754.247 ops/ms
# Warmup Iteration  12: 753.930 ops/ms
# Warmup Iteration  13: 751.780 ops/ms
# Warmup Iteration  14: 753.088 ops/ms
# Warmup Iteration  15: 753.095 ops/ms
# Warmup Iteration  16: 753.182 ops/ms
# Warmup Iteration  17: 743.989 ops/ms
# Warmup Iteration  18: 743.788 ops/ms
# Warmup Iteration  19: 745.843 ops/ms
# Warmup Iteration  20: 745.421 ops/ms
Iteration   1: 745.704 ops/ms
Iteration   2: 743.633 ops/ms
Iteration   3: 744.112 ops/ms
Iteration   4: 742.197 ops/ms
Iteration   5: 745.158 ops/ms
Iteration   6: 744.051 ops/ms
Iteration   7: 742.928 ops/ms
Iteration   8: 741.417 ops/ms
Iteration   9: 745.954 ops/ms
Iteration  10: 746.952 ops/ms
Iteration  11: 746.690 ops/ms
Iteration  12: 742.700 ops/ms
Iteration  13: 746.116 ops/ms
Iteration  14: 747.313 ops/ms
Iteration  15: 747.659 ops/ms
Iteration  16: 746.100 ops/ms
Iteration  17: 748.163 ops/ms
Iteration  18: 745.975 ops/ms
Iteration  19: 742.946 ops/ms
Iteration  20: 743.038 ops/ms

Result : 744.940 ?(95%) 0.935 ?(99%) 1.277 ops/ms
  Statistics: (min, avg, max) = (741.417, 744.940, 748.163), stdev = 1.997
  Confidence intervals: 95% [744.006, 745.875], 99% [743.663, 746.218]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 615.344 ops/ms
# Warmup Iteration   2: 728.136 ops/ms
# Warmup Iteration   3: 739.413 ops/ms
# Warmup Iteration   4: 734.363 ops/ms
# Warmup Iteration   5: 743.431 ops/ms
# Warmup Iteration   6: 742.296 ops/ms
# Warmup Iteration   7: 722.760 ops/ms
# Warmup Iteration   8: 719.444 ops/ms
# Warmup Iteration   9: 713.387 ops/ms
# Warmup Iteration  10: 728.520 ops/ms
# Warmup Iteration  11: 749.017 ops/ms
# Warmup Iteration  12: 743.314 ops/ms
# Warmup Iteration  13: 746.730 ops/ms
# Warmup Iteration  14: 748.714 ops/ms
# Warmup Iteration  15: 748.687 ops/ms
# Warmup Iteration  16: 724.193 ops/ms
# Warmup Iteration  17: 735.641 ops/ms
# Warmup Iteration  18: 738.289 ops/ms
# Warmup Iteration  19: 743.720 ops/ms
# Warmup Iteration  20: 745.051 ops/ms
Iteration   1: 745.680 ops/ms
Iteration   2: 746.384 ops/ms
Iteration   3: 742.853 ops/ms
Iteration   4: 743.693 ops/ms
Iteration   5: 737.683 ops/ms
Iteration   6: 748.803 ops/ms
Iteration   7: 748.839 ops/ms
Iteration   8: 748.534 ops/ms
Iteration   9: 745.198 ops/ms
Iteration  10: 744.904 ops/ms
Iteration  11: 748.939 ops/ms
Iteration  12: 739.526 ops/ms
Iteration  13: 737.823 ops/ms
Iteration  14: 743.079 ops/ms
Iteration  15: 744.602 ops/ms
Iteration  16: 734.954 ops/ms
Iteration  17: 735.154 ops/ms
Iteration  18: 747.228 ops/ms
Iteration  19: 743.617 ops/ms
Iteration  20: 745.098 ops/ms

Result : 743.630 ?(95%) 2.071 ?(99%) 2.831 ops/ms
  Statistics: (min, avg, max) = (734.954, 743.630, 748.939), stdev = 4.425
  Confidence intervals: 95% [741.559, 745.700], 99% [740.799, 746.460]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 259.198 ops/ms
# Warmup Iteration   2: 348.638 ops/ms
# Warmup Iteration   3: 363.680 ops/ms
# Warmup Iteration   4: 367.991 ops/ms
# Warmup Iteration   5: 367.547 ops/ms
# Warmup Iteration   6: 368.059 ops/ms
# Warmup Iteration   7: 364.686 ops/ms
# Warmup Iteration   8: 368.767 ops/ms
# Warmup Iteration   9: 369.858 ops/ms
# Warmup Iteration  10: 367.082 ops/ms
# Warmup Iteration  11: 370.066 ops/ms
# Warmup Iteration  12: 368.492 ops/ms
# Warmup Iteration  13: 368.321 ops/ms
# Warmup Iteration  14: 368.221 ops/ms
# Warmup Iteration  15: 368.414 ops/ms
# Warmup Iteration  16: 367.079 ops/ms
# Warmup Iteration  17: 369.280 ops/ms
# Warmup Iteration  18: 366.995 ops/ms
# Warmup Iteration  19: 366.662 ops/ms
# Warmup Iteration  20: 370.295 ops/ms
Iteration   1: 371.523 ops/ms
Iteration   2: 370.525 ops/ms
Iteration   3: 371.677 ops/ms
Iteration   4: 369.996 ops/ms
Iteration   5: 368.890 ops/ms
Iteration   6: 370.456 ops/ms
Iteration   7: 369.812 ops/ms
Iteration   8: 369.657 ops/ms
Iteration   9: 370.424 ops/ms
Iteration  10: 369.342 ops/ms
Iteration  11: 370.316 ops/ms
Iteration  12: 370.201 ops/ms
Iteration  13: 369.339 ops/ms
Iteration  14: 369.084 ops/ms
Iteration  15: 369.276 ops/ms
Iteration  16: 369.860 ops/ms
Iteration  17: 369.111 ops/ms
Iteration  18: 371.722 ops/ms
Iteration  19: 369.942 ops/ms
Iteration  20: 369.937 ops/ms

Result : 370.054 ?(95%) 0.391 ?(99%) 0.535 ops/ms
  Statistics: (min, avg, max) = (368.890, 370.054, 371.722), stdev = 0.836
  Confidence intervals: 95% [369.663, 370.446], 99% [369.520, 370.589]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 260.077 ops/ms
# Warmup Iteration   2: 343.790 ops/ms
# Warmup Iteration   3: 362.349 ops/ms
# Warmup Iteration   4: 365.782 ops/ms
# Warmup Iteration   5: 366.868 ops/ms
# Warmup Iteration   6: 366.330 ops/ms
# Warmup Iteration   7: 366.910 ops/ms
# Warmup Iteration   8: 364.921 ops/ms
# Warmup Iteration   9: 366.196 ops/ms
# Warmup Iteration  10: 366.740 ops/ms
# Warmup Iteration  11: 367.631 ops/ms
# Warmup Iteration  12: 366.786 ops/ms
# Warmup Iteration  13: 365.757 ops/ms
# Warmup Iteration  14: 367.753 ops/ms
# Warmup Iteration  15: 367.585 ops/ms
# Warmup Iteration  16: 366.208 ops/ms
# Warmup Iteration  17: 363.411 ops/ms
# Warmup Iteration  18: 365.049 ops/ms
# Warmup Iteration  19: 364.068 ops/ms
# Warmup Iteration  20: 362.513 ops/ms
Iteration   1: 360.619 ops/ms
Iteration   2: 361.398 ops/ms
Iteration   3: 362.726 ops/ms
Iteration   4: 362.888 ops/ms
Iteration   5: 362.275 ops/ms
Iteration   6: 361.472 ops/ms
Iteration   7: 361.198 ops/ms
Iteration   8: 360.683 ops/ms
Iteration   9: 362.808 ops/ms
Iteration  10: 361.631 ops/ms
Iteration  11: 362.686 ops/ms
Iteration  12: 359.858 ops/ms
Iteration  13: 360.226 ops/ms
Iteration  14: 359.584 ops/ms
Iteration  15: 360.153 ops/ms
Iteration  16: 358.960 ops/ms
Iteration  17: 360.153 ops/ms
Iteration  18: 360.190 ops/ms
Iteration  19: 358.742 ops/ms
Iteration  20: 359.365 ops/ms

Result : 360.881 ?(95%) 0.617 ?(99%) 0.843 ops/ms
  Statistics: (min, avg, max) = (358.742, 360.881, 362.888), stdev = 1.318
  Confidence intervals: 95% [360.264, 361.497], 99% [360.038, 361.724]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 264.063 ops/ms
# Warmup Iteration   2: 344.364 ops/ms
# Warmup Iteration   3: 364.525 ops/ms
# Warmup Iteration   4: 364.465 ops/ms
# Warmup Iteration   5: 363.995 ops/ms
# Warmup Iteration   6: 362.733 ops/ms
# Warmup Iteration   7: 365.123 ops/ms
# Warmup Iteration   8: 365.259 ops/ms
# Warmup Iteration   9: 364.140 ops/ms
# Warmup Iteration  10: 365.384 ops/ms
# Warmup Iteration  11: 365.612 ops/ms
# Warmup Iteration  12: 365.904 ops/ms
# Warmup Iteration  13: 366.388 ops/ms
# Warmup Iteration  14: 364.503 ops/ms
# Warmup Iteration  15: 366.957 ops/ms
# Warmup Iteration  16: 365.938 ops/ms
# Warmup Iteration  17: 362.849 ops/ms
# Warmup Iteration  18: 362.892 ops/ms
# Warmup Iteration  19: 361.337 ops/ms
# Warmup Iteration  20: 361.129 ops/ms
Iteration   1: 360.755 ops/ms
Iteration   2: 361.827 ops/ms
Iteration   3: 358.656 ops/ms
Iteration   4: 360.286 ops/ms
Iteration   5: 362.646 ops/ms
Iteration   6: 361.142 ops/ms
Iteration   7: 360.474 ops/ms
Iteration   8: 361.773 ops/ms
Iteration   9: 360.742 ops/ms
Iteration  10: 361.811 ops/ms
Iteration  11: 361.770 ops/ms
Iteration  12: 361.338 ops/ms
Iteration  13: 360.629 ops/ms
Iteration  14: 361.526 ops/ms
Iteration  15: 361.857 ops/ms
Iteration  16: 362.310 ops/ms
Iteration  17: 362.209 ops/ms
Iteration  18: 362.619 ops/ms
Iteration  19: 361.684 ops/ms
Iteration  20: 361.639 ops/ms

Result : 361.385 ?(95%) 0.438 ?(99%) 0.599 ops/ms
  Statistics: (min, avg, max) = (358.656, 361.385, 362.646), stdev = 0.936
  Confidence intervals: 95% [360.946, 361.823], 99% [360.786, 361.983]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 237.219 ops/ms
# Warmup Iteration   2: 307.109 ops/ms
# Warmup Iteration   3: 321.749 ops/ms
# Warmup Iteration   4: 322.590 ops/ms
# Warmup Iteration   5: 321.145 ops/ms
# Warmup Iteration   6: 320.219 ops/ms
# Warmup Iteration   7: 320.077 ops/ms
# Warmup Iteration   8: 324.831 ops/ms
# Warmup Iteration   9: 324.106 ops/ms
# Warmup Iteration  10: 325.708 ops/ms
# Warmup Iteration  11: 324.909 ops/ms
# Warmup Iteration  12: 324.379 ops/ms
# Warmup Iteration  13: 325.298 ops/ms
# Warmup Iteration  14: 323.338 ops/ms
# Warmup Iteration  15: 325.432 ops/ms
# Warmup Iteration  16: 325.983 ops/ms
# Warmup Iteration  17: 326.882 ops/ms
# Warmup Iteration  18: 326.394 ops/ms
# Warmup Iteration  19: 325.408 ops/ms
# Warmup Iteration  20: 326.928 ops/ms
Iteration   1: 325.453 ops/ms
Iteration   2: 326.540 ops/ms
Iteration   3: 326.748 ops/ms
Iteration   4: 324.733 ops/ms
Iteration   5: 326.554 ops/ms
Iteration   6: 326.767 ops/ms
Iteration   7: 325.500 ops/ms
Iteration   8: 325.566 ops/ms
Iteration   9: 325.460 ops/ms
Iteration  10: 325.819 ops/ms
Iteration  11: 324.469 ops/ms
Iteration  12: 325.456 ops/ms
Iteration  13: 325.001 ops/ms
Iteration  14: 323.093 ops/ms
Iteration  15: 323.885 ops/ms
Iteration  16: 324.117 ops/ms
Iteration  17: 324.649 ops/ms
Iteration  18: 325.124 ops/ms
Iteration  19: 323.152 ops/ms
Iteration  20: 324.292 ops/ms

Result : 325.119 ?(95%) 0.511 ?(99%) 0.698 ops/ms
  Statistics: (min, avg, max) = (323.093, 325.119, 326.767), stdev = 1.091
  Confidence intervals: 95% [324.608, 325.630], 99% [324.421, 325.817]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 260.092 ops/ms
# Warmup Iteration   2: 344.819 ops/ms
# Warmup Iteration   3: 362.696 ops/ms
# Warmup Iteration   4: 366.830 ops/ms
# Warmup Iteration   5: 371.510 ops/ms
# Warmup Iteration   6: 372.299 ops/ms
# Warmup Iteration   7: 370.547 ops/ms
# Warmup Iteration   8: 369.614 ops/ms
# Warmup Iteration   9: 369.909 ops/ms
# Warmup Iteration  10: 369.443 ops/ms
# Warmup Iteration  11: 368.145 ops/ms
# Warmup Iteration  12: 368.517 ops/ms
# Warmup Iteration  13: 369.565 ops/ms
# Warmup Iteration  14: 370.104 ops/ms
# Warmup Iteration  15: 368.430 ops/ms
# Warmup Iteration  16: 369.811 ops/ms
# Warmup Iteration  17: 367.156 ops/ms
# Warmup Iteration  18: 366.763 ops/ms
# Warmup Iteration  19: 365.148 ops/ms
# Warmup Iteration  20: 365.903 ops/ms
Iteration   1: 361.212 ops/ms
Iteration   2: 365.121 ops/ms
Iteration   3: 364.231 ops/ms
Iteration   4: 365.326 ops/ms
Iteration   5: 364.417 ops/ms
Iteration   6: 364.365 ops/ms
Iteration   7: 365.511 ops/ms
Iteration   8: 364.147 ops/ms
Iteration   9: 364.676 ops/ms
Iteration  10: 364.903 ops/ms
Iteration  11: 364.825 ops/ms
Iteration  12: 368.184 ops/ms
Iteration  13: 368.417 ops/ms
Iteration  14: 368.312 ops/ms
Iteration  15: 368.559 ops/ms
Iteration  16: 368.292 ops/ms
Iteration  17: 368.051 ops/ms
Iteration  18: 368.081 ops/ms
Iteration  19: 368.020 ops/ms
Iteration  20: 369.011 ops/ms

Result : 366.183 ?(95%) 1.014 ?(99%) 1.387 ops/ms
  Statistics: (min, avg, max) = (361.212, 366.183, 369.011), stdev = 2.167
  Confidence intervals: 95% [365.169, 367.197], 99% [364.797, 367.570]


"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone", aggregate over forked runs:

Result : 81737.525 ?(95%) 4261.047 ?(99%) 5639.874 ops/ms
  Statistics: (min, avg, max) = (37761.965, 81737.525, 103582.831), stdev = 21477.052
  Confidence intervals: 95% [77476.478, 85998.572], 99% [76097.651, 87377.399]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 50.289 ?(95%) 0.196 ?(99%) 0.259 ops/ms
  Statistics: (min, avg, max) = (47.050, 50.289, 51.621), stdev = 0.986
  Confidence intervals: 95% [50.093, 50.485], 99% [50.030, 50.548]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 53.104 ?(95%) 0.118 ?(99%) 0.156 ops/ms
  Statistics: (min, avg, max) = (51.681, 53.104, 54.351), stdev = 0.594
  Confidence intervals: 95% [52.986, 53.221], 99% [52.948, 53.259]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 86.713 ?(95%) 0.339 ?(99%) 0.449 ops/ms
  Statistics: (min, avg, max) = (83.257, 86.713, 89.281), stdev = 1.708
  Confidence intervals: 95% [86.375, 87.052], 99% [86.265, 87.162]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor", aggregate over forked runs:

Result : 56572.818 ?(95%) 89.637 ?(99%) 118.643 ops/ms
  Statistics: (min, avg, max) = (54480.822, 56572.818, 57231.127), stdev = 451.801
  Confidence intervals: 95% [56483.181, 56662.456], 99% [56454.175, 56691.461]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 563.880 ?(95%) 5.815 ?(99%) 7.697 ops/ms
  Statistics: (min, avg, max) = (527.419, 563.880, 617.661), stdev = 29.310
  Confidence intervals: 95% [558.065, 569.695], 99% [556.183, 571.576]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 1781.032 ?(95%) 6.249 ?(99%) 8.271 ops/ms
  Statistics: (min, avg, max) = (1705.860, 1781.032, 1805.040), stdev = 31.497
  Confidence intervals: 95% [1774.783, 1787.281], 99% [1772.761, 1789.303]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 19.753 ?(95%) 0.118 ?(99%) 0.156 ops/ms
  Statistics: (min, avg, max) = (18.564, 19.753, 20.719), stdev = 0.595
  Confidence intervals: 95% [19.635, 19.871], 99% [19.597, 19.909]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 412.379 ?(95%) 1.122 ?(99%) 1.486 ops/ms
  Statistics: (min, avg, max) = (400.005, 412.379, 421.168), stdev = 5.657
  Confidence intervals: 95% [411.257, 413.502], 99% [410.894, 413.865]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 233.607 ?(95%) 1.349 ?(99%) 1.785 ops/ms
  Statistics: (min, avg, max) = (220.363, 233.607, 242.596), stdev = 6.799
  Confidence intervals: 95% [232.258, 234.956], 99% [231.822, 235.392]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone", aggregate over forked runs:

Result : 92572.776 ?(95%) 224.458 ?(99%) 297.090 ops/ms
  Statistics: (min, avg, max) = (88546.282, 92572.776, 94275.571), stdev = 1131.340
  Confidence intervals: 95% [92348.318, 92797.234], 99% [92275.686, 92869.866]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 43.176 ?(95%) 0.071 ?(99%) 0.094 ops/ms
  Statistics: (min, avg, max) = (42.312, 43.176, 43.909), stdev = 0.359
  Confidence intervals: 95% [43.105, 43.248], 99% [43.082, 43.271]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 18.239 ?(95%) 0.084 ?(99%) 0.111 ops/ms
  Statistics: (min, avg, max) = (17.364, 18.239, 18.971), stdev = 0.424
  Confidence intervals: 95% [18.155, 18.323], 99% [18.128, 18.350]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 87.327 ?(95%) 0.225 ?(99%) 0.297 ops/ms
  Statistics: (min, avg, max) = (82.787, 87.327, 89.413), stdev = 1.132
  Confidence intervals: 95% [87.103, 87.552], 99% [87.030, 87.625]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor", aggregate over forked runs:

Result : 54711.513 ?(95%) 197.102 ?(99%) 260.882 ops/ms
  Statistics: (min, avg, max) = (53066.746, 54711.513, 56521.983), stdev = 993.458
  Confidence intervals: 95% [54514.411, 54908.615], 99% [54450.631, 54972.395]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 654.666 ?(95%) 13.372 ?(99%) 17.698 ops/ms
  Statistics: (min, avg, max) = (548.711, 654.666, 721.709), stdev = 67.397
  Confidence intervals: 95% [641.294, 668.037], 99% [636.967, 672.364]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 3785.431 ?(95%) 11.017 ?(99%) 14.582 ops/ms
  Statistics: (min, avg, max) = (3653.295, 3785.431, 3879.457), stdev = 55.531
  Confidence intervals: 95% [3774.414, 3796.448], 99% [3770.848, 3800.013]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 37.299 ?(95%) 0.739 ?(99%) 0.978 ops/ms
  Statistics: (min, avg, max) = (32.737, 37.299, 41.715), stdev = 3.724
  Confidence intervals: 95% [36.560, 38.037], 99% [36.321, 38.277]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 743.825 ?(95%) 0.786 ?(99%) 1.040 ops/ms
  Statistics: (min, avg, max) = (734.954, 743.825, 753.640), stdev = 3.962
  Confidence intervals: 95% [743.039, 744.611], 99% [742.785, 744.866]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 356.724 ?(95%) 3.232 ?(99%) 4.278 ops/ms
  Statistics: (min, avg, max) = (323.093, 356.724, 371.722), stdev = 16.291
  Confidence intervals: 95% [353.492, 359.957], 99% [352.446, 361.002]

Benchmark                                                                              Mode Thr    Cnt  Sec         Mean   Mean error    Units
c.v.b.c.primitives.PrimitiveBenchmark.copyByClone                                     thrpt   1    100    1    81737.525     5639.874   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByCustomSerialization                       thrpt   1    100    1       50.289        0.259   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByDefaultSerialization                      thrpt   1    100    1       53.104        0.156   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByExternalizable                            thrpt   1    100    1       86.713        0.449   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyConstructor                                 thrpt   1    100    1    56572.818      118.643   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime              thrpt   1    100    1      563.880        7.697   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields                  thrpt   1    100    1     1781.032        8.271   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke                 thrpt   1    100    1       19.753        0.156   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact            thrpt   1    100    1      412.379        1.486   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments    thrpt   1    100    1      233.607        1.785   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByClone                                        thrpt   1    100    1    92572.776      297.090   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByCustomSerialization                          thrpt   1    100    1       43.176        0.094   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByDefaultSerialization                         thrpt   1    100    1       18.239        0.111   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByExternalizable                               thrpt   1    100    1       87.327        0.297   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyConstructor                                    thrpt   1    100    1    54711.513      260.882   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime                 thrpt   1    100    1      654.666       17.698   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields                     thrpt   1    100    1     3785.431       14.582   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke                    thrpt   1    100    1       37.299        0.978   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact               thrpt   1    100    1      743.825        1.040   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments       thrpt   1    100    1      356.724        4.278   ops/ms
