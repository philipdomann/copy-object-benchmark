# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 65638.745 ops/ms
# Warmup Iteration   2: 97702.405 ops/ms
# Warmup Iteration   3: 99835.743 ops/ms
# Warmup Iteration   4: 101204.574 ops/ms
# Warmup Iteration   5: 102432.979 ops/ms
# Warmup Iteration   6: 102196.556 ops/ms
# Warmup Iteration   7: 103061.636 ops/ms
# Warmup Iteration   8: 100831.067 ops/ms
# Warmup Iteration   9: 102484.383 ops/ms
# Warmup Iteration  10: 100688.843 ops/ms
# Warmup Iteration  11: 83381.874 ops/ms
# Warmup Iteration  12: 88112.232 ops/ms
# Warmup Iteration  13: 91097.541 ops/ms
# Warmup Iteration  14: 94465.671 ops/ms
# Warmup Iteration  15: 84159.819 ops/ms
# Warmup Iteration  16: 85640.094 ops/ms
# Warmup Iteration  17: 96686.230 ops/ms
# Warmup Iteration  18: 96978.547 ops/ms
# Warmup Iteration  19: 102954.570 ops/ms
# Warmup Iteration  20: 98951.026 ops/ms
Iteration   1: 102078.376 ops/ms
Iteration   2: 102759.474 ops/ms
Iteration   3: 102036.569 ops/ms
Iteration   4: 102753.799 ops/ms
Iteration   5: 102062.182 ops/ms
Iteration   6: 90300.656 ops/ms
Iteration   7: 97940.992 ops/ms
Iteration   8: 96042.041 ops/ms
Iteration   9: 102613.996 ops/ms
Iteration  10: 103051.238 ops/ms
Iteration  11: 103509.913 ops/ms
Iteration  12: 99772.888 ops/ms
Iteration  13: 103343.930 ops/ms
Iteration  14: 102083.045 ops/ms
Iteration  15: 102790.260 ops/ms
Iteration  16: 92679.155 ops/ms
Iteration  17: 94992.595 ops/ms
Iteration  18: 94126.778 ops/ms
Iteration  19: 100163.327 ops/ms
Iteration  20: 99923.626 ops/ms

Result : 99751.242 ?(95%) 1877.200 ?(99%) 2566.014 ops/ms
  Statistics: (min, avg, max) = (90300.656, 99751.242, 103509.913), stdev = 4011.033
  Confidence intervals: 95% [97874.043, 101628.442], 99% [97185.228, 102317.256]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66959.381 ops/ms
# Warmup Iteration   2: 99570.365 ops/ms
# Warmup Iteration   3: 102837.855 ops/ms
# Warmup Iteration   4: 99121.170 ops/ms
# Warmup Iteration   5: 100304.762 ops/ms
# Warmup Iteration   6: 99748.056 ops/ms
# Warmup Iteration   7: 102890.121 ops/ms
# Warmup Iteration   8: 94126.984 ops/ms
# Warmup Iteration   9: 102075.750 ops/ms
# Warmup Iteration  10: 101721.779 ops/ms
# Warmup Iteration  11: 92394.660 ops/ms
# Warmup Iteration  12: 100153.875 ops/ms
# Warmup Iteration  13: 99042.677 ops/ms
# Warmup Iteration  14: 86719.166 ops/ms
# Warmup Iteration  15: 94400.439 ops/ms
# Warmup Iteration  16: 91150.953 ops/ms
# Warmup Iteration  17: 98623.107 ops/ms
# Warmup Iteration  18: 98393.435 ops/ms
# Warmup Iteration  19: 95591.456 ops/ms
# Warmup Iteration  20: 95230.133 ops/ms
Iteration   1: 102340.737 ops/ms
Iteration   2: 96919.839 ops/ms
Iteration   3: 97838.950 ops/ms
Iteration   4: 101964.567 ops/ms
Iteration   5: 96349.178 ops/ms
Iteration   6: 98705.410 ops/ms
Iteration   7: 95788.320 ops/ms
Iteration   8: 95568.066 ops/ms
Iteration   9: 96157.347 ops/ms
Iteration  10: 84768.822 ops/ms
Iteration  11: 90899.501 ops/ms
Iteration  12: 102063.967 ops/ms
Iteration  13: 103351.309 ops/ms
Iteration  14: 102406.675 ops/ms
Iteration  15: 87627.877 ops/ms
Iteration  16: 101746.981 ops/ms
Iteration  17: 102914.855 ops/ms
Iteration  18: 99409.592 ops/ms
Iteration  19: 92642.761 ops/ms
Iteration  20: 95681.202 ops/ms

Result : 97257.298 ?(95%) 2434.303 ?(99%) 3327.540 ops/ms
  Statistics: (min, avg, max) = (84768.822, 97257.298, 103351.309), stdev = 5201.402
  Confidence intervals: 95% [94822.995, 99691.601], 99% [93929.758, 100584.838]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 63863.480 ops/ms
# Warmup Iteration   2: 88610.623 ops/ms
# Warmup Iteration   3: 96709.966 ops/ms
# Warmup Iteration   4: 87909.773 ops/ms
# Warmup Iteration   5: 92217.123 ops/ms
# Warmup Iteration   6: 93883.171 ops/ms
# Warmup Iteration   7: 93679.696 ops/ms
# Warmup Iteration   8: 87790.513 ops/ms
# Warmup Iteration   9: 87909.110 ops/ms
# Warmup Iteration  10: 95736.551 ops/ms
# Warmup Iteration  11: 93282.283 ops/ms
# Warmup Iteration  12: 91526.205 ops/ms
# Warmup Iteration  13: 97207.986 ops/ms
# Warmup Iteration  14: 100613.647 ops/ms
# Warmup Iteration  15: 102150.034 ops/ms
# Warmup Iteration  16: 98860.426 ops/ms
# Warmup Iteration  17: 103938.519 ops/ms
# Warmup Iteration  18: 103223.803 ops/ms
# Warmup Iteration  19: 103792.554 ops/ms
# Warmup Iteration  20: 103619.226 ops/ms
Iteration   1: 103634.346 ops/ms
Iteration   2: 101068.523 ops/ms
Iteration   3: 102767.572 ops/ms
Iteration   4: 103370.993 ops/ms
Iteration   5: 102386.314 ops/ms
Iteration   6: 102359.792 ops/ms
Iteration   7: 103553.343 ops/ms
Iteration   8: 102708.019 ops/ms
Iteration   9: 102724.175 ops/ms
Iteration  10: 99755.891 ops/ms
Iteration  11: 102761.750 ops/ms
Iteration  12: 103850.208 ops/ms
Iteration  13: 102645.404 ops/ms
Iteration  14: 100203.530 ops/ms
Iteration  15: 103587.272 ops/ms
Iteration  16: 103072.105 ops/ms
Iteration  17: 103870.636 ops/ms
Iteration  18: 99892.985 ops/ms
Iteration  19: 100960.468 ops/ms
Iteration  20: 103730.173 ops/ms

Result : 102445.175 ?(95%) 627.224 ?(99%) 857.375 ops/ms
  Statistics: (min, avg, max) = (99755.891, 102445.175, 103870.636), stdev = 1340.196
  Confidence intervals: 95% [101817.951, 103072.399], 99% [101587.800, 103302.550]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66914.136 ops/ms
# Warmup Iteration   2: 96901.752 ops/ms
# Warmup Iteration   3: 102967.797 ops/ms
# Warmup Iteration   4: 102922.858 ops/ms
# Warmup Iteration   5: 103137.681 ops/ms
# Warmup Iteration   6: 99557.639 ops/ms
# Warmup Iteration   7: 103870.108 ops/ms
# Warmup Iteration   8: 103225.441 ops/ms
# Warmup Iteration   9: 102463.228 ops/ms
# Warmup Iteration  10: 99221.446 ops/ms
# Warmup Iteration  11: 102210.870 ops/ms
# Warmup Iteration  12: 103630.241 ops/ms
# Warmup Iteration  13: 103449.533 ops/ms
# Warmup Iteration  14: 101488.549 ops/ms
# Warmup Iteration  15: 103255.987 ops/ms
# Warmup Iteration  16: 102313.324 ops/ms
# Warmup Iteration  17: 102968.096 ops/ms
# Warmup Iteration  18: 103251.909 ops/ms
# Warmup Iteration  19: 100769.502 ops/ms
# Warmup Iteration  20: 103432.487 ops/ms
Iteration   1: 102051.691 ops/ms
Iteration   2: 102789.070 ops/ms
Iteration   3: 99308.455 ops/ms
Iteration   4: 101852.232 ops/ms
Iteration   5: 104194.525 ops/ms
Iteration   6: 102519.546 ops/ms
Iteration   7: 100418.601 ops/ms
Iteration   8: 103038.832 ops/ms
Iteration   9: 102339.039 ops/ms
Iteration  10: 103756.356 ops/ms
Iteration  11: 99438.769 ops/ms
Iteration  12: 103491.024 ops/ms
Iteration  13: 103147.524 ops/ms
Iteration  14: 103290.806 ops/ms
Iteration  15: 101884.493 ops/ms
Iteration  16: 102217.306 ops/ms
Iteration  17: 104013.637 ops/ms
Iteration  18: 103528.475 ops/ms
Iteration  19: 101023.486 ops/ms
Iteration  20: 103411.842 ops/ms

Result : 102385.786 ?(95%) 661.386 ?(99%) 904.073 ops/ms
  Statistics: (min, avg, max) = (99308.455, 102385.786, 104194.525), stdev = 1413.190
  Confidence intervals: 95% [101724.400, 103047.171], 99% [101481.713, 103289.858]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone
# Warmup Iteration   1: 66435.015 ops/ms
# Warmup Iteration   2: 98695.848 ops/ms
# Warmup Iteration   3: 99701.730 ops/ms
# Warmup Iteration   4: 102823.926 ops/ms
# Warmup Iteration   5: 103665.552 ops/ms
# Warmup Iteration   6: 103313.276 ops/ms
# Warmup Iteration   7: 100965.442 ops/ms
# Warmup Iteration   8: 102705.481 ops/ms
# Warmup Iteration   9: 102789.821 ops/ms
# Warmup Iteration  10: 103962.712 ops/ms
# Warmup Iteration  11: 101129.386 ops/ms
# Warmup Iteration  12: 103050.678 ops/ms
# Warmup Iteration  13: 103200.267 ops/ms
# Warmup Iteration  14: 103720.661 ops/ms
# Warmup Iteration  15: 103506.863 ops/ms
# Warmup Iteration  16: 101155.438 ops/ms
# Warmup Iteration  17: 103453.261 ops/ms
# Warmup Iteration  18: 103050.123 ops/ms
# Warmup Iteration  19: 102333.419 ops/ms
# Warmup Iteration  20: 100222.640 ops/ms
Iteration   1: 103380.260 ops/ms
Iteration   2: 103757.003 ops/ms
Iteration   3: 102670.842 ops/ms
Iteration   4: 99355.358 ops/ms
Iteration   5: 103385.837 ops/ms
Iteration   6: 103458.918 ops/ms
Iteration   7: 103303.500 ops/ms
Iteration   8: 98043.314 ops/ms
Iteration   9: 103619.231 ops/ms
Iteration  10: 102507.824 ops/ms
Iteration  11: 102864.598 ops/ms
Iteration  12: 101099.783 ops/ms
Iteration  13: 102175.222 ops/ms
Iteration  14: 103476.109 ops/ms
Iteration  15: 102544.545 ops/ms
Iteration  16: 100029.788 ops/ms
Iteration  17: 103599.553 ops/ms
Iteration  18: 103097.608 ops/ms
Iteration  19: 103174.983 ops/ms
Iteration  20: 102412.529 ops/ms

Result : 102397.840 ?(95%) 734.624 ?(99%) 1004.185 ops/ms
  Statistics: (min, avg, max) = (98043.314, 102397.840, 103757.003), stdev = 1569.678
  Confidence intervals: 95% [101663.216, 103132.464], 99% [101393.656, 103402.025]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 27.411 ops/ms
# Warmup Iteration   2: 39.660 ops/ms
# Warmup Iteration   3: 45.491 ops/ms
# Warmup Iteration   4: 48.525 ops/ms
# Warmup Iteration   5: 49.976 ops/ms
# Warmup Iteration   6: 50.181 ops/ms
# Warmup Iteration   7: 50.399 ops/ms
# Warmup Iteration   8: 49.972 ops/ms
# Warmup Iteration   9: 49.928 ops/ms
# Warmup Iteration  10: 50.557 ops/ms
# Warmup Iteration  11: 50.269 ops/ms
# Warmup Iteration  12: 50.214 ops/ms
# Warmup Iteration  13: 50.445 ops/ms
# Warmup Iteration  14: 50.498 ops/ms
# Warmup Iteration  15: 50.558 ops/ms
# Warmup Iteration  16: 50.403 ops/ms
# Warmup Iteration  17: 50.445 ops/ms
# Warmup Iteration  18: 50.140 ops/ms
# Warmup Iteration  19: 50.147 ops/ms
# Warmup Iteration  20: 50.483 ops/ms
Iteration   1: 50.046 ops/ms
Iteration   2: 50.537 ops/ms
Iteration   3: 50.342 ops/ms
Iteration   4: 50.454 ops/ms
Iteration   5: 50.376 ops/ms
Iteration   6: 50.447 ops/ms
Iteration   7: 50.276 ops/ms
Iteration   8: 50.565 ops/ms
Iteration   9: 50.320 ops/ms
Iteration  10: 50.262 ops/ms
Iteration  11: 50.545 ops/ms
Iteration  12: 50.527 ops/ms
Iteration  13: 50.105 ops/ms
Iteration  14: 50.586 ops/ms
Iteration  15: 50.535 ops/ms
Iteration  16: 50.486 ops/ms
Iteration  17: 49.914 ops/ms
Iteration  18: 50.477 ops/ms
Iteration  19: 50.216 ops/ms
Iteration  20: 50.149 ops/ms

Result : 50.358 ?(95%) 0.090 ?(99%) 0.124 ops/ms
  Statistics: (min, avg, max) = (49.914, 50.358, 50.586), stdev = 0.193
  Confidence intervals: 95% [50.268, 50.449], 99% [50.235, 50.482]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 26.223 ops/ms
# Warmup Iteration   2: 40.245 ops/ms
# Warmup Iteration   3: 46.415 ops/ms
# Warmup Iteration   4: 49.645 ops/ms
# Warmup Iteration   5: 50.639 ops/ms
# Warmup Iteration   6: 50.670 ops/ms
# Warmup Iteration   7: 51.332 ops/ms
# Warmup Iteration   8: 50.648 ops/ms
# Warmup Iteration   9: 50.745 ops/ms
# Warmup Iteration  10: 50.929 ops/ms
# Warmup Iteration  11: 51.279 ops/ms
# Warmup Iteration  12: 51.000 ops/ms
# Warmup Iteration  13: 51.048 ops/ms
# Warmup Iteration  14: 51.224 ops/ms
# Warmup Iteration  15: 50.969 ops/ms
# Warmup Iteration  16: 51.102 ops/ms
# Warmup Iteration  17: 51.116 ops/ms
# Warmup Iteration  18: 51.205 ops/ms
# Warmup Iteration  19: 51.488 ops/ms
# Warmup Iteration  20: 51.216 ops/ms
Iteration   1: 51.286 ops/ms
Iteration   2: 50.805 ops/ms
Iteration   3: 51.492 ops/ms
Iteration   4: 51.091 ops/ms
Iteration   5: 51.149 ops/ms
Iteration   6: 50.964 ops/ms
Iteration   7: 51.134 ops/ms
Iteration   8: 51.441 ops/ms
Iteration   9: 51.369 ops/ms
Iteration  10: 50.940 ops/ms
Iteration  11: 51.102 ops/ms
Iteration  12: 51.341 ops/ms
Iteration  13: 51.380 ops/ms
Iteration  14: 51.156 ops/ms
Iteration  15: 51.507 ops/ms
Iteration  16: 51.566 ops/ms
Iteration  17: 51.516 ops/ms
Iteration  18: 51.239 ops/ms
Iteration  19: 51.387 ops/ms
Iteration  20: 51.469 ops/ms

Result : 51.267 ?(95%) 0.101 ?(99%) 0.138 ops/ms
  Statistics: (min, avg, max) = (50.805, 51.267, 51.566), stdev = 0.216
  Confidence intervals: 95% [51.165, 51.368], 99% [51.128, 51.405]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 28.052 ops/ms
# Warmup Iteration   2: 40.496 ops/ms
# Warmup Iteration   3: 46.303 ops/ms
# Warmup Iteration   4: 49.902 ops/ms
# Warmup Iteration   5: 51.164 ops/ms
# Warmup Iteration   6: 51.163 ops/ms
# Warmup Iteration   7: 51.393 ops/ms
# Warmup Iteration   8: 51.758 ops/ms
# Warmup Iteration   9: 51.465 ops/ms
# Warmup Iteration  10: 51.680 ops/ms
# Warmup Iteration  11: 51.436 ops/ms
# Warmup Iteration  12: 51.325 ops/ms
# Warmup Iteration  13: 51.297 ops/ms
# Warmup Iteration  14: 51.431 ops/ms
# Warmup Iteration  15: 51.302 ops/ms
# Warmup Iteration  16: 51.607 ops/ms
# Warmup Iteration  17: 51.242 ops/ms
# Warmup Iteration  18: 51.456 ops/ms
# Warmup Iteration  19: 51.441 ops/ms
# Warmup Iteration  20: 51.734 ops/ms
Iteration   1: 51.658 ops/ms
Iteration   2: 51.562 ops/ms
Iteration   3: 51.543 ops/ms
Iteration   4: 51.699 ops/ms
Iteration   5: 51.534 ops/ms
Iteration   6: 51.456 ops/ms
Iteration   7: 51.257 ops/ms
Iteration   8: 51.632 ops/ms
Iteration   9: 51.699 ops/ms
Iteration  10: 51.436 ops/ms
Iteration  11: 51.491 ops/ms
Iteration  12: 51.661 ops/ms
Iteration  13: 51.565 ops/ms
Iteration  14: 51.607 ops/ms
Iteration  15: 51.529 ops/ms
Iteration  16: 51.426 ops/ms
Iteration  17: 51.577 ops/ms
Iteration  18: 51.279 ops/ms
Iteration  19: 51.459 ops/ms
Iteration  20: 51.555 ops/ms

Result : 51.531 ?(95%) 0.057 ?(99%) 0.078 ops/ms
  Statistics: (min, avg, max) = (51.257, 51.531, 51.699), stdev = 0.122
  Confidence intervals: 95% [51.474, 51.588], 99% [51.453, 51.609]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 26.254 ops/ms
# Warmup Iteration   2: 40.079 ops/ms
# Warmup Iteration   3: 46.005 ops/ms
# Warmup Iteration   4: 49.344 ops/ms
# Warmup Iteration   5: 50.715 ops/ms
# Warmup Iteration   6: 50.864 ops/ms
# Warmup Iteration   7: 51.274 ops/ms
# Warmup Iteration   8: 51.032 ops/ms
# Warmup Iteration   9: 51.317 ops/ms
# Warmup Iteration  10: 51.255 ops/ms
# Warmup Iteration  11: 51.265 ops/ms
# Warmup Iteration  12: 50.995 ops/ms
# Warmup Iteration  13: 51.263 ops/ms
# Warmup Iteration  14: 51.207 ops/ms
# Warmup Iteration  15: 50.929 ops/ms
# Warmup Iteration  16: 50.755 ops/ms
# Warmup Iteration  17: 51.050 ops/ms
# Warmup Iteration  18: 51.150 ops/ms
# Warmup Iteration  19: 51.154 ops/ms
# Warmup Iteration  20: 51.232 ops/ms
Iteration   1: 50.875 ops/ms
Iteration   2: 51.323 ops/ms
Iteration   3: 51.218 ops/ms
Iteration   4: 51.073 ops/ms
Iteration   5: 51.397 ops/ms
Iteration   6: 51.082 ops/ms
Iteration   7: 50.639 ops/ms
Iteration   8: 50.870 ops/ms
Iteration   9: 51.288 ops/ms
Iteration  10: 51.264 ops/ms
Iteration  11: 50.831 ops/ms
Iteration  12: 50.891 ops/ms
Iteration  13: 51.204 ops/ms
Iteration  14: 51.273 ops/ms
Iteration  15: 51.079 ops/ms
Iteration  16: 51.304 ops/ms
Iteration  17: 51.280 ops/ms
Iteration  18: 51.143 ops/ms
Iteration  19: 51.224 ops/ms
Iteration  20: 51.224 ops/ms

Result : 51.124 ?(95%) 0.095 ?(99%) 0.130 ops/ms
  Statistics: (min, avg, max) = (50.639, 51.124, 51.397), stdev = 0.203
  Confidence intervals: 95% [51.029, 51.219], 99% [50.994, 51.254]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 27.464 ops/ms
# Warmup Iteration   2: 38.312 ops/ms
# Warmup Iteration   3: 45.021 ops/ms
# Warmup Iteration   4: 49.028 ops/ms
# Warmup Iteration   5: 50.563 ops/ms
# Warmup Iteration   6: 50.663 ops/ms
# Warmup Iteration   7: 50.918 ops/ms
# Warmup Iteration   8: 51.178 ops/ms
# Warmup Iteration   9: 50.800 ops/ms
# Warmup Iteration  10: 51.301 ops/ms
# Warmup Iteration  11: 51.079 ops/ms
# Warmup Iteration  12: 51.148 ops/ms
# Warmup Iteration  13: 50.843 ops/ms
# Warmup Iteration  14: 51.108 ops/ms
# Warmup Iteration  15: 51.057 ops/ms
# Warmup Iteration  16: 50.863 ops/ms
# Warmup Iteration  17: 51.252 ops/ms
# Warmup Iteration  18: 51.332 ops/ms
# Warmup Iteration  19: 51.375 ops/ms
# Warmup Iteration  20: 51.386 ops/ms
Iteration   1: 51.123 ops/ms
Iteration   2: 51.099 ops/ms
Iteration   3: 51.221 ops/ms
Iteration   4: 51.281 ops/ms
Iteration   5: 50.930 ops/ms
Iteration   6: 50.992 ops/ms
Iteration   7: 51.031 ops/ms
Iteration   8: 51.353 ops/ms
Iteration   9: 50.173 ops/ms
Iteration  10: 47.979 ops/ms
Iteration  11: 47.191 ops/ms
Iteration  12: 50.141 ops/ms
Iteration  13: 50.501 ops/ms
Iteration  14: 51.229 ops/ms
Iteration  15: 51.363 ops/ms
Iteration  16: 51.214 ops/ms
Iteration  17: 50.955 ops/ms
Iteration  18: 49.556 ops/ms
Iteration  19: 50.559 ops/ms
Iteration  20: 50.705 ops/ms

Result : 50.530 ?(95%) 0.523 ?(99%) 0.715 ops/ms
  Statistics: (min, avg, max) = (47.191, 50.530, 51.363), stdev = 1.118
  Confidence intervals: 95% [50.006, 51.053], 99% [49.814, 51.245]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.377 ops/ms
# Warmup Iteration   2: 41.711 ops/ms
# Warmup Iteration   3: 47.146 ops/ms
# Warmup Iteration   4: 50.473 ops/ms
# Warmup Iteration   5: 51.623 ops/ms
# Warmup Iteration   6: 51.693 ops/ms
# Warmup Iteration   7: 51.964 ops/ms
# Warmup Iteration   8: 52.036 ops/ms
# Warmup Iteration   9: 51.850 ops/ms
# Warmup Iteration  10: 52.195 ops/ms
# Warmup Iteration  11: 51.809 ops/ms
# Warmup Iteration  12: 51.876 ops/ms
# Warmup Iteration  13: 52.179 ops/ms
# Warmup Iteration  14: 51.696 ops/ms
# Warmup Iteration  15: 51.799 ops/ms
# Warmup Iteration  16: 51.945 ops/ms
# Warmup Iteration  17: 51.696 ops/ms
# Warmup Iteration  18: 52.275 ops/ms
# Warmup Iteration  19: 52.202 ops/ms
# Warmup Iteration  20: 52.224 ops/ms
Iteration   1: 52.356 ops/ms
Iteration   2: 51.964 ops/ms
Iteration   3: 52.144 ops/ms
Iteration   4: 51.840 ops/ms
Iteration   5: 52.257 ops/ms
Iteration   6: 51.778 ops/ms
Iteration   7: 52.251 ops/ms
Iteration   8: 52.071 ops/ms
Iteration   9: 52.298 ops/ms
Iteration  10: 51.820 ops/ms
Iteration  11: 52.257 ops/ms
Iteration  12: 52.210 ops/ms
Iteration  13: 52.189 ops/ms
Iteration  14: 52.129 ops/ms
Iteration  15: 52.204 ops/ms
Iteration  16: 52.299 ops/ms
Iteration  17: 52.111 ops/ms
Iteration  18: 51.981 ops/ms
Iteration  19: 52.247 ops/ms
Iteration  20: 51.978 ops/ms

Result : 52.119 ?(95%) 0.081 ?(99%) 0.110 ops/ms
  Statistics: (min, avg, max) = (51.778, 52.119, 52.356), stdev = 0.172
  Confidence intervals: 95% [52.039, 52.200], 99% [52.009, 52.229]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.535 ops/ms
# Warmup Iteration   2: 40.881 ops/ms
# Warmup Iteration   3: 47.556 ops/ms
# Warmup Iteration   4: 51.495 ops/ms
# Warmup Iteration   5: 52.870 ops/ms
# Warmup Iteration   6: 52.911 ops/ms
# Warmup Iteration   7: 53.349 ops/ms
# Warmup Iteration   8: 53.504 ops/ms
# Warmup Iteration   9: 52.919 ops/ms
# Warmup Iteration  10: 53.002 ops/ms
# Warmup Iteration  11: 53.336 ops/ms
# Warmup Iteration  12: 53.298 ops/ms
# Warmup Iteration  13: 53.518 ops/ms
# Warmup Iteration  14: 53.340 ops/ms
# Warmup Iteration  15: 53.506 ops/ms
# Warmup Iteration  16: 53.219 ops/ms
# Warmup Iteration  17: 53.376 ops/ms
# Warmup Iteration  18: 53.309 ops/ms
# Warmup Iteration  19: 53.169 ops/ms
# Warmup Iteration  20: 53.153 ops/ms
Iteration   1: 53.391 ops/ms
Iteration   2: 53.346 ops/ms
Iteration   3: 53.107 ops/ms
Iteration   4: 53.198 ops/ms
Iteration   5: 53.363 ops/ms
Iteration   6: 53.064 ops/ms
Iteration   7: 52.822 ops/ms
Iteration   8: 53.018 ops/ms
Iteration   9: 53.108 ops/ms
Iteration  10: 52.920 ops/ms
Iteration  11: 52.956 ops/ms
Iteration  12: 53.420 ops/ms
Iteration  13: 53.297 ops/ms
Iteration  14: 53.036 ops/ms
Iteration  15: 53.127 ops/ms
Iteration  16: 53.393 ops/ms
Iteration  17: 53.331 ops/ms
Iteration  18: 53.322 ops/ms
Iteration  19: 52.662 ops/ms
Iteration  20: 53.269 ops/ms

Result : 53.157 ?(95%) 0.099 ?(99%) 0.135 ops/ms
  Statistics: (min, avg, max) = (52.662, 53.157, 53.420), stdev = 0.212
  Confidence intervals: 95% [53.058, 53.257], 99% [53.022, 53.293]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.187 ops/ms
# Warmup Iteration   2: 41.678 ops/ms
# Warmup Iteration   3: 47.074 ops/ms
# Warmup Iteration   4: 50.930 ops/ms
# Warmup Iteration   5: 52.190 ops/ms
# Warmup Iteration   6: 52.140 ops/ms
# Warmup Iteration   7: 52.522 ops/ms
# Warmup Iteration   8: 52.485 ops/ms
# Warmup Iteration   9: 52.465 ops/ms
# Warmup Iteration  10: 52.671 ops/ms
# Warmup Iteration  11: 52.279 ops/ms
# Warmup Iteration  12: 52.642 ops/ms
# Warmup Iteration  13: 52.394 ops/ms
# Warmup Iteration  14: 52.728 ops/ms
# Warmup Iteration  15: 52.652 ops/ms
# Warmup Iteration  16: 52.666 ops/ms
# Warmup Iteration  17: 52.340 ops/ms
# Warmup Iteration  18: 51.976 ops/ms
# Warmup Iteration  19: 52.659 ops/ms
# Warmup Iteration  20: 52.192 ops/ms
Iteration   1: 52.400 ops/ms
Iteration   2: 52.459 ops/ms
Iteration   3: 52.347 ops/ms
Iteration   4: 52.412 ops/ms
Iteration   5: 52.405 ops/ms
Iteration   6: 52.448 ops/ms
Iteration   7: 52.655 ops/ms
Iteration   8: 52.413 ops/ms
Iteration   9: 52.645 ops/ms
Iteration  10: 52.609 ops/ms
Iteration  11: 52.658 ops/ms
Iteration  12: 52.376 ops/ms
Iteration  13: 52.626 ops/ms
Iteration  14: 52.355 ops/ms
Iteration  15: 52.663 ops/ms
Iteration  16: 52.581 ops/ms
Iteration  17: 52.606 ops/ms
Iteration  18: 52.534 ops/ms
Iteration  19: 52.673 ops/ms
Iteration  20: 52.200 ops/ms

Result : 52.503 ?(95%) 0.065 ?(99%) 0.088 ops/ms
  Statistics: (min, avg, max) = (52.200, 52.503, 52.673), stdev = 0.138
  Confidence intervals: 95% [52.439, 52.568], 99% [52.415, 52.592]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 28.815 ops/ms
# Warmup Iteration   2: 41.270 ops/ms
# Warmup Iteration   3: 47.349 ops/ms
# Warmup Iteration   4: 50.733 ops/ms
# Warmup Iteration   5: 52.155 ops/ms
# Warmup Iteration   6: 52.485 ops/ms
# Warmup Iteration   7: 52.779 ops/ms
# Warmup Iteration   8: 52.902 ops/ms
# Warmup Iteration   9: 52.685 ops/ms
# Warmup Iteration  10: 52.983 ops/ms
# Warmup Iteration  11: 53.076 ops/ms
# Warmup Iteration  12: 52.967 ops/ms
# Warmup Iteration  13: 52.864 ops/ms
# Warmup Iteration  14: 52.895 ops/ms
# Warmup Iteration  15: 52.747 ops/ms
# Warmup Iteration  16: 53.139 ops/ms
# Warmup Iteration  17: 52.523 ops/ms
# Warmup Iteration  18: 52.683 ops/ms
# Warmup Iteration  19: 52.826 ops/ms
# Warmup Iteration  20: 52.704 ops/ms
Iteration   1: 52.205 ops/ms
Iteration   2: 52.848 ops/ms
Iteration   3: 52.921 ops/ms
Iteration   4: 52.835 ops/ms
Iteration   5: 52.622 ops/ms
Iteration   6: 52.827 ops/ms
Iteration   7: 52.723 ops/ms
Iteration   8: 52.458 ops/ms
Iteration   9: 52.717 ops/ms
Iteration  10: 52.660 ops/ms
Iteration  11: 52.642 ops/ms
Iteration  12: 52.628 ops/ms
Iteration  13: 52.505 ops/ms
Iteration  14: 52.535 ops/ms
Iteration  15: 52.573 ops/ms
Iteration  16: 52.609 ops/ms
Iteration  17: 52.494 ops/ms
Iteration  18: 52.719 ops/ms
Iteration  19: 52.724 ops/ms
Iteration  20: 52.665 ops/ms

Result : 52.645 ?(95%) 0.076 ?(99%) 0.104 ops/ms
  Statistics: (min, avg, max) = (52.205, 52.645, 52.921), stdev = 0.162
  Confidence intervals: 95% [52.570, 52.721], 99% [52.542, 52.749]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 29.285 ops/ms
# Warmup Iteration   2: 40.473 ops/ms
# Warmup Iteration   3: 47.342 ops/ms
# Warmup Iteration   4: 51.120 ops/ms
# Warmup Iteration   5: 52.145 ops/ms
# Warmup Iteration   6: 52.382 ops/ms
# Warmup Iteration   7: 52.786 ops/ms
# Warmup Iteration   8: 52.988 ops/ms
# Warmup Iteration   9: 52.645 ops/ms
# Warmup Iteration  10: 52.963 ops/ms
# Warmup Iteration  11: 52.804 ops/ms
# Warmup Iteration  12: 53.010 ops/ms
# Warmup Iteration  13: 52.776 ops/ms
# Warmup Iteration  14: 52.574 ops/ms
# Warmup Iteration  15: 52.761 ops/ms
# Warmup Iteration  16: 52.720 ops/ms
# Warmup Iteration  17: 53.018 ops/ms
# Warmup Iteration  18: 52.797 ops/ms
# Warmup Iteration  19: 53.036 ops/ms
# Warmup Iteration  20: 52.844 ops/ms
Iteration   1: 53.062 ops/ms
Iteration   2: 52.882 ops/ms
Iteration   3: 52.771 ops/ms
Iteration   4: 53.047 ops/ms
Iteration   5: 52.778 ops/ms
Iteration   6: 52.610 ops/ms
Iteration   7: 52.709 ops/ms
Iteration   8: 52.885 ops/ms
Iteration   9: 52.892 ops/ms
Iteration  10: 52.768 ops/ms
Iteration  11: 53.123 ops/ms
Iteration  12: 52.994 ops/ms
Iteration  13: 53.103 ops/ms
Iteration  14: 52.588 ops/ms
Iteration  15: 52.899 ops/ms
Iteration  16: 52.949 ops/ms
Iteration  17: 52.591 ops/ms
Iteration  18: 52.697 ops/ms
Iteration  19: 52.733 ops/ms
Iteration  20: 52.915 ops/ms

Result : 52.850 ?(95%) 0.078 ?(99%) 0.107 ops/ms
  Statistics: (min, avg, max) = (52.588, 52.850, 53.123), stdev = 0.167
  Confidence intervals: 95% [52.771, 52.928], 99% [52.743, 52.957]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 45.803 ops/ms
# Warmup Iteration   2: 65.486 ops/ms
# Warmup Iteration   3: 75.607 ops/ms
# Warmup Iteration   4: 80.553 ops/ms
# Warmup Iteration   5: 82.305 ops/ms
# Warmup Iteration   6: 82.415 ops/ms
# Warmup Iteration   7: 82.836 ops/ms
# Warmup Iteration   8: 83.029 ops/ms
# Warmup Iteration   9: 83.219 ops/ms
# Warmup Iteration  10: 83.033 ops/ms
# Warmup Iteration  11: 82.425 ops/ms
# Warmup Iteration  12: 83.040 ops/ms
# Warmup Iteration  13: 83.265 ops/ms
# Warmup Iteration  14: 82.679 ops/ms
# Warmup Iteration  15: 82.803 ops/ms
# Warmup Iteration  16: 83.234 ops/ms
# Warmup Iteration  17: 82.922 ops/ms
# Warmup Iteration  18: 83.257 ops/ms
# Warmup Iteration  19: 83.093 ops/ms
# Warmup Iteration  20: 83.161 ops/ms
Iteration   1: 82.842 ops/ms
Iteration   2: 82.940 ops/ms
Iteration   3: 82.712 ops/ms
Iteration   4: 83.223 ops/ms
Iteration   5: 83.231 ops/ms
Iteration   6: 82.905 ops/ms
Iteration   7: 82.994 ops/ms
Iteration   8: 82.877 ops/ms
Iteration   9: 83.255 ops/ms
Iteration  10: 83.296 ops/ms
Iteration  11: 82.289 ops/ms
Iteration  12: 83.188 ops/ms
Iteration  13: 83.233 ops/ms
Iteration  14: 83.280 ops/ms
Iteration  15: 82.989 ops/ms
Iteration  16: 83.326 ops/ms
Iteration  17: 82.625 ops/ms
Iteration  18: 83.290 ops/ms
Iteration  19: 82.445 ops/ms
Iteration  20: 82.927 ops/ms

Result : 82.993 ?(95%) 0.140 ?(99%) 0.192 ops/ms
  Statistics: (min, avg, max) = (82.289, 82.993, 83.326), stdev = 0.300
  Confidence intervals: 95% [82.853, 83.134], 99% [82.801, 83.185]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 43.305 ops/ms
# Warmup Iteration   2: 66.958 ops/ms
# Warmup Iteration   3: 75.892 ops/ms
# Warmup Iteration   4: 80.623 ops/ms
# Warmup Iteration   5: 82.501 ops/ms
# Warmup Iteration   6: 82.013 ops/ms
# Warmup Iteration   7: 82.892 ops/ms
# Warmup Iteration   8: 83.038 ops/ms
# Warmup Iteration   9: 82.842 ops/ms
# Warmup Iteration  10: 82.733 ops/ms
# Warmup Iteration  11: 81.730 ops/ms
# Warmup Iteration  12: 82.785 ops/ms
# Warmup Iteration  13: 83.181 ops/ms
# Warmup Iteration  14: 82.940 ops/ms
# Warmup Iteration  15: 82.786 ops/ms
# Warmup Iteration  16: 83.281 ops/ms
# Warmup Iteration  17: 82.374 ops/ms
# Warmup Iteration  18: 82.584 ops/ms
# Warmup Iteration  19: 82.926 ops/ms
# Warmup Iteration  20: 82.826 ops/ms
Iteration   1: 82.656 ops/ms
Iteration   2: 83.099 ops/ms
Iteration   3: 82.672 ops/ms
Iteration   4: 82.677 ops/ms
Iteration   5: 82.583 ops/ms
Iteration   6: 83.192 ops/ms
Iteration   7: 82.445 ops/ms
Iteration   8: 82.571 ops/ms
Iteration   9: 83.085 ops/ms
Iteration  10: 82.778 ops/ms
Iteration  11: 80.847 ops/ms
Iteration  12: 82.275 ops/ms
Iteration  13: 82.795 ops/ms
Iteration  14: 82.013 ops/ms
Iteration  15: 83.163 ops/ms
Iteration  16: 82.685 ops/ms
Iteration  17: 82.093 ops/ms
Iteration  18: 82.931 ops/ms
Iteration  19: 82.641 ops/ms
Iteration  20: 82.401 ops/ms

Result : 82.580 ?(95%) 0.245 ?(99%) 0.334 ops/ms
  Statistics: (min, avg, max) = (80.847, 82.580, 83.192), stdev = 0.523
  Confidence intervals: 95% [82.335, 82.825], 99% [82.246, 82.914]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 43.266 ops/ms
# Warmup Iteration   2: 66.187 ops/ms
# Warmup Iteration   3: 75.654 ops/ms
# Warmup Iteration   4: 80.704 ops/ms
# Warmup Iteration   5: 82.944 ops/ms
# Warmup Iteration   6: 82.335 ops/ms
# Warmup Iteration   7: 83.736 ops/ms
# Warmup Iteration   8: 83.298 ops/ms
# Warmup Iteration   9: 83.706 ops/ms
# Warmup Iteration  10: 83.294 ops/ms
# Warmup Iteration  11: 83.646 ops/ms
# Warmup Iteration  12: 83.239 ops/ms
# Warmup Iteration  13: 83.502 ops/ms
# Warmup Iteration  14: 83.401 ops/ms
# Warmup Iteration  15: 83.273 ops/ms
# Warmup Iteration  16: 83.292 ops/ms
# Warmup Iteration  17: 82.548 ops/ms
# Warmup Iteration  18: 83.338 ops/ms
# Warmup Iteration  19: 83.413 ops/ms
# Warmup Iteration  20: 83.160 ops/ms
Iteration   1: 83.432 ops/ms
Iteration   2: 83.094 ops/ms
Iteration   3: 82.525 ops/ms
Iteration   4: 83.525 ops/ms
Iteration   5: 82.470 ops/ms
Iteration   6: 82.590 ops/ms
Iteration   7: 83.438 ops/ms
Iteration   8: 83.503 ops/ms
Iteration   9: 82.651 ops/ms
Iteration  10: 83.621 ops/ms
Iteration  11: 83.276 ops/ms
Iteration  12: 82.531 ops/ms
Iteration  13: 83.109 ops/ms
Iteration  14: 83.443 ops/ms
Iteration  15: 83.521 ops/ms
Iteration  16: 83.592 ops/ms
Iteration  17: 82.773 ops/ms
Iteration  18: 83.627 ops/ms
Iteration  19: 83.465 ops/ms
Iteration  20: 83.349 ops/ms

Result : 83.177 ?(95%) 0.197 ?(99%) 0.270 ops/ms
  Statistics: (min, avg, max) = (82.470, 83.177, 83.627), stdev = 0.422
  Confidence intervals: 95% [82.979, 83.374], 99% [82.907, 83.447]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 44.377 ops/ms
# Warmup Iteration   2: 66.252 ops/ms
# Warmup Iteration   3: 75.822 ops/ms
# Warmup Iteration   4: 80.265 ops/ms
# Warmup Iteration   5: 81.950 ops/ms
# Warmup Iteration   6: 81.788 ops/ms
# Warmup Iteration   7: 82.117 ops/ms
# Warmup Iteration   8: 82.694 ops/ms
# Warmup Iteration   9: 82.098 ops/ms
# Warmup Iteration  10: 82.594 ops/ms
# Warmup Iteration  11: 82.204 ops/ms
# Warmup Iteration  12: 82.505 ops/ms
# Warmup Iteration  13: 82.428 ops/ms
# Warmup Iteration  14: 82.153 ops/ms
# Warmup Iteration  15: 82.707 ops/ms
# Warmup Iteration  16: 82.570 ops/ms
# Warmup Iteration  17: 82.356 ops/ms
# Warmup Iteration  18: 82.484 ops/ms
# Warmup Iteration  19: 82.818 ops/ms
# Warmup Iteration  20: 82.601 ops/ms
Iteration   1: 81.764 ops/ms
Iteration   2: 81.948 ops/ms
Iteration   3: 82.227 ops/ms
Iteration   4: 82.597 ops/ms
Iteration   5: 82.560 ops/ms
Iteration   6: 81.943 ops/ms
Iteration   7: 82.423 ops/ms
Iteration   8: 82.394 ops/ms
Iteration   9: 82.563 ops/ms
Iteration  10: 82.240 ops/ms
Iteration  11: 82.627 ops/ms
Iteration  12: 82.694 ops/ms
Iteration  13: 82.647 ops/ms
Iteration  14: 82.129 ops/ms
Iteration  15: 82.240 ops/ms
Iteration  16: 82.610 ops/ms
Iteration  17: 82.699 ops/ms
Iteration  18: 82.403 ops/ms
Iteration  19: 82.552 ops/ms
Iteration  20: 82.285 ops/ms

Result : 82.377 ?(95%) 0.128 ?(99%) 0.175 ops/ms
  Statistics: (min, avg, max) = (81.764, 82.377, 82.699), stdev = 0.274
  Confidence intervals: 95% [82.249, 82.505], 99% [82.202, 82.552]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable
# Warmup Iteration   1: 47.621 ops/ms
# Warmup Iteration   2: 69.055 ops/ms
# Warmup Iteration   3: 78.358 ops/ms
# Warmup Iteration   4: 83.844 ops/ms
# Warmup Iteration   5: 85.488 ops/ms
# Warmup Iteration   6: 85.214 ops/ms
# Warmup Iteration   7: 85.911 ops/ms
# Warmup Iteration   8: 86.190 ops/ms
# Warmup Iteration   9: 86.141 ops/ms
# Warmup Iteration  10: 85.841 ops/ms
# Warmup Iteration  11: 86.014 ops/ms
# Warmup Iteration  12: 85.718 ops/ms
# Warmup Iteration  13: 86.162 ops/ms
# Warmup Iteration  14: 85.069 ops/ms
# Warmup Iteration  15: 80.171 ops/ms
# Warmup Iteration  16: 81.666 ops/ms
# Warmup Iteration  17: 83.380 ops/ms
# Warmup Iteration  18: 85.430 ops/ms
# Warmup Iteration  19: 85.976 ops/ms
# Warmup Iteration  20: 85.396 ops/ms
Iteration   1: 85.366 ops/ms
Iteration   2: 85.475 ops/ms
Iteration   3: 82.505 ops/ms
Iteration   4: 84.449 ops/ms
Iteration   5: 84.683 ops/ms
Iteration   6: 84.944 ops/ms
Iteration   7: 84.487 ops/ms
Iteration   8: 85.171 ops/ms
Iteration   9: 85.883 ops/ms
Iteration  10: 85.711 ops/ms
Iteration  11: 85.540 ops/ms
Iteration  12: 85.106 ops/ms
Iteration  13: 86.053 ops/ms
Iteration  14: 84.848 ops/ms
Iteration  15: 85.301 ops/ms
Iteration  16: 85.322 ops/ms
Iteration  17: 86.027 ops/ms
Iteration  18: 85.504 ops/ms
Iteration  19: 85.572 ops/ms
Iteration  20: 85.186 ops/ms

Result : 85.157 ?(95%) 0.362 ?(99%) 0.495 ops/ms
  Statistics: (min, avg, max) = (82.505, 85.157, 86.053), stdev = 0.774
  Confidence intervals: 95% [84.794, 85.519], 99% [84.662, 85.652]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37214.348 ops/ms
# Warmup Iteration   2: 50506.896 ops/ms
# Warmup Iteration   3: 54923.466 ops/ms
# Warmup Iteration   4: 55577.868 ops/ms
# Warmup Iteration   5: 56319.316 ops/ms
# Warmup Iteration   6: 55467.171 ops/ms
# Warmup Iteration   7: 54475.142 ops/ms
# Warmup Iteration   8: 55231.467 ops/ms
# Warmup Iteration   9: 55419.430 ops/ms
# Warmup Iteration  10: 55861.097 ops/ms
# Warmup Iteration  11: 54534.401 ops/ms
# Warmup Iteration  12: 55862.698 ops/ms
# Warmup Iteration  13: 54660.204 ops/ms
# Warmup Iteration  14: 55209.443 ops/ms
# Warmup Iteration  15: 54231.356 ops/ms
# Warmup Iteration  16: 55923.696 ops/ms
# Warmup Iteration  17: 55692.788 ops/ms
# Warmup Iteration  18: 55891.470 ops/ms
# Warmup Iteration  19: 55400.962 ops/ms
# Warmup Iteration  20: 55682.090 ops/ms
Iteration   1: 55935.839 ops/ms
Iteration   2: 55808.455 ops/ms
Iteration   3: 55723.295 ops/ms
Iteration   4: 55507.581 ops/ms
Iteration   5: 55629.989 ops/ms
Iteration   6: 55505.991 ops/ms
Iteration   7: 55674.175 ops/ms
Iteration   8: 54454.075 ops/ms
Iteration   9: 55898.308 ops/ms
Iteration  10: 55665.192 ops/ms
Iteration  11: 54617.156 ops/ms
Iteration  12: 54666.560 ops/ms
Iteration  13: 55761.640 ops/ms
Iteration  14: 55071.538 ops/ms
Iteration  15: 55999.862 ops/ms
Iteration  16: 54612.811 ops/ms
Iteration  17: 55707.477 ops/ms
Iteration  18: 55535.448 ops/ms
Iteration  19: 55888.655 ops/ms
Iteration  20: 55094.643 ops/ms

Result : 55437.934 ?(95%) 232.964 ?(99%) 318.447 ops/ms
  Statistics: (min, avg, max) = (54454.075, 55437.934, 55999.862), stdev = 497.777
  Confidence intervals: 95% [55204.970, 55670.898], 99% [55119.487, 55756.382]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37647.401 ops/ms
# Warmup Iteration   2: 51622.135 ops/ms
# Warmup Iteration   3: 55628.498 ops/ms
# Warmup Iteration   4: 54575.532 ops/ms
# Warmup Iteration   5: 56028.239 ops/ms
# Warmup Iteration   6: 55935.557 ops/ms
# Warmup Iteration   7: 55387.607 ops/ms
# Warmup Iteration   8: 54290.646 ops/ms
# Warmup Iteration   9: 56243.498 ops/ms
# Warmup Iteration  10: 55930.972 ops/ms
# Warmup Iteration  11: 55916.336 ops/ms
# Warmup Iteration  12: 55105.254 ops/ms
# Warmup Iteration  13: 55422.586 ops/ms
# Warmup Iteration  14: 55698.407 ops/ms
# Warmup Iteration  15: 56107.446 ops/ms
# Warmup Iteration  16: 54885.331 ops/ms
# Warmup Iteration  17: 55796.815 ops/ms
# Warmup Iteration  18: 55541.565 ops/ms
# Warmup Iteration  19: 55131.565 ops/ms
# Warmup Iteration  20: 55778.323 ops/ms
Iteration   1: 55091.982 ops/ms
Iteration   2: 55629.199 ops/ms
Iteration   3: 55781.010 ops/ms
Iteration   4: 55819.684 ops/ms
Iteration   5: 55127.061 ops/ms
Iteration   6: 55809.294 ops/ms
Iteration   7: 56151.660 ops/ms
Iteration   8: 55100.179 ops/ms
Iteration   9: 54235.637 ops/ms
Iteration  10: 55919.678 ops/ms
Iteration  11: 54640.628 ops/ms
Iteration  12: 55995.252 ops/ms
Iteration  13: 54935.632 ops/ms
Iteration  14: 55992.324 ops/ms
Iteration  15: 55516.146 ops/ms
Iteration  16: 55014.638 ops/ms
Iteration  17: 54721.509 ops/ms
Iteration  18: 55917.374 ops/ms
Iteration  19: 55736.247 ops/ms
Iteration  20: 55979.035 ops/ms

Result : 55455.708 ?(95%) 257.800 ?(99%) 352.397 ops/ms
  Statistics: (min, avg, max) = (54235.637, 55455.708, 56151.660), stdev = 550.845
  Confidence intervals: 95% [55197.908, 55713.509], 99% [55103.311, 55808.105]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 36468.828 ops/ms
# Warmup Iteration   2: 51120.147 ops/ms
# Warmup Iteration   3: 55575.596 ops/ms
# Warmup Iteration   4: 55467.135 ops/ms
# Warmup Iteration   5: 54904.229 ops/ms
# Warmup Iteration   6: 55831.976 ops/ms
# Warmup Iteration   7: 55914.594 ops/ms
# Warmup Iteration   8: 55700.247 ops/ms
# Warmup Iteration   9: 55145.860 ops/ms
# Warmup Iteration  10: 55805.234 ops/ms
# Warmup Iteration  11: 55609.647 ops/ms
# Warmup Iteration  12: 55439.810 ops/ms
# Warmup Iteration  13: 54752.192 ops/ms
# Warmup Iteration  14: 55385.831 ops/ms
# Warmup Iteration  15: 55764.317 ops/ms
# Warmup Iteration  16: 55341.367 ops/ms
# Warmup Iteration  17: 55286.125 ops/ms
# Warmup Iteration  18: 55483.517 ops/ms
# Warmup Iteration  19: 55815.930 ops/ms
# Warmup Iteration  20: 56016.299 ops/ms
Iteration   1: 55314.908 ops/ms
Iteration   2: 55108.229 ops/ms
Iteration   3: 55249.991 ops/ms
Iteration   4: 55633.334 ops/ms
Iteration   5: 55303.812 ops/ms
Iteration   6: 54399.396 ops/ms
Iteration   7: 55740.711 ops/ms
Iteration   8: 55095.915 ops/ms
Iteration   9: 55041.866 ops/ms
Iteration  10: 55268.286 ops/ms
Iteration  11: 55365.648 ops/ms
Iteration  12: 55720.132 ops/ms
Iteration  13: 55683.652 ops/ms
Iteration  14: 54774.549 ops/ms
Iteration  15: 55343.139 ops/ms
Iteration  16: 55252.410 ops/ms
Iteration  17: 55880.052 ops/ms
Iteration  18: 54888.223 ops/ms
Iteration  19: 55566.973 ops/ms
Iteration  20: 55331.396 ops/ms

Result : 55298.131 ?(95%) 168.116 ?(99%) 229.804 ops/ms
  Statistics: (min, avg, max) = (54399.396, 55298.131, 55880.052), stdev = 359.215
  Confidence intervals: 95% [55130.015, 55466.247], 99% [55068.327, 55527.935]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37504.962 ops/ms
# Warmup Iteration   2: 50179.227 ops/ms
# Warmup Iteration   3: 55697.122 ops/ms
# Warmup Iteration   4: 56117.646 ops/ms
# Warmup Iteration   5: 55045.872 ops/ms
# Warmup Iteration   6: 54733.426 ops/ms
# Warmup Iteration   7: 55853.649 ops/ms
# Warmup Iteration   8: 55927.397 ops/ms
# Warmup Iteration   9: 55826.497 ops/ms
# Warmup Iteration  10: 54887.872 ops/ms
# Warmup Iteration  11: 55528.669 ops/ms
# Warmup Iteration  12: 56236.043 ops/ms
# Warmup Iteration  13: 55370.814 ops/ms
# Warmup Iteration  14: 55228.152 ops/ms
# Warmup Iteration  15: 55705.481 ops/ms
# Warmup Iteration  16: 55805.857 ops/ms
# Warmup Iteration  17: 55727.885 ops/ms
# Warmup Iteration  18: 55212.827 ops/ms
# Warmup Iteration  19: 55373.052 ops/ms
# Warmup Iteration  20: 55680.796 ops/ms
Iteration   1: 55564.627 ops/ms
Iteration   2: 54784.598 ops/ms
Iteration   3: 55223.101 ops/ms
Iteration   4: 55900.696 ops/ms
Iteration   5: 54493.705 ops/ms
Iteration   6: 55489.308 ops/ms
Iteration   7: 54788.453 ops/ms
Iteration   8: 55751.851 ops/ms
Iteration   9: 55794.683 ops/ms
Iteration  10: 55765.172 ops/ms
Iteration  11: 54120.957 ops/ms
Iteration  12: 55725.092 ops/ms
Iteration  13: 55408.011 ops/ms
Iteration  14: 55554.812 ops/ms
Iteration  15: 54469.843 ops/ms
Iteration  16: 55893.534 ops/ms
Iteration  17: 55647.696 ops/ms
Iteration  18: 55741.298 ops/ms
Iteration  19: 55021.877 ops/ms
Iteration  20: 55584.323 ops/ms

Result : 55336.182 ?(95%) 250.697 ?(99%) 342.687 ops/ms
  Statistics: (min, avg, max) = (54120.957, 55336.182, 55900.696), stdev = 535.667
  Confidence intervals: 95% [55085.485, 55586.879], 99% [54993.495, 55678.869]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor
# Warmup Iteration   1: 37305.136 ops/ms
# Warmup Iteration   2: 51131.745 ops/ms
# Warmup Iteration   3: 54782.368 ops/ms
# Warmup Iteration   4: 55806.960 ops/ms
# Warmup Iteration   5: 55509.822 ops/ms
# Warmup Iteration   6: 55773.936 ops/ms
# Warmup Iteration   7: 54771.737 ops/ms
# Warmup Iteration   8: 55551.828 ops/ms
# Warmup Iteration   9: 55857.733 ops/ms
# Warmup Iteration  10: 55388.135 ops/ms
# Warmup Iteration  11: 54693.171 ops/ms
# Warmup Iteration  12: 55576.655 ops/ms
# Warmup Iteration  13: 55094.569 ops/ms
# Warmup Iteration  14: 55307.208 ops/ms
# Warmup Iteration  15: 55166.924 ops/ms
# Warmup Iteration  16: 55748.058 ops/ms
# Warmup Iteration  17: 55770.392 ops/ms
# Warmup Iteration  18: 55736.830 ops/ms
# Warmup Iteration  19: 55926.532 ops/ms
# Warmup Iteration  20: 54492.511 ops/ms
Iteration   1: 55648.429 ops/ms
Iteration   2: 54605.585 ops/ms
Iteration   3: 55894.111 ops/ms
Iteration   4: 54515.237 ops/ms
Iteration   5: 54575.327 ops/ms
Iteration   6: 55949.878 ops/ms
Iteration   7: 56390.047 ops/ms
Iteration   8: 54811.750 ops/ms
Iteration   9: 55590.864 ops/ms
Iteration  10: 55753.677 ops/ms
Iteration  11: 55205.531 ops/ms
Iteration  12: 54988.956 ops/ms
Iteration  13: 55536.974 ops/ms
Iteration  14: 55932.864 ops/ms
Iteration  15: 55528.248 ops/ms
Iteration  16: 55008.877 ops/ms
Iteration  17: 55225.657 ops/ms
Iteration  18: 55609.423 ops/ms
Iteration  19: 55462.843 ops/ms
Iteration  20: 54904.981 ops/ms

Result : 55356.963 ?(95%) 243.778 ?(99%) 333.229 ops/ms
  Statistics: (min, avg, max) = (54515.237, 55356.963, 56390.047), stdev = 520.883
  Confidence intervals: 95% [55113.185, 55600.741], 99% [55023.733, 55690.192]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 798.423 ops/ms
# Warmup Iteration   2: 1223.467 ops/ms
# Warmup Iteration   3: 1226.386 ops/ms
# Warmup Iteration   4: 1075.962 ops/ms
# Warmup Iteration   5: 1222.562 ops/ms
# Warmup Iteration   6: 1221.656 ops/ms
# Warmup Iteration   7: 1232.376 ops/ms
# Warmup Iteration   8: 1217.186 ops/ms
# Warmup Iteration   9: 1227.366 ops/ms
# Warmup Iteration  10: 1231.003 ops/ms
# Warmup Iteration  11: 1225.929 ops/ms
# Warmup Iteration  12: 1221.132 ops/ms
# Warmup Iteration  13: 1237.861 ops/ms
# Warmup Iteration  14: 1232.751 ops/ms
# Warmup Iteration  15: 1233.718 ops/ms
# Warmup Iteration  16: 1224.262 ops/ms
# Warmup Iteration  17: 1225.393 ops/ms
# Warmup Iteration  18: 1221.962 ops/ms
# Warmup Iteration  19: 1219.626 ops/ms
# Warmup Iteration  20: 1216.181 ops/ms
Iteration   1: 1217.997 ops/ms
Iteration   2: 1223.988 ops/ms
Iteration   3: 1221.030 ops/ms
Iteration   4: 1220.496 ops/ms
Iteration   5: 1220.270 ops/ms
Iteration   6: 1215.186 ops/ms
Iteration   7: 1213.363 ops/ms
Iteration   8: 1222.547 ops/ms
Iteration   9: 1221.771 ops/ms
Iteration  10: 1217.784 ops/ms
Iteration  11: 1210.598 ops/ms
Iteration  12: 1213.450 ops/ms
Iteration  13: 1216.991 ops/ms
Iteration  14: 1224.539 ops/ms
Iteration  15: 1229.394 ops/ms
Iteration  16: 1224.572 ops/ms
Iteration  17: 1211.319 ops/ms
Iteration  18: 1223.527 ops/ms
Iteration  19: 1228.505 ops/ms
Iteration  20: 1228.197 ops/ms

Result : 1220.276 ?(95%) 2.628 ?(99%) 3.592 ops/ms
  Statistics: (min, avg, max) = (1210.598, 1220.276, 1229.394), stdev = 5.614
  Confidence intervals: 95% [1217.649, 1222.904], 99% [1216.684, 1223.868]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 765.049 ops/ms
# Warmup Iteration   2: 1324.498 ops/ms
# Warmup Iteration   3: 1249.446 ops/ms
# Warmup Iteration   4: 1241.148 ops/ms
# Warmup Iteration   5: 1309.305 ops/ms
# Warmup Iteration   6: 1328.728 ops/ms
# Warmup Iteration   7: 1324.569 ops/ms
# Warmup Iteration   8: 1319.378 ops/ms
# Warmup Iteration   9: 1310.217 ops/ms
# Warmup Iteration  10: 1321.932 ops/ms
# Warmup Iteration  11: 1329.587 ops/ms
# Warmup Iteration  12: 1312.745 ops/ms
# Warmup Iteration  13: 1322.090 ops/ms
# Warmup Iteration  14: 1325.803 ops/ms
# Warmup Iteration  15: 1318.633 ops/ms
# Warmup Iteration  16: 1325.652 ops/ms
# Warmup Iteration  17: 1312.648 ops/ms
# Warmup Iteration  18: 1323.981 ops/ms
# Warmup Iteration  19: 1311.968 ops/ms
# Warmup Iteration  20: 1316.342 ops/ms
Iteration   1: 1312.806 ops/ms
Iteration   2: 1328.788 ops/ms
Iteration   3: 1325.567 ops/ms
Iteration   4: 1330.481 ops/ms
Iteration   5: 1321.205 ops/ms
Iteration   6: 1328.141 ops/ms
Iteration   7: 1316.619 ops/ms
Iteration   8: 1318.480 ops/ms
Iteration   9: 1329.206 ops/ms
Iteration  10: 1302.206 ops/ms
Iteration  11: 1320.478 ops/ms
Iteration  12: 1326.152 ops/ms
Iteration  13: 1311.212 ops/ms
Iteration  14: 1316.235 ops/ms
Iteration  15: 1315.079 ops/ms
Iteration  16: 1320.972 ops/ms
Iteration  17: 1317.230 ops/ms
Iteration  18: 1312.974 ops/ms
Iteration  19: 1321.588 ops/ms
Iteration  20: 1320.985 ops/ms

Result : 1319.820 ?(95%) 3.339 ?(99%) 4.564 ops/ms
  Statistics: (min, avg, max) = (1302.206, 1319.820, 1330.481), stdev = 7.135
  Confidence intervals: 95% [1316.481, 1323.159], 99% [1315.256, 1324.385]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 812.679 ops/ms
# Warmup Iteration   2: 1268.111 ops/ms
# Warmup Iteration   3: 1200.973 ops/ms
# Warmup Iteration   4: 1195.529 ops/ms
# Warmup Iteration   5: 1279.853 ops/ms
# Warmup Iteration   6: 1281.314 ops/ms
# Warmup Iteration   7: 1279.026 ops/ms
# Warmup Iteration   8: 1272.378 ops/ms
# Warmup Iteration   9: 1273.992 ops/ms
# Warmup Iteration  10: 1269.044 ops/ms
# Warmup Iteration  11: 1266.754 ops/ms
# Warmup Iteration  12: 1281.697 ops/ms
# Warmup Iteration  13: 1274.138 ops/ms
# Warmup Iteration  14: 1272.198 ops/ms
# Warmup Iteration  15: 1283.194 ops/ms
# Warmup Iteration  16: 1268.876 ops/ms
# Warmup Iteration  17: 1275.140 ops/ms
# Warmup Iteration  18: 1269.267 ops/ms
# Warmup Iteration  19: 1289.456 ops/ms
# Warmup Iteration  20: 1283.606 ops/ms
Iteration   1: 1281.763 ops/ms
Iteration   2: 1277.198 ops/ms
Iteration   3: 1287.314 ops/ms
Iteration   4: 1281.884 ops/ms
Iteration   5: 1286.231 ops/ms
Iteration   6: 1295.071 ops/ms
Iteration   7: 1281.596 ops/ms
Iteration   8: 1295.046 ops/ms
Iteration   9: 1293.045 ops/ms
Iteration  10: 1289.980 ops/ms
Iteration  11: 1282.543 ops/ms
Iteration  12: 1280.976 ops/ms
Iteration  13: 1292.169 ops/ms
Iteration  14: 1287.708 ops/ms
Iteration  15: 1281.235 ops/ms
Iteration  16: 1285.173 ops/ms
Iteration  17: 1279.721 ops/ms
Iteration  18: 1282.977 ops/ms
Iteration  19: 1272.316 ops/ms
Iteration  20: 1290.505 ops/ms

Result : 1285.223 ?(95%) 2.858 ?(99%) 3.907 ops/ms
  Statistics: (min, avg, max) = (1272.316, 1285.223, 1295.071), stdev = 6.107
  Confidence intervals: 95% [1282.364, 1288.081], 99% [1281.315, 1289.130]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 802.016 ops/ms
# Warmup Iteration   2: 1248.404 ops/ms
# Warmup Iteration   3: 1257.638 ops/ms
# Warmup Iteration   4: 1114.303 ops/ms
# Warmup Iteration   5: 1277.261 ops/ms
# Warmup Iteration   6: 1269.579 ops/ms
# Warmup Iteration   7: 1264.139 ops/ms
# Warmup Iteration   8: 1275.267 ops/ms
# Warmup Iteration   9: 1270.046 ops/ms
# Warmup Iteration  10: 1272.460 ops/ms
# Warmup Iteration  11: 1262.974 ops/ms
# Warmup Iteration  12: 1264.513 ops/ms
# Warmup Iteration  13: 1275.324 ops/ms
# Warmup Iteration  14: 1269.668 ops/ms
# Warmup Iteration  15: 1248.970 ops/ms
# Warmup Iteration  16: 1279.990 ops/ms
# Warmup Iteration  17: 1273.715 ops/ms
# Warmup Iteration  18: 1265.802 ops/ms
# Warmup Iteration  19: 1264.887 ops/ms
# Warmup Iteration  20: 1267.881 ops/ms
Iteration   1: 1262.313 ops/ms
Iteration   2: 1273.870 ops/ms
Iteration   3: 1280.091 ops/ms
Iteration   4: 1267.245 ops/ms
Iteration   5: 920.938 ops/ms
Iteration   6: 1214.001 ops/ms
Iteration   7: 1200.039 ops/ms
Iteration   8: 1237.366 ops/ms
Iteration   9: 1262.343 ops/ms
Iteration  10: 1272.101 ops/ms
Iteration  11: 1271.808 ops/ms
Iteration  12: 1254.565 ops/ms
Iteration  13: 1277.016 ops/ms
Iteration  14: 1237.373 ops/ms
Iteration  15: 1256.287 ops/ms
Iteration  16: 1259.750 ops/ms
Iteration  17: 1271.611 ops/ms
Iteration  18: 1271.500 ops/ms
Iteration  19: 1265.422 ops/ms
Iteration  20: 1256.098 ops/ms

Result : 1240.587 ?(95%) 36.529 ?(99%) 49.933 ops/ms
  Statistics: (min, avg, max) = (920.938, 1240.587, 1280.091), stdev = 78.052
  Confidence intervals: 95% [1204.058, 1277.116], 99% [1190.654, 1290.520]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 765.399 ops/ms
# Warmup Iteration   2: 1295.380 ops/ms
# Warmup Iteration   3: 1239.586 ops/ms
# Warmup Iteration   4: 1229.864 ops/ms
# Warmup Iteration   5: 1314.720 ops/ms
# Warmup Iteration   6: 1305.561 ops/ms
# Warmup Iteration   7: 1302.634 ops/ms
# Warmup Iteration   8: 1289.973 ops/ms
# Warmup Iteration   9: 1307.156 ops/ms
# Warmup Iteration  10: 1303.495 ops/ms
# Warmup Iteration  11: 1308.252 ops/ms
# Warmup Iteration  12: 1292.279 ops/ms
# Warmup Iteration  13: 1312.769 ops/ms
# Warmup Iteration  14: 1302.939 ops/ms
# Warmup Iteration  15: 1316.865 ops/ms
# Warmup Iteration  16: 1308.639 ops/ms
# Warmup Iteration  17: 1323.357 ops/ms
# Warmup Iteration  18: 1310.942 ops/ms
# Warmup Iteration  19: 1321.360 ops/ms
# Warmup Iteration  20: 1316.087 ops/ms
Iteration   1: 1301.118 ops/ms
Iteration   2: 1306.954 ops/ms
Iteration   3: 1320.737 ops/ms
Iteration   4: 1320.899 ops/ms
Iteration   5: 1317.271 ops/ms
Iteration   6: 1306.268 ops/ms
Iteration   7: 1313.493 ops/ms
Iteration   8: 1310.457 ops/ms
Iteration   9: 1302.698 ops/ms
Iteration  10: 1316.044 ops/ms
Iteration  11: 1315.918 ops/ms
Iteration  12: 1313.776 ops/ms
Iteration  13: 1304.923 ops/ms
Iteration  14: 1316.480 ops/ms
Iteration  15: 1307.447 ops/ms
Iteration  16: 1306.770 ops/ms
Iteration  17: 1311.878 ops/ms
Iteration  18: 1314.746 ops/ms
Iteration  19: 1314.707 ops/ms
Iteration  20: 1320.735 ops/ms

Result : 1312.166 ?(95%) 2.830 ?(99%) 3.869 ops/ms
  Statistics: (min, avg, max) = (1301.118, 1312.166, 1320.899), stdev = 6.048
  Confidence intervals: 95% [1309.336, 1314.996], 99% [1308.297, 1316.035]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1277.645 ops/ms
# Warmup Iteration   2: 1595.373 ops/ms
# Warmup Iteration   3: 1642.955 ops/ms
# Warmup Iteration   4: 1655.917 ops/ms
# Warmup Iteration   5: 1664.812 ops/ms
# Warmup Iteration   6: 1668.800 ops/ms
# Warmup Iteration   7: 1674.483 ops/ms
# Warmup Iteration   8: 1676.250 ops/ms
# Warmup Iteration   9: 1658.871 ops/ms
# Warmup Iteration  10: 1667.743 ops/ms
# Warmup Iteration  11: 1676.318 ops/ms
# Warmup Iteration  12: 1669.068 ops/ms
# Warmup Iteration  13: 1664.875 ops/ms
# Warmup Iteration  14: 1669.864 ops/ms
# Warmup Iteration  15: 1679.360 ops/ms
# Warmup Iteration  16: 1677.907 ops/ms
# Warmup Iteration  17: 1660.955 ops/ms
# Warmup Iteration  18: 1672.820 ops/ms
# Warmup Iteration  19: 1666.304 ops/ms
# Warmup Iteration  20: 1674.080 ops/ms
Iteration   1: 1659.505 ops/ms
Iteration   2: 1665.777 ops/ms
Iteration   3: 1673.624 ops/ms
Iteration   4: 1667.533 ops/ms
Iteration   5: 1655.546 ops/ms
Iteration   6: 1663.317 ops/ms
Iteration   7: 1672.920 ops/ms
Iteration   8: 1671.406 ops/ms
Iteration   9: 1671.680 ops/ms
Iteration  10: 1665.195 ops/ms
Iteration  11: 1674.985 ops/ms
Iteration  12: 1672.151 ops/ms
Iteration  13: 1668.458 ops/ms
Iteration  14: 1662.126 ops/ms
Iteration  15: 1659.877 ops/ms
Iteration  16: 1665.889 ops/ms
Iteration  17: 1674.509 ops/ms
Iteration  18: 1667.061 ops/ms
Iteration  19: 1666.708 ops/ms
Iteration  20: 1674.832 ops/ms

Result : 1667.655 ?(95%) 2.638 ?(99%) 3.606 ops/ms
  Statistics: (min, avg, max) = (1655.546, 1667.655, 1674.985), stdev = 5.636
  Confidence intervals: 95% [1665.017, 1670.293], 99% [1664.049, 1671.261]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1326.464 ops/ms
# Warmup Iteration   2: 1687.550 ops/ms
# Warmup Iteration   3: 1728.749 ops/ms
# Warmup Iteration   4: 1759.776 ops/ms
# Warmup Iteration   5: 1770.452 ops/ms
# Warmup Iteration   6: 1756.681 ops/ms
# Warmup Iteration   7: 1772.380 ops/ms
# Warmup Iteration   8: 1776.541 ops/ms
# Warmup Iteration   9: 1771.013 ops/ms
# Warmup Iteration  10: 1762.358 ops/ms
# Warmup Iteration  11: 1776.999 ops/ms
# Warmup Iteration  12: 1776.905 ops/ms
# Warmup Iteration  13: 1775.671 ops/ms
# Warmup Iteration  14: 1764.880 ops/ms
# Warmup Iteration  15: 1776.373 ops/ms
# Warmup Iteration  16: 1777.669 ops/ms
# Warmup Iteration  17: 1774.986 ops/ms
# Warmup Iteration  18: 1770.222 ops/ms
# Warmup Iteration  19: 1774.598 ops/ms
# Warmup Iteration  20: 1782.763 ops/ms
Iteration   1: 1783.694 ops/ms
Iteration   2: 1775.586 ops/ms
Iteration   3: 1780.749 ops/ms
Iteration   4: 1774.056 ops/ms
Iteration   5: 1781.274 ops/ms
Iteration   6: 1769.776 ops/ms
Iteration   7: 1780.334 ops/ms
Iteration   8: 1774.771 ops/ms
Iteration   9: 1780.054 ops/ms
Iteration  10: 1769.106 ops/ms
Iteration  11: 1780.987 ops/ms
Iteration  12: 1783.155 ops/ms
Iteration  13: 1776.887 ops/ms
Iteration  14: 1774.056 ops/ms
Iteration  15: 1766.711 ops/ms
Iteration  16: 1771.500 ops/ms
Iteration  17: 1782.302 ops/ms
Iteration  18: 1771.504 ops/ms
Iteration  19: 1766.996 ops/ms
Iteration  20: 1782.120 ops/ms

Result : 1776.281 ?(95%) 2.631 ?(99%) 3.597 ops/ms
  Statistics: (min, avg, max) = (1766.711, 1776.281, 1783.694), stdev = 5.622
  Confidence intervals: 95% [1773.650, 1778.912], 99% [1772.684, 1779.878]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1326.547 ops/ms
# Warmup Iteration   2: 1679.141 ops/ms
# Warmup Iteration   3: 1667.794 ops/ms
# Warmup Iteration   4: 1700.439 ops/ms
# Warmup Iteration   5: 1725.381 ops/ms
# Warmup Iteration   6: 1727.797 ops/ms
# Warmup Iteration   7: 1713.280 ops/ms
# Warmup Iteration   8: 1710.400 ops/ms
# Warmup Iteration   9: 1723.188 ops/ms
# Warmup Iteration  10: 1710.551 ops/ms
# Warmup Iteration  11: 1708.539 ops/ms
# Warmup Iteration  12: 1710.318 ops/ms
# Warmup Iteration  13: 1719.460 ops/ms
# Warmup Iteration  14: 1723.414 ops/ms
# Warmup Iteration  15: 1706.231 ops/ms
# Warmup Iteration  16: 1713.612 ops/ms
# Warmup Iteration  17: 1768.562 ops/ms
# Warmup Iteration  18: 1767.306 ops/ms
# Warmup Iteration  19: 1769.455 ops/ms
# Warmup Iteration  20: 1766.723 ops/ms
Iteration   1: 1773.111 ops/ms
Iteration   2: 1771.552 ops/ms
Iteration   3: 1769.478 ops/ms
Iteration   4: 1773.418 ops/ms
Iteration   5: 1773.734 ops/ms
Iteration   6: 1775.026 ops/ms
Iteration   7: 1767.632 ops/ms
Iteration   8: 1770.460 ops/ms
Iteration   9: 1774.294 ops/ms
Iteration  10: 1766.848 ops/ms
Iteration  11: 1774.939 ops/ms
Iteration  12: 1766.458 ops/ms
Iteration  13: 1767.100 ops/ms
Iteration  14: 1773.861 ops/ms
Iteration  15: 1773.960 ops/ms
Iteration  16: 1761.716 ops/ms
Iteration  17: 1773.578 ops/ms
Iteration  18: 1767.673 ops/ms
Iteration  19: 1775.224 ops/ms
Iteration  20: 1768.607 ops/ms

Result : 1770.934 ?(95%) 1.771 ?(99%) 2.421 ops/ms
  Statistics: (min, avg, max) = (1761.716, 1770.934, 1775.224), stdev = 3.784
  Confidence intervals: 95% [1769.163, 1772.704], 99% [1768.513, 1773.354]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1282.327 ops/ms
# Warmup Iteration   2: 1672.431 ops/ms
# Warmup Iteration   3: 1733.306 ops/ms
# Warmup Iteration   4: 1723.749 ops/ms
# Warmup Iteration   5: 1695.355 ops/ms
# Warmup Iteration   6: 1699.679 ops/ms
# Warmup Iteration   7: 1699.795 ops/ms
# Warmup Iteration   8: 1700.594 ops/ms
# Warmup Iteration   9: 1701.689 ops/ms
# Warmup Iteration  10: 1692.322 ops/ms
# Warmup Iteration  11: 1708.598 ops/ms
# Warmup Iteration  12: 1687.277 ops/ms
# Warmup Iteration  13: 1708.279 ops/ms
# Warmup Iteration  14: 1713.209 ops/ms
# Warmup Iteration  15: 1698.347 ops/ms
# Warmup Iteration  16: 1704.528 ops/ms
# Warmup Iteration  17: 1735.717 ops/ms
# Warmup Iteration  18: 1746.316 ops/ms
# Warmup Iteration  19: 1738.555 ops/ms
# Warmup Iteration  20: 1741.304 ops/ms
Iteration   1: 1746.236 ops/ms
Iteration   2: 1737.958 ops/ms
Iteration   3: 1746.646 ops/ms
Iteration   4: 1745.718 ops/ms
Iteration   5: 1729.371 ops/ms
Iteration   6: 1737.034 ops/ms
Iteration   7: 1738.020 ops/ms
Iteration   8: 1743.788 ops/ms
Iteration   9: 1739.514 ops/ms
Iteration  10: 1736.774 ops/ms
Iteration  11: 1744.829 ops/ms
Iteration  12: 1743.789 ops/ms
Iteration  13: 1735.175 ops/ms
Iteration  14: 1743.662 ops/ms
Iteration  15: 1738.964 ops/ms
Iteration  16: 1745.506 ops/ms
Iteration  17: 1741.057 ops/ms
Iteration  18: 1736.344 ops/ms
Iteration  19: 1742.658 ops/ms
Iteration  20: 1735.795 ops/ms

Result : 1740.442 ?(95%) 2.179 ?(99%) 2.978 ops/ms
  Statistics: (min, avg, max) = (1729.371, 1740.442, 1746.646), stdev = 4.655
  Confidence intervals: 95% [1738.263, 1742.620], 99% [1737.464, 1743.420]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 1241.581 ops/ms
# Warmup Iteration   2: 1637.885 ops/ms
# Warmup Iteration   3: 1627.721 ops/ms
# Warmup Iteration   4: 1724.079 ops/ms
# Warmup Iteration   5: 1728.331 ops/ms
# Warmup Iteration   6: 1724.618 ops/ms
# Warmup Iteration   7: 1741.074 ops/ms
# Warmup Iteration   8: 1738.487 ops/ms
# Warmup Iteration   9: 1725.442 ops/ms
# Warmup Iteration  10: 1732.663 ops/ms
# Warmup Iteration  11: 1741.629 ops/ms
# Warmup Iteration  12: 1737.739 ops/ms
# Warmup Iteration  13: 1737.128 ops/ms
# Warmup Iteration  14: 1735.344 ops/ms
# Warmup Iteration  15: 1734.066 ops/ms
# Warmup Iteration  16: 1741.694 ops/ms
# Warmup Iteration  17: 1714.212 ops/ms
# Warmup Iteration  18: 1749.435 ops/ms
# Warmup Iteration  19: 1751.417 ops/ms
# Warmup Iteration  20: 1751.346 ops/ms
Iteration   1: 1743.901 ops/ms
Iteration   2: 1751.142 ops/ms
Iteration   3: 1745.806 ops/ms
Iteration   4: 1740.734 ops/ms
Iteration   5: 1745.393 ops/ms
Iteration   6: 1755.064 ops/ms
Iteration   7: 1753.374 ops/ms
Iteration   8: 1745.629 ops/ms
Iteration   9: 1743.324 ops/ms
Iteration  10: 1739.763 ops/ms
Iteration  11: 1745.091 ops/ms
Iteration  12: 1752.127 ops/ms
Iteration  13: 1754.921 ops/ms
Iteration  14: 1741.377 ops/ms
Iteration  15: 1741.479 ops/ms
Iteration  16: 1752.528 ops/ms
Iteration  17: 1745.727 ops/ms
Iteration  18: 1748.440 ops/ms
Iteration  19: 1745.889 ops/ms
Iteration  20: 1752.095 ops/ms

Result : 1747.190 ?(95%) 2.300 ?(99%) 3.144 ops/ms
  Statistics: (min, avg, max) = (1739.763, 1747.190, 1755.064), stdev = 4.915
  Confidence intervals: 95% [1744.890, 1749.490], 99% [1744.046, 1750.334]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1200.201 ops/ms
# Warmup Iteration   2: 2130.801 ops/ms
# Warmup Iteration   3: 2293.862 ops/ms
# Warmup Iteration   4: 2308.088 ops/ms
# Warmup Iteration   5: 2267.077 ops/ms
# Warmup Iteration   6: 2256.356 ops/ms
# Warmup Iteration   7: 2267.196 ops/ms
# Warmup Iteration   8: 2274.027 ops/ms
# Warmup Iteration   9: 2270.424 ops/ms
# Warmup Iteration  10: 2257.499 ops/ms
# Warmup Iteration  11: 2252.423 ops/ms
# Warmup Iteration  12: 2258.807 ops/ms
# Warmup Iteration  13: 2258.917 ops/ms
# Warmup Iteration  14: 2259.689 ops/ms
# Warmup Iteration  15: 2266.240 ops/ms
# Warmup Iteration  16: 2273.570 ops/ms
# Warmup Iteration  17: 2292.265 ops/ms
# Warmup Iteration  18: 2292.065 ops/ms
# Warmup Iteration  19: 2292.851 ops/ms
# Warmup Iteration  20: 2290.995 ops/ms
Iteration   1: 2296.227 ops/ms
Iteration   2: 2302.048 ops/ms
Iteration   3: 2306.670 ops/ms
Iteration   4: 2298.932 ops/ms
Iteration   5: 2290.004 ops/ms
Iteration   6: 2288.157 ops/ms
Iteration   7: 2304.346 ops/ms
Iteration   8: 2297.500 ops/ms
Iteration   9: 2307.431 ops/ms
Iteration  10: 2291.414 ops/ms
Iteration  11: 2282.996 ops/ms
Iteration  12: 2298.465 ops/ms
Iteration  13: 2310.982 ops/ms
Iteration  14: 2306.100 ops/ms
Iteration  15: 2292.374 ops/ms
Iteration  16: 2306.222 ops/ms
Iteration  17: 2305.728 ops/ms
Iteration  18: 2305.802 ops/ms
Iteration  19: 2301.723 ops/ms
Iteration  20: 2318.438 ops/ms

Result : 2300.578 ?(95%) 4.028 ?(99%) 5.506 ops/ms
  Statistics: (min, avg, max) = (2282.996, 2300.578, 2318.438), stdev = 8.606
  Confidence intervals: 95% [2296.550, 2304.606], 99% [2295.072, 2306.084]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1345.709 ops/ms
# Warmup Iteration   2: 1961.806 ops/ms
# Warmup Iteration   3: 2148.413 ops/ms
# Warmup Iteration   4: 2133.564 ops/ms
# Warmup Iteration   5: 2171.376 ops/ms
# Warmup Iteration   6: 2172.001 ops/ms
# Warmup Iteration   7: 2202.912 ops/ms
# Warmup Iteration   8: 2212.834 ops/ms
# Warmup Iteration   9: 2207.267 ops/ms
# Warmup Iteration  10: 2187.102 ops/ms
# Warmup Iteration  11: 2185.303 ops/ms
# Warmup Iteration  12: 2215.147 ops/ms
# Warmup Iteration  13: 2199.543 ops/ms
# Warmup Iteration  14: 2190.132 ops/ms
# Warmup Iteration  15: 2187.412 ops/ms
# Warmup Iteration  16: 2202.846 ops/ms
# Warmup Iteration  17: 2166.054 ops/ms
# Warmup Iteration  18: 2166.977 ops/ms
# Warmup Iteration  19: 2153.343 ops/ms
# Warmup Iteration  20: 2172.586 ops/ms
Iteration   1: 2161.962 ops/ms
Iteration   2: 2171.909 ops/ms
Iteration   3: 2156.320 ops/ms
Iteration   4: 2168.531 ops/ms
Iteration   5: 2160.246 ops/ms
Iteration   6: 2171.610 ops/ms
Iteration   7: 2145.325 ops/ms
Iteration   8: 2160.261 ops/ms
Iteration   9: 2170.757 ops/ms
Iteration  10: 2160.872 ops/ms
Iteration  11: 2174.112 ops/ms
Iteration  12: 2156.507 ops/ms
Iteration  13: 2170.616 ops/ms
Iteration  14: 2162.333 ops/ms
Iteration  15: 2161.283 ops/ms
Iteration  16: 2159.321 ops/ms
Iteration  17: 2162.822 ops/ms
Iteration  18: 2160.146 ops/ms
Iteration  19: 2169.821 ops/ms
Iteration  20: 2153.946 ops/ms

Result : 2162.935 ?(95%) 3.394 ?(99%) 4.639 ops/ms
  Statistics: (min, avg, max) = (2145.325, 2162.935, 2174.112), stdev = 7.252
  Confidence intervals: 95% [2159.541, 2166.329], 99% [2158.296, 2167.574]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1379.063 ops/ms
# Warmup Iteration   2: 1939.758 ops/ms
# Warmup Iteration   3: 2229.904 ops/ms
# Warmup Iteration   4: 2272.372 ops/ms
# Warmup Iteration   5: 2166.492 ops/ms
# Warmup Iteration   6: 2161.008 ops/ms
# Warmup Iteration   7: 2181.928 ops/ms
# Warmup Iteration   8: 2183.683 ops/ms
# Warmup Iteration   9: 2171.526 ops/ms
# Warmup Iteration  10: 2161.645 ops/ms
# Warmup Iteration  11: 2174.977 ops/ms
# Warmup Iteration  12: 2164.918 ops/ms
# Warmup Iteration  13: 2169.049 ops/ms
# Warmup Iteration  14: 2172.385 ops/ms
# Warmup Iteration  15: 2184.270 ops/ms
# Warmup Iteration  16: 2173.116 ops/ms
# Warmup Iteration  17: 2265.784 ops/ms
# Warmup Iteration  18: 2245.506 ops/ms
# Warmup Iteration  19: 2244.719 ops/ms
# Warmup Iteration  20: 2241.089 ops/ms
Iteration   1: 2268.305 ops/ms
Iteration   2: 2248.509 ops/ms
Iteration   3: 2241.231 ops/ms
Iteration   4: 2254.050 ops/ms
Iteration   5: 2237.654 ops/ms
Iteration   6: 2249.793 ops/ms
Iteration   7: 2248.318 ops/ms
Iteration   8: 2231.289 ops/ms
Iteration   9: 2245.291 ops/ms
Iteration  10: 2247.881 ops/ms
Iteration  11: 2248.447 ops/ms
Iteration  12: 2241.944 ops/ms
Iteration  13: 2240.321 ops/ms
Iteration  14: 2267.460 ops/ms
Iteration  15: 2249.920 ops/ms
Iteration  16: 2249.216 ops/ms
Iteration  17: 2236.669 ops/ms
Iteration  18: 2249.105 ops/ms
Iteration  19: 2238.745 ops/ms
Iteration  20: 2248.688 ops/ms

Result : 2247.142 ?(95%) 4.258 ?(99%) 5.820 ops/ms
  Statistics: (min, avg, max) = (2231.289, 2247.142, 2268.305), stdev = 9.098
  Confidence intervals: 95% [2242.884, 2251.400], 99% [2241.322, 2252.962]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1420.550 ops/ms
# Warmup Iteration   2: 2101.749 ops/ms
# Warmup Iteration   3: 2498.098 ops/ms
# Warmup Iteration   4: 2536.480 ops/ms
# Warmup Iteration   5: 2594.545 ops/ms
# Warmup Iteration   6: 2590.433 ops/ms
# Warmup Iteration   7: 2607.712 ops/ms
# Warmup Iteration   8: 2596.815 ops/ms
# Warmup Iteration   9: 2572.615 ops/ms
# Warmup Iteration  10: 2578.030 ops/ms
# Warmup Iteration  11: 2520.011 ops/ms
# Warmup Iteration  12: 2543.169 ops/ms
# Warmup Iteration  13: 2483.144 ops/ms
# Warmup Iteration  14: 2546.759 ops/ms
# Warmup Iteration  15: 2521.105 ops/ms
# Warmup Iteration  16: 2501.332 ops/ms
# Warmup Iteration  17: 2514.360 ops/ms
# Warmup Iteration  18: 2577.176 ops/ms
# Warmup Iteration  19: 2505.742 ops/ms
# Warmup Iteration  20: 2573.958 ops/ms
Iteration   1: 2573.249 ops/ms
Iteration   2: 2636.313 ops/ms
Iteration   3: 2607.599 ops/ms
Iteration   4: 2629.052 ops/ms
Iteration   5: 2610.408 ops/ms
Iteration   6: 2619.325 ops/ms
Iteration   7: 2603.983 ops/ms
Iteration   8: 2622.787 ops/ms
Iteration   9: 2615.033 ops/ms
Iteration  10: 2613.331 ops/ms
Iteration  11: 2624.398 ops/ms
Iteration  12: 2612.296 ops/ms
Iteration  13: 2622.023 ops/ms
Iteration  14: 2607.518 ops/ms
Iteration  15: 2597.027 ops/ms
Iteration  16: 2609.198 ops/ms
Iteration  17: 2615.387 ops/ms
Iteration  18: 2622.703 ops/ms
Iteration  19: 2622.317 ops/ms
Iteration  20: 2623.214 ops/ms

Result : 2614.358 ?(95%) 6.264 ?(99%) 8.563 ops/ms
  Statistics: (min, avg, max) = (2573.249, 2614.358, 2636.313), stdev = 13.385
  Confidence intervals: 95% [2608.094, 2620.622], 99% [2605.795, 2622.921]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1633.347 ops/ms
# Warmup Iteration   2: 2700.652 ops/ms
# Warmup Iteration   3: 2916.159 ops/ms
# Warmup Iteration   4: 2939.024 ops/ms
# Warmup Iteration   5: 2953.306 ops/ms
# Warmup Iteration   6: 2968.306 ops/ms
# Warmup Iteration   7: 2990.292 ops/ms
# Warmup Iteration   8: 2999.615 ops/ms
# Warmup Iteration   9: 2989.911 ops/ms
# Warmup Iteration  10: 2984.740 ops/ms
# Warmup Iteration  11: 2989.227 ops/ms
# Warmup Iteration  12: 2987.589 ops/ms
# Warmup Iteration  13: 2982.085 ops/ms
# Warmup Iteration  14: 2967.094 ops/ms
# Warmup Iteration  15: 2989.083 ops/ms
# Warmup Iteration  16: 2997.458 ops/ms
# Warmup Iteration  17: 3006.575 ops/ms
# Warmup Iteration  18: 3002.152 ops/ms
# Warmup Iteration  19: 3004.550 ops/ms
# Warmup Iteration  20: 3004.261 ops/ms
Iteration   1: 3020.431 ops/ms
Iteration   2: 3007.913 ops/ms
Iteration   3: 3007.698 ops/ms
Iteration   4: 3015.389 ops/ms
Iteration   5: 3004.720 ops/ms
Iteration   6: 2985.740 ops/ms
Iteration   7: 3004.567 ops/ms
Iteration   8: 3003.591 ops/ms
Iteration   9: 3021.360 ops/ms
Iteration  10: 2986.293 ops/ms
Iteration  11: 2988.229 ops/ms
Iteration  12: 3008.048 ops/ms
Iteration  13: 3013.784 ops/ms
Iteration  14: 2997.707 ops/ms
Iteration  15: 3014.641 ops/ms
Iteration  16: 2992.438 ops/ms
Iteration  17: 3028.894 ops/ms
Iteration  18: 3002.394 ops/ms
Iteration  19: 3010.722 ops/ms
Iteration  20: 3009.412 ops/ms

Result : 3006.198 ?(95%) 5.501 ?(99%) 7.520 ops/ms
  Statistics: (min, avg, max) = (2985.740, 3006.198, 3028.894), stdev = 11.755
  Confidence intervals: 95% [3000.697, 3011.700], 99% [2998.678, 3013.719]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1528.196 ops/ms
# Warmup Iteration   2: 2516.313 ops/ms
# Warmup Iteration   3: 2701.960 ops/ms
# Warmup Iteration   4: 2651.999 ops/ms
# Warmup Iteration   5: 2628.610 ops/ms
# Warmup Iteration   6: 2640.998 ops/ms
# Warmup Iteration   7: 2691.216 ops/ms
# Warmup Iteration   8: 2691.213 ops/ms
# Warmup Iteration   9: 2662.995 ops/ms
# Warmup Iteration  10: 2654.947 ops/ms
# Warmup Iteration  11: 2663.166 ops/ms
# Warmup Iteration  12: 2651.811 ops/ms
# Warmup Iteration  13: 2663.329 ops/ms
# Warmup Iteration  14: 2644.015 ops/ms
# Warmup Iteration  15: 2679.792 ops/ms
# Warmup Iteration  16: 2667.337 ops/ms
# Warmup Iteration  17: 2719.600 ops/ms
# Warmup Iteration  18: 2715.719 ops/ms
# Warmup Iteration  19: 2724.807 ops/ms
# Warmup Iteration  20: 2717.637 ops/ms
Iteration   1: 2738.923 ops/ms
Iteration   2: 2721.357 ops/ms
Iteration   3: 2746.430 ops/ms
Iteration   4: 2726.698 ops/ms
Iteration   5: 2724.690 ops/ms
Iteration   6: 2723.450 ops/ms
Iteration   7: 2716.674 ops/ms
Iteration   8: 2726.367 ops/ms
Iteration   9: 2725.095 ops/ms
Iteration  10: 2717.196 ops/ms
Iteration  11: 2721.272 ops/ms
Iteration  12: 2725.209 ops/ms
Iteration  13: 2724.790 ops/ms
Iteration  14: 2728.431 ops/ms
Iteration  15: 2718.379 ops/ms
Iteration  16: 2725.827 ops/ms
Iteration  17: 2725.414 ops/ms
Iteration  18: 2745.434 ops/ms
Iteration  19: 2717.138 ops/ms
Iteration  20: 2724.672 ops/ms

Result : 2726.172 ?(95%) 3.910 ?(99%) 5.345 ops/ms
  Statistics: (min, avg, max) = (2716.674, 2726.172, 2746.430), stdev = 8.355
  Confidence intervals: 95% [2722.262, 2730.082], 99% [2720.827, 2731.517]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1461.471 ops/ms
# Warmup Iteration   2: 2216.199 ops/ms
# Warmup Iteration   3: 2149.633 ops/ms
# Warmup Iteration   4: 2177.797 ops/ms
# Warmup Iteration   5: 2174.338 ops/ms
# Warmup Iteration   6: 2173.931 ops/ms
# Warmup Iteration   7: 2182.398 ops/ms
# Warmup Iteration   8: 2182.699 ops/ms
# Warmup Iteration   9: 2162.731 ops/ms
# Warmup Iteration  10: 2169.222 ops/ms
# Warmup Iteration  11: 2154.446 ops/ms
# Warmup Iteration  12: 2183.055 ops/ms
# Warmup Iteration  13: 2171.466 ops/ms
# Warmup Iteration  14: 2176.198 ops/ms
# Warmup Iteration  15: 2163.218 ops/ms
# Warmup Iteration  16: 2186.192 ops/ms
# Warmup Iteration  17: 2240.112 ops/ms
# Warmup Iteration  18: 2209.158 ops/ms
# Warmup Iteration  19: 2220.241 ops/ms
# Warmup Iteration  20: 2216.945 ops/ms
Iteration   1: 2210.228 ops/ms
Iteration   2: 2218.136 ops/ms
Iteration   3: 2218.507 ops/ms
Iteration   4: 2234.532 ops/ms
Iteration   5: 2207.996 ops/ms
Iteration   6: 2218.751 ops/ms
Iteration   7: 2217.993 ops/ms
Iteration   8: 2207.964 ops/ms
Iteration   9: 2217.723 ops/ms
Iteration  10: 2208.153 ops/ms
Iteration  11: 2216.283 ops/ms
Iteration  12: 2227.459 ops/ms
Iteration  13: 2211.236 ops/ms
Iteration  14: 2218.891 ops/ms
Iteration  15: 2211.064 ops/ms
Iteration  16: 2209.902 ops/ms
Iteration  17: 2218.047 ops/ms
Iteration  18: 2219.331 ops/ms
Iteration  19: 2196.018 ops/ms
Iteration  20: 2137.972 ops/ms

Result : 2211.309 ?(95%) 8.905 ?(99%) 12.173 ops/ms
  Statistics: (min, avg, max) = (2137.972, 2211.309, 2234.532), stdev = 19.028
  Confidence intervals: 95% [2202.404, 2220.215], 99% [2199.136, 2223.482]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1493.240 ops/ms
# Warmup Iteration   2: 2243.252 ops/ms
# Warmup Iteration   3: 2377.398 ops/ms
# Warmup Iteration   4: 2415.261 ops/ms
# Warmup Iteration   5: 2394.823 ops/ms
# Warmup Iteration   6: 2424.701 ops/ms
# Warmup Iteration   7: 2390.630 ops/ms
# Warmup Iteration   8: 2424.022 ops/ms
# Warmup Iteration   9: 2477.629 ops/ms
# Warmup Iteration  10: 2467.295 ops/ms
# Warmup Iteration  11: 2487.304 ops/ms
# Warmup Iteration  12: 2462.282 ops/ms
# Warmup Iteration  13: 2472.603 ops/ms
# Warmup Iteration  14: 2508.897 ops/ms
# Warmup Iteration  15: 2496.609 ops/ms
# Warmup Iteration  16: 2458.100 ops/ms
# Warmup Iteration  17: 2518.967 ops/ms
# Warmup Iteration  18: 2537.191 ops/ms
# Warmup Iteration  19: 2534.403 ops/ms
# Warmup Iteration  20: 2503.232 ops/ms
Iteration   1: 2520.268 ops/ms
Iteration   2: 2508.387 ops/ms
Iteration   3: 2494.612 ops/ms
Iteration   4: 2513.139 ops/ms
Iteration   5: 2529.131 ops/ms
Iteration   6: 2504.496 ops/ms
Iteration   7: 2504.393 ops/ms
Iteration   8: 2498.819 ops/ms
Iteration   9: 2506.947 ops/ms
Iteration  10: 2503.889 ops/ms
Iteration  11: 2516.671 ops/ms
Iteration  12: 2515.139 ops/ms
Iteration  13: 2485.255 ops/ms
Iteration  14: 2501.281 ops/ms
Iteration  15: 2514.618 ops/ms
Iteration  16: 2502.183 ops/ms
Iteration  17: 2496.333 ops/ms
Iteration  18: 2513.826 ops/ms
Iteration  19: 2516.387 ops/ms
Iteration  20: 2504.127 ops/ms

Result : 2507.495 ?(95%) 4.738 ?(99%) 6.476 ops/ms
  Statistics: (min, avg, max) = (2485.255, 2507.495, 2529.131), stdev = 10.123
  Confidence intervals: 95% [2502.757, 2512.233], 99% [2501.019, 2513.971]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1343.710 ops/ms
# Warmup Iteration   2: 2077.752 ops/ms
# Warmup Iteration   3: 2036.801 ops/ms
# Warmup Iteration   4: 2071.845 ops/ms
# Warmup Iteration   5: 2040.878 ops/ms
# Warmup Iteration   6: 2035.343 ops/ms
# Warmup Iteration   7: 2035.979 ops/ms
# Warmup Iteration   8: 2059.858 ops/ms
# Warmup Iteration   9: 2037.871 ops/ms
# Warmup Iteration  10: 2036.905 ops/ms
# Warmup Iteration  11: 2037.571 ops/ms
# Warmup Iteration  12: 2039.215 ops/ms
# Warmup Iteration  13: 2041.546 ops/ms
# Warmup Iteration  14: 2037.674 ops/ms
# Warmup Iteration  15: 2047.149 ops/ms
# Warmup Iteration  16: 2035.035 ops/ms
# Warmup Iteration  17: 2065.243 ops/ms
# Warmup Iteration  18: 2074.803 ops/ms
# Warmup Iteration  19: 2061.108 ops/ms
# Warmup Iteration  20: 2063.339 ops/ms
Iteration   1: 2054.661 ops/ms
Iteration   2: 2051.807 ops/ms
Iteration   3: 2064.640 ops/ms
Iteration   4: 2054.432 ops/ms
Iteration   5: 2059.105 ops/ms
Iteration   6: 2062.367 ops/ms
Iteration   7: 2049.544 ops/ms
Iteration   8: 2063.931 ops/ms
Iteration   9: 2064.206 ops/ms
Iteration  10: 2047.140 ops/ms
Iteration  11: 2062.440 ops/ms
Iteration  12: 2063.277 ops/ms
Iteration  13: 2063.957 ops/ms
Iteration  14: 2057.809 ops/ms
Iteration  15: 2050.665 ops/ms
Iteration  16: 2056.306 ops/ms
Iteration  17: 2054.892 ops/ms
Iteration  18: 2045.015 ops/ms
Iteration  19: 2055.416 ops/ms
Iteration  20: 2061.659 ops/ms

Result : 2057.163 ?(95%) 2.869 ?(99%) 3.921 ops/ms
  Statistics: (min, avg, max) = (2045.015, 2057.163, 2064.640), stdev = 6.129
  Confidence intervals: 95% [2054.295, 2060.032], 99% [2053.242, 2061.085]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1416.476 ops/ms
# Warmup Iteration   2: 2652.939 ops/ms
# Warmup Iteration   3: 2730.134 ops/ms
# Warmup Iteration   4: 2705.216 ops/ms
# Warmup Iteration   5: 2699.331 ops/ms
# Warmup Iteration   6: 2722.329 ops/ms
# Warmup Iteration   7: 2766.727 ops/ms
# Warmup Iteration   8: 2767.490 ops/ms
# Warmup Iteration   9: 2751.106 ops/ms
# Warmup Iteration  10: 2704.101 ops/ms
# Warmup Iteration  11: 2729.471 ops/ms
# Warmup Iteration  12: 2758.952 ops/ms
# Warmup Iteration  13: 2737.398 ops/ms
# Warmup Iteration  14: 2718.324 ops/ms
# Warmup Iteration  15: 2753.891 ops/ms
# Warmup Iteration  16: 2739.030 ops/ms
# Warmup Iteration  17: 2797.798 ops/ms
# Warmup Iteration  18: 2799.824 ops/ms
# Warmup Iteration  19: 2785.439 ops/ms
# Warmup Iteration  20: 2778.997 ops/ms
Iteration   1: 2791.370 ops/ms
Iteration   2: 2789.506 ops/ms
Iteration   3: 2788.221 ops/ms
Iteration   4: 2788.119 ops/ms
Iteration   5: 2784.021 ops/ms
Iteration   6: 2777.023 ops/ms
Iteration   7: 2777.711 ops/ms
Iteration   8: 2789.943 ops/ms
Iteration   9: 2789.507 ops/ms
Iteration  10: 2775.638 ops/ms
Iteration  11: 2779.803 ops/ms
Iteration  12: 2788.870 ops/ms
Iteration  13: 2787.922 ops/ms
Iteration  14: 2790.938 ops/ms
Iteration  15: 2804.639 ops/ms
Iteration  16: 2806.718 ops/ms
Iteration  17: 2821.178 ops/ms
Iteration  18: 2779.327 ops/ms
Iteration  19: 2779.748 ops/ms
Iteration  20: 2780.329 ops/ms

Result : 2788.526 ?(95%) 5.277 ?(99%) 7.214 ops/ms
  Statistics: (min, avg, max) = (2775.638, 2788.526, 2821.178), stdev = 11.276
  Confidence intervals: 95% [2783.249, 2793.804], 99% [2781.313, 2795.740]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 474.225 ops/ms
# Warmup Iteration   2: 840.246 ops/ms
# Warmup Iteration   3: 1017.559 ops/ms
# Warmup Iteration   4: 991.804 ops/ms
# Warmup Iteration   5: 1022.034 ops/ms
# Warmup Iteration   6: 1014.107 ops/ms
# Warmup Iteration   7: 910.964 ops/ms
# Warmup Iteration   8: 969.694 ops/ms
# Warmup Iteration   9: 995.995 ops/ms
# Warmup Iteration  10: 997.533 ops/ms
# Warmup Iteration  11: 1002.093 ops/ms
# Warmup Iteration  12: 1008.822 ops/ms
# Warmup Iteration  13: 1009.108 ops/ms
# Warmup Iteration  14: 1005.579 ops/ms
# Warmup Iteration  15: 1004.022 ops/ms
# Warmup Iteration  16: 1008.061 ops/ms
# Warmup Iteration  17: 1015.301 ops/ms
# Warmup Iteration  18: 1025.959 ops/ms
# Warmup Iteration  19: 1013.816 ops/ms
# Warmup Iteration  20: 1017.156 ops/ms
Iteration   1: 1020.355 ops/ms
Iteration   2: 1021.568 ops/ms
Iteration   3: 1013.896 ops/ms
Iteration   4: 1022.631 ops/ms
Iteration   5: 1025.013 ops/ms
Iteration   6: 1021.577 ops/ms
Iteration   7: 1018.430 ops/ms
Iteration   8: 1025.361 ops/ms
Iteration   9: 1025.277 ops/ms
Iteration  10: 1025.355 ops/ms
Iteration  11: 1017.494 ops/ms
Iteration  12: 1026.154 ops/ms
Iteration  13: 1026.225 ops/ms
Iteration  14: 1016.741 ops/ms
Iteration  15: 1022.135 ops/ms
Iteration  16: 1020.829 ops/ms
Iteration  17: 1021.323 ops/ms
Iteration  18: 1021.076 ops/ms
Iteration  19: 1021.315 ops/ms
Iteration  20: 1021.595 ops/ms

Result : 1021.717 ?(95%) 1.553 ?(99%) 2.122 ops/ms
  Statistics: (min, avg, max) = (1013.896, 1021.717, 1026.225), stdev = 3.317
  Confidence intervals: 95% [1020.165, 1023.270], 99% [1019.595, 1023.840]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 485.146 ops/ms
# Warmup Iteration   2: 990.330 ops/ms
# Warmup Iteration   3: 1217.967 ops/ms
# Warmup Iteration   4: 1214.328 ops/ms
# Warmup Iteration   5: 1200.527 ops/ms
# Warmup Iteration   6: 1198.118 ops/ms
# Warmup Iteration   7: 994.637 ops/ms
# Warmup Iteration   8: 1163.359 ops/ms
# Warmup Iteration   9: 1180.563 ops/ms
# Warmup Iteration  10: 1171.980 ops/ms
# Warmup Iteration  11: 1171.358 ops/ms
# Warmup Iteration  12: 1175.171 ops/ms
# Warmup Iteration  13: 1182.960 ops/ms
# Warmup Iteration  14: 1177.020 ops/ms
# Warmup Iteration  15: 1175.240 ops/ms
# Warmup Iteration  16: 1169.795 ops/ms
# Warmup Iteration  17: 1233.734 ops/ms
# Warmup Iteration  18: 1235.499 ops/ms
# Warmup Iteration  19: 1233.215 ops/ms
# Warmup Iteration  20: 1230.808 ops/ms
Iteration   1: 1231.362 ops/ms
Iteration   2: 1234.983 ops/ms
Iteration   3: 1238.058 ops/ms
Iteration   4: 1237.217 ops/ms
Iteration   5: 1240.487 ops/ms
Iteration   6: 1233.072 ops/ms
Iteration   7: 1241.478 ops/ms
Iteration   8: 1229.254 ops/ms
Iteration   9: 1226.630 ops/ms
Iteration  10: 1231.613 ops/ms
Iteration  11: 1235.422 ops/ms
Iteration  12: 1230.344 ops/ms
Iteration  13: 1225.687 ops/ms
Iteration  14: 1241.145 ops/ms
Iteration  15: 1236.600 ops/ms
Iteration  16: 1237.903 ops/ms
Iteration  17: 1226.277 ops/ms
Iteration  18: 1231.482 ops/ms
Iteration  19: 1234.729 ops/ms
Iteration  20: 1226.007 ops/ms

Result : 1233.488 ?(95%) 2.398 ?(99%) 3.278 ops/ms
  Statistics: (min, avg, max) = (1225.687, 1233.488, 1241.478), stdev = 5.124
  Confidence intervals: 95% [1231.090, 1235.886], 99% [1230.210, 1236.765]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 503.252 ops/ms
# Warmup Iteration   2: 1037.099 ops/ms
# Warmup Iteration   3: 1275.860 ops/ms
# Warmup Iteration   4: 1294.234 ops/ms
# Warmup Iteration   5: 1282.810 ops/ms
# Warmup Iteration   6: 1287.233 ops/ms
# Warmup Iteration   7: 1062.337 ops/ms
# Warmup Iteration   8: 1273.765 ops/ms
# Warmup Iteration   9: 1275.307 ops/ms
# Warmup Iteration  10: 1279.822 ops/ms
# Warmup Iteration  11: 1281.808 ops/ms
# Warmup Iteration  12: 1278.731 ops/ms
# Warmup Iteration  13: 1288.961 ops/ms
# Warmup Iteration  14: 1276.126 ops/ms
# Warmup Iteration  15: 1276.478 ops/ms
# Warmup Iteration  16: 1278.592 ops/ms
# Warmup Iteration  17: 1301.467 ops/ms
# Warmup Iteration  18: 1312.204 ops/ms
# Warmup Iteration  19: 1296.263 ops/ms
# Warmup Iteration  20: 1298.742 ops/ms
Iteration   1: 1290.948 ops/ms
Iteration   2: 1300.039 ops/ms
Iteration   3: 1291.967 ops/ms
Iteration   4: 1301.305 ops/ms
Iteration   5: 1286.801 ops/ms
Iteration   6: 1300.798 ops/ms
Iteration   7: 1296.079 ops/ms
Iteration   8: 1306.080 ops/ms
Iteration   9: 1290.537 ops/ms
Iteration  10: 1294.044 ops/ms
Iteration  11: 1301.371 ops/ms
Iteration  12: 1291.920 ops/ms
Iteration  13: 1296.950 ops/ms
Iteration  14: 1289.204 ops/ms
Iteration  15: 1302.143 ops/ms
Iteration  16: 1299.346 ops/ms
Iteration  17: 1286.653 ops/ms
Iteration  18: 1296.222 ops/ms
Iteration  19: 1295.072 ops/ms
Iteration  20: 1301.944 ops/ms

Result : 1295.971 ?(95%) 2.617 ?(99%) 3.578 ops/ms
  Statistics: (min, avg, max) = (1286.653, 1295.971, 1306.080), stdev = 5.593
  Confidence intervals: 95% [1293.354, 1298.589], 99% [1292.393, 1299.549]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 482.002 ops/ms
# Warmup Iteration   2: 894.977 ops/ms
# Warmup Iteration   3: 1090.106 ops/ms
# Warmup Iteration   4: 1089.936 ops/ms
# Warmup Iteration   5: 1112.191 ops/ms
# Warmup Iteration   6: 1112.112 ops/ms
# Warmup Iteration   7: 967.926 ops/ms
# Warmup Iteration   8: 1100.511 ops/ms
# Warmup Iteration   9: 1127.520 ops/ms
# Warmup Iteration  10: 1126.613 ops/ms
# Warmup Iteration  11: 1117.914 ops/ms
# Warmup Iteration  12: 1134.464 ops/ms
# Warmup Iteration  13: 1119.841 ops/ms
# Warmup Iteration  14: 1116.769 ops/ms
# Warmup Iteration  15: 1129.364 ops/ms
# Warmup Iteration  16: 1128.791 ops/ms
# Warmup Iteration  17: 1135.044 ops/ms
# Warmup Iteration  18: 1144.314 ops/ms
# Warmup Iteration  19: 1147.107 ops/ms
# Warmup Iteration  20: 1142.350 ops/ms
Iteration   1: 1142.963 ops/ms
Iteration   2: 1140.235 ops/ms
Iteration   3: 1142.879 ops/ms
Iteration   4: 1142.336 ops/ms
Iteration   5: 1137.618 ops/ms
Iteration   6: 1137.315 ops/ms
Iteration   7: 1146.904 ops/ms
Iteration   8: 1147.508 ops/ms
Iteration   9: 1141.866 ops/ms
Iteration  10: 1143.626 ops/ms
Iteration  11: 1146.204 ops/ms
Iteration  12: 1138.464 ops/ms
Iteration  13: 1141.247 ops/ms
Iteration  14: 1142.434 ops/ms
Iteration  15: 1149.424 ops/ms
Iteration  16: 1142.951 ops/ms
Iteration  17: 1137.206 ops/ms
Iteration  18: 1138.737 ops/ms
Iteration  19: 1138.983 ops/ms
Iteration  20: 1140.337 ops/ms

Result : 1141.962 ?(95%) 1.648 ?(99%) 2.252 ops/ms
  Statistics: (min, avg, max) = (1137.206, 1141.962, 1149.424), stdev = 3.521
  Confidence intervals: 95% [1140.314, 1143.610], 99% [1139.709, 1144.214]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 465.700 ops/ms
# Warmup Iteration   2: 858.288 ops/ms
# Warmup Iteration   3: 1088.957 ops/ms
# Warmup Iteration   4: 1078.645 ops/ms
# Warmup Iteration   5: 1096.256 ops/ms
# Warmup Iteration   6: 1086.325 ops/ms
# Warmup Iteration   7: 945.837 ops/ms
# Warmup Iteration   8: 1033.458 ops/ms
# Warmup Iteration   9: 1087.145 ops/ms
# Warmup Iteration  10: 1080.562 ops/ms
# Warmup Iteration  11: 1080.963 ops/ms
# Warmup Iteration  12: 1091.686 ops/ms
# Warmup Iteration  13: 1082.397 ops/ms
# Warmup Iteration  14: 1076.902 ops/ms
# Warmup Iteration  15: 1082.446 ops/ms
# Warmup Iteration  16: 1086.173 ops/ms
# Warmup Iteration  17: 1109.288 ops/ms
# Warmup Iteration  18: 1104.212 ops/ms
# Warmup Iteration  19: 1114.136 ops/ms
# Warmup Iteration  20: 1105.657 ops/ms
Iteration   1: 1113.470 ops/ms
Iteration   2: 1105.399 ops/ms
Iteration   3: 1108.565 ops/ms
Iteration   4: 1109.291 ops/ms
Iteration   5: 1112.273 ops/ms
Iteration   6: 1112.876 ops/ms
Iteration   7: 1112.226 ops/ms
Iteration   8: 1113.674 ops/ms
Iteration   9: 1104.018 ops/ms
Iteration  10: 1101.115 ops/ms
Iteration  11: 1096.678 ops/ms
Iteration  12: 1105.610 ops/ms
Iteration  13: 1113.332 ops/ms
Iteration  14: 1108.775 ops/ms
Iteration  15: 1101.448 ops/ms
Iteration  16: 1107.788 ops/ms
Iteration  17: 1117.925 ops/ms
Iteration  18: 1109.989 ops/ms
Iteration  19: 1104.038 ops/ms
Iteration  20: 1107.180 ops/ms

Result : 1108.283 ?(95%) 2.442 ?(99%) 3.338 ops/ms
  Statistics: (min, avg, max) = (1096.678, 1108.283, 1117.925), stdev = 5.217
  Confidence intervals: 95% [1105.842, 1110.725], 99% [1104.946, 1111.621]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60776.872 ops/ms
# Warmup Iteration   2: 90262.924 ops/ms
# Warmup Iteration   3: 93127.724 ops/ms
# Warmup Iteration   4: 93071.715 ops/ms
# Warmup Iteration   5: 93375.077 ops/ms
# Warmup Iteration   6: 91851.857 ops/ms
# Warmup Iteration   7: 93079.644 ops/ms
# Warmup Iteration   8: 92822.910 ops/ms
# Warmup Iteration   9: 93068.059 ops/ms
# Warmup Iteration  10: 92795.647 ops/ms
# Warmup Iteration  11: 90750.290 ops/ms
# Warmup Iteration  12: 93595.394 ops/ms
# Warmup Iteration  13: 95192.454 ops/ms
# Warmup Iteration  14: 93871.434 ops/ms
# Warmup Iteration  15: 89708.312 ops/ms
# Warmup Iteration  16: 93189.830 ops/ms
# Warmup Iteration  17: 94284.141 ops/ms
# Warmup Iteration  18: 94267.427 ops/ms
# Warmup Iteration  19: 89731.905 ops/ms
# Warmup Iteration  20: 93850.002 ops/ms
Iteration   1: 93308.960 ops/ms
Iteration   2: 94213.609 ops/ms
Iteration   3: 90754.303 ops/ms
Iteration   4: 93580.702 ops/ms
Iteration   5: 94503.304 ops/ms
Iteration   6: 94099.928 ops/ms
Iteration   7: 90493.439 ops/ms
Iteration   8: 93033.223 ops/ms
Iteration   9: 92078.625 ops/ms
Iteration  10: 94313.765 ops/ms
Iteration  11: 92788.627 ops/ms
Iteration  12: 92544.169 ops/ms
Iteration  13: 92820.366 ops/ms
Iteration  14: 92501.523 ops/ms
Iteration  15: 92823.084 ops/ms
Iteration  16: 92806.227 ops/ms
Iteration  17: 92980.780 ops/ms
Iteration  18: 93181.802 ops/ms
Iteration  19: 93523.911 ops/ms
Iteration  20: 89125.658 ops/ms

Result : 92773.800 ?(95%) 627.666 ?(99%) 857.979 ops/ms
  Statistics: (min, avg, max) = (89125.658, 92773.800, 94503.304), stdev = 1341.140
  Confidence intervals: 95% [92146.135, 93401.466], 99% [91915.821, 93631.780]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 62005.784 ops/ms
# Warmup Iteration   2: 89801.315 ops/ms
# Warmup Iteration   3: 92800.561 ops/ms
# Warmup Iteration   4: 91535.013 ops/ms
# Warmup Iteration   5: 93006.326 ops/ms
# Warmup Iteration   6: 93631.415 ops/ms
# Warmup Iteration   7: 93381.795 ops/ms
# Warmup Iteration   8: 90670.144 ops/ms
# Warmup Iteration   9: 93920.833 ops/ms
# Warmup Iteration  10: 92629.206 ops/ms
# Warmup Iteration  11: 93695.979 ops/ms
# Warmup Iteration  12: 90256.975 ops/ms
# Warmup Iteration  13: 92526.298 ops/ms
# Warmup Iteration  14: 93371.834 ops/ms
# Warmup Iteration  15: 92501.486 ops/ms
# Warmup Iteration  16: 89870.409 ops/ms
# Warmup Iteration  17: 91881.359 ops/ms
# Warmup Iteration  18: 93495.286 ops/ms
# Warmup Iteration  19: 93564.150 ops/ms
# Warmup Iteration  20: 90100.083 ops/ms
Iteration   1: 94199.476 ops/ms
Iteration   2: 92539.261 ops/ms
Iteration   3: 91383.830 ops/ms
Iteration   4: 87346.749 ops/ms
Iteration   5: 89136.951 ops/ms
Iteration   6: 89903.644 ops/ms
Iteration   7: 93066.687 ops/ms
Iteration   8: 92271.575 ops/ms
Iteration   9: 93908.173 ops/ms
Iteration  10: 93565.154 ops/ms
Iteration  11: 92716.547 ops/ms
Iteration  12: 91585.478 ops/ms
Iteration  13: 91557.305 ops/ms
Iteration  14: 92797.318 ops/ms
Iteration  15: 92475.352 ops/ms
Iteration  16: 93513.222 ops/ms
Iteration  17: 92975.728 ops/ms
Iteration  18: 92770.353 ops/ms
Iteration  19: 93808.695 ops/ms
Iteration  20: 93081.320 ops/ms

Result : 92230.141 ?(95%) 803.578 ?(99%) 1098.441 ops/ms
  Statistics: (min, avg, max) = (87346.749, 92230.141, 94199.476), stdev = 1717.015
  Confidence intervals: 95% [91426.563, 93033.719], 99% [91131.700, 93328.582]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61659.491 ops/ms
# Warmup Iteration   2: 90658.431 ops/ms
# Warmup Iteration   3: 93079.723 ops/ms
# Warmup Iteration   4: 93250.770 ops/ms
# Warmup Iteration   5: 90049.783 ops/ms
# Warmup Iteration   6: 93597.728 ops/ms
# Warmup Iteration   7: 94364.256 ops/ms
# Warmup Iteration   8: 94505.024 ops/ms
# Warmup Iteration   9: 88896.156 ops/ms
# Warmup Iteration  10: 92940.794 ops/ms
# Warmup Iteration  11: 93593.373 ops/ms
# Warmup Iteration  12: 93188.599 ops/ms
# Warmup Iteration  13: 90199.355 ops/ms
# Warmup Iteration  14: 94421.148 ops/ms
# Warmup Iteration  15: 94404.238 ops/ms
# Warmup Iteration  16: 93858.828 ops/ms
# Warmup Iteration  17: 89818.138 ops/ms
# Warmup Iteration  18: 93910.724 ops/ms
# Warmup Iteration  19: 93649.706 ops/ms
# Warmup Iteration  20: 92783.749 ops/ms
Iteration   1: 91001.453 ops/ms
Iteration   2: 93226.743 ops/ms
Iteration   3: 93864.492 ops/ms
Iteration   4: 92959.449 ops/ms
Iteration   5: 91712.731 ops/ms
Iteration   6: 92694.310 ops/ms
Iteration   7: 93407.794 ops/ms
Iteration   8: 93022.876 ops/ms
Iteration   9: 92960.693 ops/ms
Iteration  10: 91872.175 ops/ms
Iteration  11: 94037.278 ops/ms
Iteration  12: 92862.559 ops/ms
Iteration  13: 93756.386 ops/ms
Iteration  14: 90329.469 ops/ms
Iteration  15: 93857.802 ops/ms
Iteration  16: 93947.500 ops/ms
Iteration  17: 93393.910 ops/ms
Iteration  18: 89833.296 ops/ms
Iteration  19: 93435.859 ops/ms
Iteration  20: 92144.830 ops/ms

Result : 92716.080 ?(95%) 567.227 ?(99%) 775.364 ops/ms
  Statistics: (min, avg, max) = (89833.296, 92716.080, 94037.278), stdev = 1212.001
  Confidence intervals: 95% [92148.853, 93283.308], 99% [91940.716, 93491.445]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 60710.893 ops/ms
# Warmup Iteration   2: 86469.221 ops/ms
# Warmup Iteration   3: 93109.821 ops/ms
# Warmup Iteration   4: 94142.090 ops/ms
# Warmup Iteration   5: 93253.022 ops/ms
# Warmup Iteration   6: 90179.454 ops/ms
# Warmup Iteration   7: 93514.464 ops/ms
# Warmup Iteration   8: 94365.783 ops/ms
# Warmup Iteration   9: 93191.838 ops/ms
# Warmup Iteration  10: 90246.032 ops/ms
# Warmup Iteration  11: 92915.331 ops/ms
# Warmup Iteration  12: 93268.563 ops/ms
# Warmup Iteration  13: 93527.068 ops/ms
# Warmup Iteration  14: 90245.321 ops/ms
# Warmup Iteration  15: 92976.373 ops/ms
# Warmup Iteration  16: 91768.175 ops/ms
# Warmup Iteration  17: 92473.757 ops/ms
# Warmup Iteration  18: 90910.085 ops/ms
# Warmup Iteration  19: 92060.494 ops/ms
# Warmup Iteration  20: 92979.650 ops/ms
Iteration   1: 93824.021 ops/ms
Iteration   2: 90999.313 ops/ms
Iteration   3: 93794.760 ops/ms
Iteration   4: 93833.153 ops/ms
Iteration   5: 94452.260 ops/ms
Iteration   6: 92438.065 ops/ms
Iteration   7: 92388.491 ops/ms
Iteration   8: 92947.764 ops/ms
Iteration   9: 94442.030 ops/ms
Iteration  10: 93695.953 ops/ms
Iteration  11: 92276.340 ops/ms
Iteration  12: 92846.740 ops/ms
Iteration  13: 93343.543 ops/ms
Iteration  14: 92367.031 ops/ms
Iteration  15: 90341.070 ops/ms
Iteration  16: 93303.062 ops/ms
Iteration  17: 92724.301 ops/ms
Iteration  18: 93806.824 ops/ms
Iteration  19: 91493.848 ops/ms
Iteration  20: 94195.132 ops/ms

Result : 92975.685 ?(95%) 526.133 ?(99%) 719.191 ops/ms
  Statistics: (min, avg, max) = (90341.070, 92975.685, 94452.260), stdev = 1124.194
  Confidence intervals: 95% [92449.552, 93501.818], 99% [92256.494, 93694.876]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone
# Warmup Iteration   1: 61310.957 ops/ms
# Warmup Iteration   2: 90167.975 ops/ms
# Warmup Iteration   3: 90316.885 ops/ms
# Warmup Iteration   4: 92051.632 ops/ms
# Warmup Iteration   5: 92413.267 ops/ms
# Warmup Iteration   6: 94149.112 ops/ms
# Warmup Iteration   7: 90783.531 ops/ms
# Warmup Iteration   8: 93812.715 ops/ms
# Warmup Iteration   9: 93796.717 ops/ms
# Warmup Iteration  10: 93590.523 ops/ms
# Warmup Iteration  11: 91271.577 ops/ms
# Warmup Iteration  12: 92955.888 ops/ms
# Warmup Iteration  13: 94197.065 ops/ms
# Warmup Iteration  14: 93659.652 ops/ms
# Warmup Iteration  15: 91158.775 ops/ms
# Warmup Iteration  16: 93192.978 ops/ms
# Warmup Iteration  17: 93208.931 ops/ms
# Warmup Iteration  18: 93257.090 ops/ms
# Warmup Iteration  19: 90358.125 ops/ms
# Warmup Iteration  20: 92876.816 ops/ms
Iteration   1: 92868.235 ops/ms
Iteration   2: 92954.943 ops/ms
Iteration   3: 92741.654 ops/ms
Iteration   4: 93904.626 ops/ms
Iteration   5: 93580.440 ops/ms
Iteration   6: 92438.644 ops/ms
Iteration   7: 92954.039 ops/ms
Iteration   8: 91459.864 ops/ms
Iteration   9: 92408.570 ops/ms
Iteration  10: 93617.411 ops/ms
Iteration  11: 92555.017 ops/ms
Iteration  12: 89330.517 ops/ms
Iteration  13: 92915.934 ops/ms
Iteration  14: 92657.143 ops/ms
Iteration  15: 93367.917 ops/ms
Iteration  16: 90332.252 ops/ms
Iteration  17: 93386.775 ops/ms
Iteration  18: 93694.052 ops/ms
Iteration  19: 94398.332 ops/ms
Iteration  20: 89870.739 ops/ms

Result : 92571.855 ?(95%) 629.865 ?(99%) 860.986 ops/ms
  Statistics: (min, avg, max) = (89330.517, 92571.855, 94398.332), stdev = 1345.839
  Confidence intervals: 95% [91941.991, 93201.720], 99% [91710.870, 93432.841]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 22.517 ops/ms
# Warmup Iteration   2: 33.281 ops/ms
# Warmup Iteration   3: 37.425 ops/ms
# Warmup Iteration   4: 40.122 ops/ms
# Warmup Iteration   5: 41.358 ops/ms
# Warmup Iteration   6: 41.569 ops/ms
# Warmup Iteration   7: 41.596 ops/ms
# Warmup Iteration   8: 41.754 ops/ms
# Warmup Iteration   9: 41.668 ops/ms
# Warmup Iteration  10: 41.809 ops/ms
# Warmup Iteration  11: 41.548 ops/ms
# Warmup Iteration  12: 41.336 ops/ms
# Warmup Iteration  13: 41.665 ops/ms
# Warmup Iteration  14: 41.798 ops/ms
# Warmup Iteration  15: 41.867 ops/ms
# Warmup Iteration  16: 41.590 ops/ms
# Warmup Iteration  17: 41.625 ops/ms
# Warmup Iteration  18: 41.479 ops/ms
# Warmup Iteration  19: 41.225 ops/ms
# Warmup Iteration  20: 41.513 ops/ms
Iteration   1: 41.628 ops/ms
Iteration   2: 41.604 ops/ms
Iteration   3: 41.840 ops/ms
Iteration   4: 41.718 ops/ms
Iteration   5: 41.605 ops/ms
Iteration   6: 41.891 ops/ms
Iteration   7: 41.830 ops/ms
Iteration   8: 41.690 ops/ms
Iteration   9: 41.824 ops/ms
Iteration  10: 41.831 ops/ms
Iteration  11: 41.893 ops/ms
Iteration  12: 41.439 ops/ms
Iteration  13: 41.560 ops/ms
Iteration  14: 41.882 ops/ms
Iteration  15: 41.782 ops/ms
Iteration  16: 41.612 ops/ms
Iteration  17: 41.684 ops/ms
Iteration  18: 41.742 ops/ms
Iteration  19: 41.590 ops/ms
Iteration  20: 41.767 ops/ms

Result : 41.721 ?(95%) 0.060 ?(99%) 0.082 ops/ms
  Statistics: (min, avg, max) = (41.439, 41.721, 41.893), stdev = 0.128
  Confidence intervals: 95% [41.661, 41.781], 99% [41.639, 41.803]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 21.285 ops/ms
# Warmup Iteration   2: 31.988 ops/ms
# Warmup Iteration   3: 36.469 ops/ms
# Warmup Iteration   4: 39.473 ops/ms
# Warmup Iteration   5: 40.753 ops/ms
# Warmup Iteration   6: 40.826 ops/ms
# Warmup Iteration   7: 41.067 ops/ms
# Warmup Iteration   8: 41.063 ops/ms
# Warmup Iteration   9: 40.823 ops/ms
# Warmup Iteration  10: 41.298 ops/ms
# Warmup Iteration  11: 41.071 ops/ms
# Warmup Iteration  12: 41.015 ops/ms
# Warmup Iteration  13: 40.814 ops/ms
# Warmup Iteration  14: 41.312 ops/ms
# Warmup Iteration  15: 41.265 ops/ms
# Warmup Iteration  16: 41.081 ops/ms
# Warmup Iteration  17: 40.757 ops/ms
# Warmup Iteration  18: 41.350 ops/ms
# Warmup Iteration  19: 41.402 ops/ms
# Warmup Iteration  20: 41.138 ops/ms
Iteration   1: 41.244 ops/ms
Iteration   2: 41.038 ops/ms
Iteration   3: 41.141 ops/ms
Iteration   4: 41.252 ops/ms
Iteration   5: 40.979 ops/ms
Iteration   6: 41.135 ops/ms
Iteration   7: 41.394 ops/ms
Iteration   8: 41.039 ops/ms
Iteration   9: 41.062 ops/ms
Iteration  10: 41.366 ops/ms
Iteration  11: 41.252 ops/ms
Iteration  12: 41.377 ops/ms
Iteration  13: 41.163 ops/ms
Iteration  14: 41.409 ops/ms
Iteration  15: 41.277 ops/ms
Iteration  16: 41.012 ops/ms
Iteration  17: 41.327 ops/ms
Iteration  18: 41.013 ops/ms
Iteration  19: 41.407 ops/ms
Iteration  20: 41.234 ops/ms

Result : 41.206 ?(95%) 0.069 ?(99%) 0.094 ops/ms
  Statistics: (min, avg, max) = (40.979, 41.206, 41.409), stdev = 0.147
  Confidence intervals: 95% [41.137, 41.275], 99% [41.112, 41.300]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 21.181 ops/ms
# Warmup Iteration   2: 32.541 ops/ms
# Warmup Iteration   3: 37.402 ops/ms
# Warmup Iteration   4: 40.177 ops/ms
# Warmup Iteration   5: 41.246 ops/ms
# Warmup Iteration   6: 41.249 ops/ms
# Warmup Iteration   7: 41.785 ops/ms
# Warmup Iteration   8: 41.634 ops/ms
# Warmup Iteration   9: 41.672 ops/ms
# Warmup Iteration  10: 41.500 ops/ms
# Warmup Iteration  11: 41.769 ops/ms
# Warmup Iteration  12: 41.834 ops/ms
# Warmup Iteration  13: 41.793 ops/ms
# Warmup Iteration  14: 41.528 ops/ms
# Warmup Iteration  15: 41.754 ops/ms
# Warmup Iteration  16: 41.792 ops/ms
# Warmup Iteration  17: 41.451 ops/ms
# Warmup Iteration  18: 41.387 ops/ms
# Warmup Iteration  19: 41.691 ops/ms
# Warmup Iteration  20: 41.700 ops/ms
Iteration   1: 41.680 ops/ms
Iteration   2: 41.509 ops/ms
Iteration   3: 41.457 ops/ms
Iteration   4: 41.512 ops/ms
Iteration   5: 41.766 ops/ms
Iteration   6: 41.347 ops/ms
Iteration   7: 41.555 ops/ms
Iteration   8: 41.510 ops/ms
Iteration   9: 41.716 ops/ms
Iteration  10: 41.757 ops/ms
Iteration  11: 41.603 ops/ms
Iteration  12: 41.485 ops/ms
Iteration  13: 41.634 ops/ms
Iteration  14: 41.658 ops/ms
Iteration  15: 41.709 ops/ms
Iteration  16: 41.441 ops/ms
Iteration  17: 41.642 ops/ms
Iteration  18: 41.570 ops/ms
Iteration  19: 41.561 ops/ms
Iteration  20: 41.631 ops/ms

Result : 41.587 ?(95%) 0.053 ?(99%) 0.072 ops/ms
  Statistics: (min, avg, max) = (41.347, 41.587, 41.766), stdev = 0.112
  Confidence intervals: 95% [41.535, 41.640], 99% [41.515, 41.659]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 21.758 ops/ms
# Warmup Iteration   2: 32.352 ops/ms
# Warmup Iteration   3: 37.402 ops/ms
# Warmup Iteration   4: 40.415 ops/ms
# Warmup Iteration   5: 41.497 ops/ms
# Warmup Iteration   6: 41.480 ops/ms
# Warmup Iteration   7: 41.599 ops/ms
# Warmup Iteration   8: 41.811 ops/ms
# Warmup Iteration   9: 41.748 ops/ms
# Warmup Iteration  10: 41.979 ops/ms
# Warmup Iteration  11: 41.267 ops/ms
# Warmup Iteration  12: 41.680 ops/ms
# Warmup Iteration  13: 41.775 ops/ms
# Warmup Iteration  14: 41.845 ops/ms
# Warmup Iteration  15: 41.381 ops/ms
# Warmup Iteration  16: 41.999 ops/ms
# Warmup Iteration  17: 42.072 ops/ms
# Warmup Iteration  18: 42.066 ops/ms
# Warmup Iteration  19: 41.908 ops/ms
# Warmup Iteration  20: 42.026 ops/ms
Iteration   1: 42.055 ops/ms
Iteration   2: 41.783 ops/ms
Iteration   3: 41.660 ops/ms
Iteration   4: 41.852 ops/ms
Iteration   5: 41.746 ops/ms
Iteration   6: 41.912 ops/ms
Iteration   7: 41.728 ops/ms
Iteration   8: 41.746 ops/ms
Iteration   9: 41.823 ops/ms
Iteration  10: 42.008 ops/ms
Iteration  11: 42.020 ops/ms
Iteration  12: 41.823 ops/ms
Iteration  13: 41.900 ops/ms
Iteration  14: 41.929 ops/ms
Iteration  15: 41.752 ops/ms
Iteration  16: 42.040 ops/ms
Iteration  17: 42.016 ops/ms
Iteration  18: 42.081 ops/ms
Iteration  19: 41.868 ops/ms
Iteration  20: 41.904 ops/ms

Result : 41.882 ?(95%) 0.058 ?(99%) 0.080 ops/ms
  Statistics: (min, avg, max) = (41.660, 41.882, 42.081), stdev = 0.125
  Confidence intervals: 95% [41.824, 41.941], 99% [41.802, 41.962]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization
# Warmup Iteration   1: 22.201 ops/ms
# Warmup Iteration   2: 31.375 ops/ms
# Warmup Iteration   3: 35.513 ops/ms
# Warmup Iteration   4: 38.315 ops/ms
# Warmup Iteration   5: 39.445 ops/ms
# Warmup Iteration   6: 39.297 ops/ms
# Warmup Iteration   7: 39.934 ops/ms
# Warmup Iteration   8: 39.710 ops/ms
# Warmup Iteration   9: 39.908 ops/ms
# Warmup Iteration  10: 39.989 ops/ms
# Warmup Iteration  11: 39.666 ops/ms
# Warmup Iteration  12: 39.796 ops/ms
# Warmup Iteration  13: 39.888 ops/ms
# Warmup Iteration  14: 39.722 ops/ms
# Warmup Iteration  15: 39.789 ops/ms
# Warmup Iteration  16: 39.574 ops/ms
# Warmup Iteration  17: 39.676 ops/ms
# Warmup Iteration  18: 39.786 ops/ms
# Warmup Iteration  19: 39.992 ops/ms
# Warmup Iteration  20: 39.823 ops/ms
Iteration   1: 39.769 ops/ms
Iteration   2: 39.820 ops/ms
Iteration   3: 39.907 ops/ms
Iteration   4: 39.728 ops/ms
Iteration   5: 39.495 ops/ms
Iteration   6: 39.915 ops/ms
Iteration   7: 39.899 ops/ms
Iteration   8: 39.782 ops/ms
Iteration   9: 39.969 ops/ms
Iteration  10: 39.857 ops/ms
Iteration  11: 39.911 ops/ms
Iteration  12: 39.955 ops/ms
Iteration  13: 40.015 ops/ms
Iteration  14: 39.910 ops/ms
Iteration  15: 39.934 ops/ms
Iteration  16: 39.696 ops/ms
Iteration  17: 39.727 ops/ms
Iteration  18: 39.672 ops/ms
Iteration  19: 39.918 ops/ms
Iteration  20: 39.778 ops/ms

Result : 39.833 ?(95%) 0.059 ?(99%) 0.081 ops/ms
  Statistics: (min, avg, max) = (39.495, 39.833, 40.015), stdev = 0.127
  Confidence intervals: 95% [39.774, 39.892], 99% [39.752, 39.914]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 8.961 ops/ms
# Warmup Iteration   2: 13.118 ops/ms
# Warmup Iteration   3: 15.997 ops/ms
# Warmup Iteration   4: 17.539 ops/ms
# Warmup Iteration   5: 17.956 ops/ms
# Warmup Iteration   6: 18.004 ops/ms
# Warmup Iteration   7: 18.273 ops/ms
# Warmup Iteration   8: 18.270 ops/ms
# Warmup Iteration   9: 18.297 ops/ms
# Warmup Iteration  10: 18.306 ops/ms
# Warmup Iteration  11: 18.243 ops/ms
# Warmup Iteration  12: 18.213 ops/ms
# Warmup Iteration  13: 18.242 ops/ms
# Warmup Iteration  14: 18.282 ops/ms
# Warmup Iteration  15: 18.116 ops/ms
# Warmup Iteration  16: 17.362 ops/ms
# Warmup Iteration  17: 17.325 ops/ms
# Warmup Iteration  18: 16.962 ops/ms
# Warmup Iteration  19: 17.980 ops/ms
# Warmup Iteration  20: 18.191 ops/ms
Iteration   1: 18.078 ops/ms
Iteration   2: 18.193 ops/ms
Iteration   3: 18.073 ops/ms
Iteration   4: 17.798 ops/ms
Iteration   5: 17.836 ops/ms
Iteration   6: 18.070 ops/ms
Iteration   7: 17.929 ops/ms
Iteration   8: 17.932 ops/ms
Iteration   9: 18.056 ops/ms
Iteration  10: 18.087 ops/ms
Iteration  11: 18.208 ops/ms
Iteration  12: 18.231 ops/ms
Iteration  13: 17.945 ops/ms
Iteration  14: 17.955 ops/ms
Iteration  15: 18.207 ops/ms
Iteration  16: 18.208 ops/ms
Iteration  17: 18.181 ops/ms
Iteration  18: 18.143 ops/ms
Iteration  19: 18.147 ops/ms
Iteration  20: 18.248 ops/ms

Result : 18.076 ?(95%) 0.063 ?(99%) 0.087 ops/ms
  Statistics: (min, avg, max) = (17.798, 18.076, 18.248), stdev = 0.136
  Confidence intervals: 95% [18.013, 18.140], 99% [17.990, 18.163]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 8.697 ops/ms
# Warmup Iteration   2: 14.006 ops/ms
# Warmup Iteration   3: 16.060 ops/ms
# Warmup Iteration   4: 17.431 ops/ms
# Warmup Iteration   5: 17.938 ops/ms
# Warmup Iteration   6: 17.958 ops/ms
# Warmup Iteration   7: 18.227 ops/ms
# Warmup Iteration   8: 18.247 ops/ms
# Warmup Iteration   9: 18.165 ops/ms
# Warmup Iteration  10: 18.086 ops/ms
# Warmup Iteration  11: 18.258 ops/ms
# Warmup Iteration  12: 18.155 ops/ms
# Warmup Iteration  13: 18.295 ops/ms
# Warmup Iteration  14: 18.232 ops/ms
# Warmup Iteration  15: 18.169 ops/ms
# Warmup Iteration  16: 18.181 ops/ms
# Warmup Iteration  17: 18.218 ops/ms
# Warmup Iteration  18: 18.167 ops/ms
# Warmup Iteration  19: 18.191 ops/ms
# Warmup Iteration  20: 18.156 ops/ms
Iteration   1: 18.148 ops/ms
Iteration   2: 18.153 ops/ms
Iteration   3: 18.278 ops/ms
Iteration   4: 18.196 ops/ms
Iteration   5: 18.165 ops/ms
Iteration   6: 18.103 ops/ms
Iteration   7: 18.245 ops/ms
Iteration   8: 18.131 ops/ms
Iteration   9: 18.299 ops/ms
Iteration  10: 18.106 ops/ms
Iteration  11: 18.118 ops/ms
Iteration  12: 18.290 ops/ms
Iteration  13: 18.180 ops/ms
Iteration  14: 18.225 ops/ms
Iteration  15: 18.199 ops/ms
Iteration  16: 18.246 ops/ms
Iteration  17: 18.234 ops/ms
Iteration  18: 18.123 ops/ms
Iteration  19: 18.187 ops/ms
Iteration  20: 18.259 ops/ms

Result : 18.194 ?(95%) 0.029 ?(99%) 0.040 ops/ms
  Statistics: (min, avg, max) = (18.103, 18.194, 18.299), stdev = 0.063
  Confidence intervals: 95% [18.165, 18.224], 99% [18.154, 18.234]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.374 ops/ms
# Warmup Iteration   2: 14.770 ops/ms
# Warmup Iteration   3: 16.775 ops/ms
# Warmup Iteration   4: 18.256 ops/ms
# Warmup Iteration   5: 18.630 ops/ms
# Warmup Iteration   6: 18.664 ops/ms
# Warmup Iteration   7: 18.823 ops/ms
# Warmup Iteration   8: 18.888 ops/ms
# Warmup Iteration   9: 18.800 ops/ms
# Warmup Iteration  10: 18.886 ops/ms
# Warmup Iteration  11: 18.743 ops/ms
# Warmup Iteration  12: 18.816 ops/ms
# Warmup Iteration  13: 18.888 ops/ms
# Warmup Iteration  14: 18.901 ops/ms
# Warmup Iteration  15: 18.772 ops/ms
# Warmup Iteration  16: 18.795 ops/ms
# Warmup Iteration  17: 18.773 ops/ms
# Warmup Iteration  18: 18.877 ops/ms
# Warmup Iteration  19: 18.800 ops/ms
# Warmup Iteration  20: 18.853 ops/ms
Iteration   1: 18.765 ops/ms
Iteration   2: 18.821 ops/ms
Iteration   3: 18.809 ops/ms
Iteration   4: 18.819 ops/ms
Iteration   5: 18.857 ops/ms
Iteration   6: 18.875 ops/ms
Iteration   7: 18.725 ops/ms
Iteration   8: 18.745 ops/ms
Iteration   9: 18.821 ops/ms
Iteration  10: 18.863 ops/ms
Iteration  11: 18.798 ops/ms
Iteration  12: 18.883 ops/ms
Iteration  13: 18.810 ops/ms
Iteration  14: 18.764 ops/ms
Iteration  15: 18.863 ops/ms
Iteration  16: 18.759 ops/ms
Iteration  17: 18.878 ops/ms
Iteration  18: 18.881 ops/ms
Iteration  19: 18.914 ops/ms
Iteration  20: 18.810 ops/ms

Result : 18.823 ?(95%) 0.025 ?(99%) 0.034 ops/ms
  Statistics: (min, avg, max) = (18.725, 18.823, 18.914), stdev = 0.053
  Confidence intervals: 95% [18.798, 18.848], 99% [18.789, 18.857]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.262 ops/ms
# Warmup Iteration   2: 12.515 ops/ms
# Warmup Iteration   3: 15.519 ops/ms
# Warmup Iteration   4: 17.021 ops/ms
# Warmup Iteration   5: 17.605 ops/ms
# Warmup Iteration   6: 17.507 ops/ms
# Warmup Iteration   7: 17.797 ops/ms
# Warmup Iteration   8: 17.650 ops/ms
# Warmup Iteration   9: 17.792 ops/ms
# Warmup Iteration  10: 17.802 ops/ms
# Warmup Iteration  11: 17.791 ops/ms
# Warmup Iteration  12: 17.796 ops/ms
# Warmup Iteration  13: 17.724 ops/ms
# Warmup Iteration  14: 17.852 ops/ms
# Warmup Iteration  15: 17.873 ops/ms
# Warmup Iteration  16: 17.741 ops/ms
# Warmup Iteration  17: 17.858 ops/ms
# Warmup Iteration  18: 17.927 ops/ms
# Warmup Iteration  19: 17.893 ops/ms
# Warmup Iteration  20: 17.825 ops/ms
Iteration   1: 17.843 ops/ms
Iteration   2: 17.823 ops/ms
Iteration   3: 17.910 ops/ms
Iteration   4: 17.813 ops/ms
Iteration   5: 17.834 ops/ms
Iteration   6: 17.849 ops/ms
Iteration   7: 17.801 ops/ms
Iteration   8: 17.866 ops/ms
Iteration   9: 17.831 ops/ms
Iteration  10: 17.839 ops/ms
Iteration  11: 17.911 ops/ms
Iteration  12: 17.836 ops/ms
Iteration  13: 17.903 ops/ms
Iteration  14: 17.901 ops/ms
Iteration  15: 17.905 ops/ms
Iteration  16: 17.871 ops/ms
Iteration  17: 17.770 ops/ms
Iteration  18: 17.882 ops/ms
Iteration  19: 17.898 ops/ms
Iteration  20: 17.896 ops/ms

Result : 17.859 ?(95%) 0.019 ?(99%) 0.026 ops/ms
  Statistics: (min, avg, max) = (17.770, 17.859, 17.911), stdev = 0.041
  Confidence intervals: 95% [17.840, 17.878], 99% [17.833, 17.885]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization
# Warmup Iteration   1: 9.358 ops/ms
# Warmup Iteration   2: 12.364 ops/ms
# Warmup Iteration   3: 15.139 ops/ms
# Warmup Iteration   4: 16.772 ops/ms
# Warmup Iteration   5: 17.252 ops/ms
# Warmup Iteration   6: 17.327 ops/ms
# Warmup Iteration   7: 17.492 ops/ms
# Warmup Iteration   8: 17.573 ops/ms
# Warmup Iteration   9: 17.482 ops/ms
# Warmup Iteration  10: 17.547 ops/ms
# Warmup Iteration  11: 17.622 ops/ms
# Warmup Iteration  12: 17.619 ops/ms
# Warmup Iteration  13: 17.401 ops/ms
# Warmup Iteration  14: 17.625 ops/ms
# Warmup Iteration  15: 17.572 ops/ms
# Warmup Iteration  16: 17.568 ops/ms
# Warmup Iteration  17: 17.423 ops/ms
# Warmup Iteration  18: 17.527 ops/ms
# Warmup Iteration  19: 17.510 ops/ms
# Warmup Iteration  20: 17.579 ops/ms
Iteration   1: 17.410 ops/ms
Iteration   2: 17.514 ops/ms
Iteration   3: 17.564 ops/ms
Iteration   4: 17.574 ops/ms
Iteration   5: 17.486 ops/ms
Iteration   6: 17.492 ops/ms
Iteration   7: 17.487 ops/ms
Iteration   8: 17.577 ops/ms
Iteration   9: 17.515 ops/ms
Iteration  10: 17.568 ops/ms
Iteration  11: 17.583 ops/ms
Iteration  12: 17.439 ops/ms
Iteration  13: 17.571 ops/ms
Iteration  14: 17.506 ops/ms
Iteration  15: 17.562 ops/ms
Iteration  16: 17.431 ops/ms
Iteration  17: 17.568 ops/ms
Iteration  18: 17.406 ops/ms
Iteration  19: 17.540 ops/ms
Iteration  20: 17.534 ops/ms

Result : 17.516 ?(95%) 0.027 ?(99%) 0.037 ops/ms
  Statistics: (min, avg, max) = (17.406, 17.516, 17.583), stdev = 0.058
  Confidence intervals: 95% [17.489, 17.544], 99% [17.479, 17.554]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 41.856 ops/ms
# Warmup Iteration   2: 65.004 ops/ms
# Warmup Iteration   3: 75.361 ops/ms
# Warmup Iteration   4: 81.550 ops/ms
# Warmup Iteration   5: 83.325 ops/ms
# Warmup Iteration   6: 83.227 ops/ms
# Warmup Iteration   7: 84.607 ops/ms
# Warmup Iteration   8: 84.167 ops/ms
# Warmup Iteration   9: 84.488 ops/ms
# Warmup Iteration  10: 84.414 ops/ms
# Warmup Iteration  11: 84.643 ops/ms
# Warmup Iteration  12: 83.867 ops/ms
# Warmup Iteration  13: 84.291 ops/ms
# Warmup Iteration  14: 84.038 ops/ms
# Warmup Iteration  15: 84.607 ops/ms
# Warmup Iteration  16: 84.246 ops/ms
# Warmup Iteration  17: 83.807 ops/ms
# Warmup Iteration  18: 83.844 ops/ms
# Warmup Iteration  19: 84.064 ops/ms
# Warmup Iteration  20: 84.006 ops/ms
Iteration   1: 84.008 ops/ms
Iteration   2: 83.976 ops/ms
Iteration   3: 84.661 ops/ms
Iteration   4: 84.532 ops/ms
Iteration   5: 84.462 ops/ms
Iteration   6: 83.893 ops/ms
Iteration   7: 84.080 ops/ms
Iteration   8: 84.523 ops/ms
Iteration   9: 84.463 ops/ms
Iteration  10: 84.116 ops/ms
Iteration  11: 84.507 ops/ms
Iteration  12: 84.243 ops/ms
Iteration  13: 84.091 ops/ms
Iteration  14: 84.105 ops/ms
Iteration  15: 84.567 ops/ms
Iteration  16: 84.375 ops/ms
Iteration  17: 83.957 ops/ms
Iteration  18: 84.273 ops/ms
Iteration  19: 84.514 ops/ms
Iteration  20: 84.619 ops/ms

Result : 84.298 ?(95%) 0.117 ?(99%) 0.160 ops/ms
  Statistics: (min, avg, max) = (83.893, 84.298, 84.661), stdev = 0.251
  Confidence intervals: 95% [84.181, 84.416], 99% [84.138, 84.459]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 39.984 ops/ms
# Warmup Iteration   2: 65.105 ops/ms
# Warmup Iteration   3: 76.827 ops/ms
# Warmup Iteration   4: 81.837 ops/ms
# Warmup Iteration   5: 83.222 ops/ms
# Warmup Iteration   6: 83.118 ops/ms
# Warmup Iteration   7: 83.697 ops/ms
# Warmup Iteration   8: 83.815 ops/ms
# Warmup Iteration   9: 83.668 ops/ms
# Warmup Iteration  10: 83.834 ops/ms
# Warmup Iteration  11: 83.186 ops/ms
# Warmup Iteration  12: 84.068 ops/ms
# Warmup Iteration  13: 82.959 ops/ms
# Warmup Iteration  14: 83.684 ops/ms
# Warmup Iteration  15: 83.621 ops/ms
# Warmup Iteration  16: 83.487 ops/ms
# Warmup Iteration  17: 83.425 ops/ms
# Warmup Iteration  18: 83.761 ops/ms
# Warmup Iteration  19: 83.318 ops/ms
# Warmup Iteration  20: 83.962 ops/ms
Iteration   1: 83.330 ops/ms
Iteration   2: 83.434 ops/ms
Iteration   3: 82.985 ops/ms
Iteration   4: 83.551 ops/ms
Iteration   5: 83.344 ops/ms
Iteration   6: 83.672 ops/ms
Iteration   7: 82.871 ops/ms
Iteration   8: 83.852 ops/ms
Iteration   9: 83.516 ops/ms
Iteration  10: 83.309 ops/ms
Iteration  11: 83.458 ops/ms
Iteration  12: 83.376 ops/ms
Iteration  13: 83.630 ops/ms
Iteration  14: 83.568 ops/ms
Iteration  15: 83.497 ops/ms
Iteration  16: 83.285 ops/ms
Iteration  17: 83.641 ops/ms
Iteration  18: 83.789 ops/ms
Iteration  19: 83.285 ops/ms
Iteration  20: 83.743 ops/ms

Result : 83.457 ?(95%) 0.116 ?(99%) 0.159 ops/ms
  Statistics: (min, avg, max) = (82.871, 83.457, 83.852), stdev = 0.248
  Confidence intervals: 95% [83.341, 83.573], 99% [83.298, 83.615]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 42.896 ops/ms
# Warmup Iteration   2: 66.183 ops/ms
# Warmup Iteration   3: 75.621 ops/ms
# Warmup Iteration   4: 80.429 ops/ms
# Warmup Iteration   5: 82.392 ops/ms
# Warmup Iteration   6: 82.469 ops/ms
# Warmup Iteration   7: 82.911 ops/ms
# Warmup Iteration   8: 83.269 ops/ms
# Warmup Iteration   9: 82.156 ops/ms
# Warmup Iteration  10: 82.186 ops/ms
# Warmup Iteration  11: 83.117 ops/ms
# Warmup Iteration  12: 82.468 ops/ms
# Warmup Iteration  13: 83.257 ops/ms
# Warmup Iteration  14: 82.991 ops/ms
# Warmup Iteration  15: 83.224 ops/ms
# Warmup Iteration  16: 82.233 ops/ms
# Warmup Iteration  17: 82.862 ops/ms
# Warmup Iteration  18: 82.223 ops/ms
# Warmup Iteration  19: 82.834 ops/ms
# Warmup Iteration  20: 82.263 ops/ms
Iteration   1: 83.041 ops/ms
Iteration   2: 82.782 ops/ms
Iteration   3: 82.714 ops/ms
Iteration   4: 82.698 ops/ms
Iteration   5: 82.858 ops/ms
Iteration   6: 82.664 ops/ms
Iteration   7: 82.812 ops/ms
Iteration   8: 82.278 ops/ms
Iteration   9: 82.575 ops/ms
Iteration  10: 82.556 ops/ms
Iteration  11: 82.276 ops/ms
Iteration  12: 82.688 ops/ms
Iteration  13: 82.970 ops/ms
Iteration  14: 83.006 ops/ms
Iteration  15: 83.038 ops/ms
Iteration  16: 82.283 ops/ms
Iteration  17: 83.140 ops/ms
Iteration  18: 83.076 ops/ms
Iteration  19: 82.459 ops/ms
Iteration  20: 82.660 ops/ms

Result : 82.729 ?(95%) 0.126 ?(99%) 0.173 ops/ms
  Statistics: (min, avg, max) = (82.276, 82.729, 83.140), stdev = 0.270
  Confidence intervals: 95% [82.602, 82.855], 99% [82.556, 82.901]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 42.434 ops/ms
# Warmup Iteration   2: 66.062 ops/ms
# Warmup Iteration   3: 76.355 ops/ms
# Warmup Iteration   4: 81.355 ops/ms
# Warmup Iteration   5: 82.557 ops/ms
# Warmup Iteration   6: 82.899 ops/ms
# Warmup Iteration   7: 83.091 ops/ms
# Warmup Iteration   8: 83.035 ops/ms
# Warmup Iteration   9: 83.037 ops/ms
# Warmup Iteration  10: 83.469 ops/ms
# Warmup Iteration  11: 83.468 ops/ms
# Warmup Iteration  12: 82.729 ops/ms
# Warmup Iteration  13: 82.540 ops/ms
# Warmup Iteration  14: 83.450 ops/ms
# Warmup Iteration  15: 83.307 ops/ms
# Warmup Iteration  16: 83.489 ops/ms
# Warmup Iteration  17: 82.523 ops/ms
# Warmup Iteration  18: 83.357 ops/ms
# Warmup Iteration  19: 83.252 ops/ms
# Warmup Iteration  20: 83.368 ops/ms
Iteration   1: 82.340 ops/ms
Iteration   2: 83.374 ops/ms
Iteration   3: 83.265 ops/ms
Iteration   4: 83.055 ops/ms
Iteration   5: 82.835 ops/ms
Iteration   6: 83.651 ops/ms
Iteration   7: 83.289 ops/ms
Iteration   8: 83.382 ops/ms
Iteration   9: 82.800 ops/ms
Iteration  10: 83.625 ops/ms
Iteration  11: 83.363 ops/ms
Iteration  12: 82.701 ops/ms
Iteration  13: 83.074 ops/ms
Iteration  14: 82.616 ops/ms
Iteration  15: 83.528 ops/ms
Iteration  16: 82.951 ops/ms
Iteration  17: 83.596 ops/ms
Iteration  18: 82.952 ops/ms
Iteration  19: 83.031 ops/ms
Iteration  20: 82.950 ops/ms

Result : 83.119 ?(95%) 0.170 ?(99%) 0.232 ops/ms
  Statistics: (min, avg, max) = (82.340, 83.119, 83.651), stdev = 0.362
  Confidence intervals: 95% [82.949, 83.288], 99% [82.887, 83.351]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable
# Warmup Iteration   1: 39.348 ops/ms
# Warmup Iteration   2: 64.062 ops/ms
# Warmup Iteration   3: 74.716 ops/ms
# Warmup Iteration   4: 78.933 ops/ms
# Warmup Iteration   5: 80.589 ops/ms
# Warmup Iteration   6: 80.640 ops/ms
# Warmup Iteration   7: 81.344 ops/ms
# Warmup Iteration   8: 81.411 ops/ms
# Warmup Iteration   9: 80.766 ops/ms
# Warmup Iteration  10: 80.373 ops/ms
# Warmup Iteration  11: 81.070 ops/ms
# Warmup Iteration  12: 81.467 ops/ms
# Warmup Iteration  13: 80.415 ops/ms
# Warmup Iteration  14: 81.006 ops/ms
# Warmup Iteration  15: 81.376 ops/ms
# Warmup Iteration  16: 81.166 ops/ms
# Warmup Iteration  17: 80.635 ops/ms
# Warmup Iteration  18: 80.464 ops/ms
# Warmup Iteration  19: 80.681 ops/ms
# Warmup Iteration  20: 81.186 ops/ms
Iteration   1: 81.316 ops/ms
Iteration   2: 80.836 ops/ms
Iteration   3: 80.708 ops/ms
Iteration   4: 81.039 ops/ms
Iteration   5: 80.780 ops/ms
Iteration   6: 80.474 ops/ms
Iteration   7: 81.043 ops/ms
Iteration   8: 80.965 ops/ms
Iteration   9: 81.261 ops/ms
Iteration  10: 80.360 ops/ms
Iteration  11: 81.087 ops/ms
Iteration  12: 81.291 ops/ms
Iteration  13: 81.035 ops/ms
Iteration  14: 80.961 ops/ms
Iteration  15: 81.071 ops/ms
Iteration  16: 81.156 ops/ms
Iteration  17: 81.054 ops/ms
Iteration  18: 81.272 ops/ms
Iteration  19: 80.883 ops/ms
Iteration  20: 80.648 ops/ms

Result : 80.962 ?(95%) 0.124 ?(99%) 0.169 ops/ms
  Statistics: (min, avg, max) = (80.360, 80.962, 81.316), stdev = 0.265
  Confidence intervals: 95% [80.838, 81.086], 99% [80.793, 81.131]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35250.461 ops/ms
# Warmup Iteration   2: 43557.173 ops/ms
# Warmup Iteration   3: 50814.239 ops/ms
# Warmup Iteration   4: 52675.076 ops/ms
# Warmup Iteration   5: 54311.813 ops/ms
# Warmup Iteration   6: 52798.318 ops/ms
# Warmup Iteration   7: 54422.223 ops/ms
# Warmup Iteration   8: 54366.237 ops/ms
# Warmup Iteration   9: 52463.275 ops/ms
# Warmup Iteration  10: 53285.049 ops/ms
# Warmup Iteration  11: 53653.243 ops/ms
# Warmup Iteration  12: 53557.654 ops/ms
# Warmup Iteration  13: 53485.333 ops/ms
# Warmup Iteration  14: 53774.177 ops/ms
# Warmup Iteration  15: 51519.565 ops/ms
# Warmup Iteration  16: 53988.129 ops/ms
# Warmup Iteration  17: 53931.691 ops/ms
# Warmup Iteration  18: 54347.481 ops/ms
# Warmup Iteration  19: 52313.384 ops/ms
# Warmup Iteration  20: 53972.053 ops/ms
Iteration   1: 53952.529 ops/ms
Iteration   2: 54366.929 ops/ms
Iteration   3: 52855.639 ops/ms
Iteration   4: 54519.691 ops/ms
Iteration   5: 54007.265 ops/ms
Iteration   6: 53688.735 ops/ms
Iteration   7: 52801.685 ops/ms
Iteration   8: 53763.884 ops/ms
Iteration   9: 54071.192 ops/ms
Iteration  10: 54092.837 ops/ms
Iteration  11: 53075.276 ops/ms
Iteration  12: 54016.947 ops/ms
Iteration  13: 54046.197 ops/ms
Iteration  14: 54172.757 ops/ms
Iteration  15: 53608.239 ops/ms
Iteration  16: 54136.923 ops/ms
Iteration  17: 53762.453 ops/ms
Iteration  18: 54412.979 ops/ms
Iteration  19: 53250.954 ops/ms
Iteration  20: 54542.408 ops/ms

Result : 53857.276 ?(95%) 241.360 ?(99%) 329.925 ops/ms
  Statistics: (min, avg, max) = (52801.685, 53857.276, 54542.408), stdev = 515.717
  Confidence intervals: 95% [53615.915, 54098.636], 99% [53527.351, 54187.200]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36381.086 ops/ms
# Warmup Iteration   2: 47143.352 ops/ms
# Warmup Iteration   3: 53592.848 ops/ms
# Warmup Iteration   4: 53943.939 ops/ms
# Warmup Iteration   5: 53955.087 ops/ms
# Warmup Iteration   6: 53708.761 ops/ms
# Warmup Iteration   7: 53361.001 ops/ms
# Warmup Iteration   8: 54453.661 ops/ms
# Warmup Iteration   9: 53878.147 ops/ms
# Warmup Iteration  10: 54477.058 ops/ms
# Warmup Iteration  11: 53668.828 ops/ms
# Warmup Iteration  12: 54243.103 ops/ms
# Warmup Iteration  13: 54438.317 ops/ms
# Warmup Iteration  14: 54113.393 ops/ms
# Warmup Iteration  15: 53456.765 ops/ms
# Warmup Iteration  16: 53638.419 ops/ms
# Warmup Iteration  17: 54377.150 ops/ms
# Warmup Iteration  18: 53783.238 ops/ms
# Warmup Iteration  19: 54009.350 ops/ms
# Warmup Iteration  20: 53126.743 ops/ms
Iteration   1: 54330.273 ops/ms
Iteration   2: 54102.221 ops/ms
Iteration   3: 54257.804 ops/ms
Iteration   4: 52783.663 ops/ms
Iteration   5: 53893.837 ops/ms
Iteration   6: 53725.167 ops/ms
Iteration   7: 53748.336 ops/ms
Iteration   8: 53434.451 ops/ms
Iteration   9: 54117.107 ops/ms
Iteration  10: 54347.790 ops/ms
Iteration  11: 53741.992 ops/ms
Iteration  12: 53163.661 ops/ms
Iteration  13: 54120.340 ops/ms
Iteration  14: 54160.744 ops/ms
Iteration  15: 53981.950 ops/ms
Iteration  16: 53284.177 ops/ms
Iteration  17: 54091.685 ops/ms
Iteration  18: 54077.029 ops/ms
Iteration  19: 54322.800 ops/ms
Iteration  20: 53268.519 ops/ms

Result : 53847.677 ?(95%) 208.714 ?(99%) 285.299 ops/ms
  Statistics: (min, avg, max) = (52783.663, 53847.677, 54347.790), stdev = 445.962
  Confidence intervals: 95% [53638.963, 54056.392], 99% [53562.378, 54132.977]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35668.320 ops/ms
# Warmup Iteration   2: 47748.201 ops/ms
# Warmup Iteration   3: 53934.877 ops/ms
# Warmup Iteration   4: 52541.129 ops/ms
# Warmup Iteration   5: 54105.859 ops/ms
# Warmup Iteration   6: 53790.536 ops/ms
# Warmup Iteration   7: 53759.322 ops/ms
# Warmup Iteration   8: 52985.472 ops/ms
# Warmup Iteration   9: 53890.402 ops/ms
# Warmup Iteration  10: 54328.105 ops/ms
# Warmup Iteration  11: 53724.905 ops/ms
# Warmup Iteration  12: 53338.846 ops/ms
# Warmup Iteration  13: 53331.522 ops/ms
# Warmup Iteration  14: 54168.247 ops/ms
# Warmup Iteration  15: 53865.725 ops/ms
# Warmup Iteration  16: 54210.644 ops/ms
# Warmup Iteration  17: 52932.014 ops/ms
# Warmup Iteration  18: 53897.058 ops/ms
# Warmup Iteration  19: 53758.363 ops/ms
# Warmup Iteration  20: 53673.310 ops/ms
Iteration   1: 53912.745 ops/ms
Iteration   2: 53992.182 ops/ms
Iteration   3: 54257.522 ops/ms
Iteration   4: 53447.402 ops/ms
Iteration   5: 53407.582 ops/ms
Iteration   6: 54217.763 ops/ms
Iteration   7: 53627.606 ops/ms
Iteration   8: 53702.494 ops/ms
Iteration   9: 53068.948 ops/ms
Iteration  10: 54507.878 ops/ms
Iteration  11: 54224.605 ops/ms
Iteration  12: 54025.539 ops/ms
Iteration  13: 52764.514 ops/ms
Iteration  14: 53631.989 ops/ms
Iteration  15: 54010.930 ops/ms
Iteration  16: 53505.215 ops/ms
Iteration  17: 53978.168 ops/ms
Iteration  18: 54284.542 ops/ms
Iteration  19: 53982.493 ops/ms
Iteration  20: 54183.140 ops/ms

Result : 53836.663 ?(95%) 205.670 ?(99%) 281.137 ops/ms
  Statistics: (min, avg, max) = (52764.514, 53836.663, 54507.878), stdev = 439.456
  Confidence intervals: 95% [53630.993, 54042.332], 99% [53555.525, 54117.800]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 35485.046 ops/ms
# Warmup Iteration   2: 47389.064 ops/ms
# Warmup Iteration   3: 54590.552 ops/ms
# Warmup Iteration   4: 53547.077 ops/ms
# Warmup Iteration   5: 53465.037 ops/ms
# Warmup Iteration   6: 53940.219 ops/ms
# Warmup Iteration   7: 54132.336 ops/ms
# Warmup Iteration   8: 53515.926 ops/ms
# Warmup Iteration   9: 52618.571 ops/ms
# Warmup Iteration  10: 53755.898 ops/ms
# Warmup Iteration  11: 54177.921 ops/ms
# Warmup Iteration  12: 54541.481 ops/ms
# Warmup Iteration  13: 54325.459 ops/ms
# Warmup Iteration  14: 53879.008 ops/ms
# Warmup Iteration  15: 54061.572 ops/ms
# Warmup Iteration  16: 54110.952 ops/ms
# Warmup Iteration  17: 54061.364 ops/ms
# Warmup Iteration  18: 53071.256 ops/ms
# Warmup Iteration  19: 53938.187 ops/ms
# Warmup Iteration  20: 54327.223 ops/ms
Iteration   1: 53784.655 ops/ms
Iteration   2: 52921.263 ops/ms
Iteration   3: 54020.210 ops/ms
Iteration   4: 54101.796 ops/ms
Iteration   5: 53806.813 ops/ms
Iteration   6: 52974.794 ops/ms
Iteration   7: 53737.850 ops/ms
Iteration   8: 54324.330 ops/ms
Iteration   9: 53781.353 ops/ms
Iteration  10: 53171.901 ops/ms
Iteration  11: 54120.922 ops/ms
Iteration  12: 53618.260 ops/ms
Iteration  13: 53710.311 ops/ms
Iteration  14: 52552.499 ops/ms
Iteration  15: 54283.215 ops/ms
Iteration  16: 53997.196 ops/ms
Iteration  17: 53624.367 ops/ms
Iteration  18: 53549.666 ops/ms
Iteration  19: 53869.449 ops/ms
Iteration  20: 53850.149 ops/ms

Result : 53690.050 ?(95%) 217.363 ?(99%) 297.121 ops/ms
  Statistics: (min, avg, max) = (52552.500, 53690.050, 54324.330), stdev = 464.442
  Confidence intervals: 95% [53472.687, 53907.413], 99% [53392.929, 53987.172]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor
# Warmup Iteration   1: 36080.071 ops/ms
# Warmup Iteration   2: 47417.008 ops/ms
# Warmup Iteration   3: 54257.984 ops/ms
# Warmup Iteration   4: 53588.648 ops/ms
# Warmup Iteration   5: 54499.847 ops/ms
# Warmup Iteration   6: 53848.150 ops/ms
# Warmup Iteration   7: 53899.771 ops/ms
# Warmup Iteration   8: 53700.985 ops/ms
# Warmup Iteration   9: 53467.212 ops/ms
# Warmup Iteration  10: 54563.312 ops/ms
# Warmup Iteration  11: 53803.024 ops/ms
# Warmup Iteration  12: 53812.328 ops/ms
# Warmup Iteration  13: 54120.403 ops/ms
# Warmup Iteration  14: 54042.830 ops/ms
# Warmup Iteration  15: 53743.649 ops/ms
# Warmup Iteration  16: 53975.395 ops/ms
# Warmup Iteration  17: 53701.930 ops/ms
# Warmup Iteration  18: 53644.454 ops/ms
# Warmup Iteration  19: 52308.718 ops/ms
# Warmup Iteration  20: 54471.356 ops/ms
Iteration   1: 53973.667 ops/ms
Iteration   2: 53870.667 ops/ms
Iteration   3: 52983.943 ops/ms
Iteration   4: 53683.692 ops/ms
Iteration   5: 53951.943 ops/ms
Iteration   6: 53925.708 ops/ms
Iteration   7: 53216.905 ops/ms
Iteration   8: 54058.947 ops/ms
Iteration   9: 53621.842 ops/ms
Iteration  10: 54393.943 ops/ms
Iteration  11: 52867.352 ops/ms
Iteration  12: 54197.578 ops/ms
Iteration  13: 53967.459 ops/ms
Iteration  14: 53826.882 ops/ms
Iteration  15: 53602.085 ops/ms
Iteration  16: 54296.435 ops/ms
Iteration  17: 54231.211 ops/ms
Iteration  18: 54128.943 ops/ms
Iteration  19: 53165.466 ops/ms
Iteration  20: 53530.692 ops/ms

Result : 53774.768 ?(95%) 204.957 ?(99%) 280.164 ops/ms
  Statistics: (min, avg, max) = (52867.352, 53774.768, 54393.943), stdev = 437.934
  Confidence intervals: 95% [53569.811, 53979.725], 99% [53494.604, 54054.932]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1039.515 ops/ms
# Warmup Iteration   2: 1653.933 ops/ms
# Warmup Iteration   3: 1434.599 ops/ms
# Warmup Iteration   4: 1660.773 ops/ms
# Warmup Iteration   5: 1672.944 ops/ms
# Warmup Iteration   6: 1651.260 ops/ms
# Warmup Iteration   7: 1661.290 ops/ms
# Warmup Iteration   8: 1664.076 ops/ms
# Warmup Iteration   9: 1670.091 ops/ms
# Warmup Iteration  10: 1664.634 ops/ms
# Warmup Iteration  11: 1637.934 ops/ms
# Warmup Iteration  12: 1666.175 ops/ms
# Warmup Iteration  13: 1668.362 ops/ms
# Warmup Iteration  14: 1655.346 ops/ms
# Warmup Iteration  15: 1655.991 ops/ms
# Warmup Iteration  16: 1667.598 ops/ms
# Warmup Iteration  17: 1661.989 ops/ms
# Warmup Iteration  18: 1662.313 ops/ms
# Warmup Iteration  19: 1659.752 ops/ms
# Warmup Iteration  20: 1662.542 ops/ms
Iteration   1: 1655.707 ops/ms
Iteration   2: 1659.105 ops/ms
Iteration   3: 1667.131 ops/ms
Iteration   4: 1638.011 ops/ms
Iteration   5: 1672.575 ops/ms
Iteration   6: 1668.442 ops/ms
Iteration   7: 1667.576 ops/ms
Iteration   8: 1644.605 ops/ms
Iteration   9: 1666.184 ops/ms
Iteration  10: 1656.729 ops/ms
Iteration  11: 1645.077 ops/ms
Iteration  12: 1642.273 ops/ms
Iteration  13: 1662.908 ops/ms
Iteration  14: 1664.950 ops/ms
Iteration  15: 1664.137 ops/ms
Iteration  16: 1637.276 ops/ms
Iteration  17: 1657.824 ops/ms
Iteration  18: 1663.692 ops/ms
Iteration  19: 1661.132 ops/ms
Iteration  20: 1646.607 ops/ms

Result : 1657.097 ?(95%) 5.104 ?(99%) 6.977 ops/ms
  Statistics: (min, avg, max) = (1637.276, 1657.097, 1672.575), stdev = 10.907
  Confidence intervals: 95% [1651.993, 1662.202], 99% [1650.120, 1664.075]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1036.680 ops/ms
# Warmup Iteration   2: 1654.064 ops/ms
# Warmup Iteration   3: 1452.506 ops/ms
# Warmup Iteration   4: 1632.682 ops/ms
# Warmup Iteration   5: 1639.168 ops/ms
# Warmup Iteration   6: 1636.004 ops/ms
# Warmup Iteration   7: 1636.232 ops/ms
# Warmup Iteration   8: 1614.791 ops/ms
# Warmup Iteration   9: 1646.934 ops/ms
# Warmup Iteration  10: 1634.009 ops/ms
# Warmup Iteration  11: 1657.242 ops/ms
# Warmup Iteration  12: 1625.987 ops/ms
# Warmup Iteration  13: 1647.096 ops/ms
# Warmup Iteration  14: 1633.709 ops/ms
# Warmup Iteration  15: 1640.546 ops/ms
# Warmup Iteration  16: 1647.834 ops/ms
# Warmup Iteration  17: 1645.903 ops/ms
# Warmup Iteration  18: 1651.838 ops/ms
# Warmup Iteration  19: 1648.815 ops/ms
# Warmup Iteration  20: 1642.938 ops/ms
Iteration   1: 1643.469 ops/ms
Iteration   2: 1638.602 ops/ms
Iteration   3: 1657.258 ops/ms
Iteration   4: 1640.149 ops/ms
Iteration   5: 1632.183 ops/ms
Iteration   6: 1656.576 ops/ms
Iteration   7: 1653.187 ops/ms
Iteration   8: 1646.041 ops/ms
Iteration   9: 1630.724 ops/ms
Iteration  10: 1648.738 ops/ms
Iteration  11: 1650.222 ops/ms
Iteration  12: 1648.272 ops/ms
Iteration  13: 1635.368 ops/ms
Iteration  14: 1647.097 ops/ms
Iteration  15: 1648.672 ops/ms
Iteration  16: 1645.886 ops/ms
Iteration  17: 1606.812 ops/ms
Iteration  18: 1657.594 ops/ms
Iteration  19: 1640.588 ops/ms
Iteration  20: 1655.517 ops/ms

Result : 1644.148 ?(95%) 5.562 ?(99%) 7.602 ops/ms
  Statistics: (min, avg, max) = (1606.812, 1644.148, 1657.594), stdev = 11.884
  Confidence intervals: 95% [1638.586, 1649.709], 99% [1636.545, 1651.750]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1030.363 ops/ms
# Warmup Iteration   2: 1628.509 ops/ms
# Warmup Iteration   3: 1473.716 ops/ms
# Warmup Iteration   4: 1647.257 ops/ms
# Warmup Iteration   5: 1618.681 ops/ms
# Warmup Iteration   6: 1637.972 ops/ms
# Warmup Iteration   7: 1627.254 ops/ms
# Warmup Iteration   8: 1637.348 ops/ms
# Warmup Iteration   9: 1618.468 ops/ms
# Warmup Iteration  10: 1641.491 ops/ms
# Warmup Iteration  11: 1640.089 ops/ms
# Warmup Iteration  12: 1639.429 ops/ms
# Warmup Iteration  13: 1630.540 ops/ms
# Warmup Iteration  14: 1632.079 ops/ms
# Warmup Iteration  15: 1654.317 ops/ms
# Warmup Iteration  16: 1638.716 ops/ms
# Warmup Iteration  17: 1628.379 ops/ms
# Warmup Iteration  18: 1648.603 ops/ms
# Warmup Iteration  19: 1645.015 ops/ms
# Warmup Iteration  20: 1642.425 ops/ms
Iteration   1: 1624.911 ops/ms
Iteration   2: 1620.723 ops/ms
Iteration   3: 1660.771 ops/ms
Iteration   4: 1643.226 ops/ms
Iteration   5: 1637.015 ops/ms
Iteration   6: 1628.728 ops/ms
Iteration   7: 1637.968 ops/ms
Iteration   8: 1641.401 ops/ms
Iteration   9: 1645.424 ops/ms
Iteration  10: 1630.226 ops/ms
Iteration  11: 1656.371 ops/ms
Iteration  12: 1652.538 ops/ms
Iteration  13: 1634.782 ops/ms
Iteration  14: 1611.365 ops/ms
Iteration  15: 1651.396 ops/ms
Iteration  16: 1645.717 ops/ms
Iteration  17: 1637.887 ops/ms
Iteration  18: 1641.793 ops/ms
Iteration  19: 1648.501 ops/ms
Iteration  20: 1650.117 ops/ms

Result : 1640.043 ?(95%) 5.807 ?(99%) 7.938 ops/ms
  Statistics: (min, avg, max) = (1611.365, 1640.043, 1660.771), stdev = 12.408
  Confidence intervals: 95% [1634.236, 1645.850], 99% [1632.105, 1647.981]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1041.879 ops/ms
# Warmup Iteration   2: 1584.067 ops/ms
# Warmup Iteration   3: 1436.159 ops/ms
# Warmup Iteration   4: 1610.791 ops/ms
# Warmup Iteration   5: 1636.216 ops/ms
# Warmup Iteration   6: 1601.705 ops/ms
# Warmup Iteration   7: 1618.787 ops/ms
# Warmup Iteration   8: 1615.447 ops/ms
# Warmup Iteration   9: 1629.845 ops/ms
# Warmup Iteration  10: 1610.526 ops/ms
# Warmup Iteration  11: 1623.499 ops/ms
# Warmup Iteration  12: 1618.486 ops/ms
# Warmup Iteration  13: 1635.148 ops/ms
# Warmup Iteration  14: 1629.819 ops/ms
# Warmup Iteration  15: 1602.760 ops/ms
# Warmup Iteration  16: 1613.867 ops/ms
# Warmup Iteration  17: 1611.958 ops/ms
# Warmup Iteration  18: 1611.326 ops/ms
# Warmup Iteration  19: 1590.135 ops/ms
# Warmup Iteration  20: 1600.720 ops/ms
Iteration   1: 1607.165 ops/ms
Iteration   2: 1612.609 ops/ms
Iteration   3: 1590.399 ops/ms
Iteration   4: 1612.960 ops/ms
Iteration   5: 1611.831 ops/ms
Iteration   6: 1617.167 ops/ms
Iteration   7: 1583.916 ops/ms
Iteration   8: 1618.983 ops/ms
Iteration   9: 1614.768 ops/ms
Iteration  10: 1604.427 ops/ms
Iteration  11: 1589.974 ops/ms
Iteration  12: 1611.304 ops/ms
Iteration  13: 1610.527 ops/ms
Iteration  14: 1603.223 ops/ms
Iteration  15: 1590.120 ops/ms
Iteration  16: 1610.970 ops/ms
Iteration  17: 1612.046 ops/ms
Iteration  18: 1602.016 ops/ms
Iteration  19: 1598.919 ops/ms
Iteration  20: 1619.322 ops/ms

Result : 1606.132 ?(95%) 4.921 ?(99%) 6.727 ops/ms
  Statistics: (min, avg, max) = (1583.916, 1606.132, 1619.322), stdev = 10.515
  Confidence intervals: 95% [1601.211, 1611.054], 99% [1599.405, 1612.860]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime
# Warmup Iteration   1: 1039.698 ops/ms
# Warmup Iteration   2: 1600.358 ops/ms
# Warmup Iteration   3: 1406.235 ops/ms
# Warmup Iteration   4: 1620.609 ops/ms
# Warmup Iteration   5: 1628.119 ops/ms
# Warmup Iteration   6: 1634.769 ops/ms
# Warmup Iteration   7: 1603.121 ops/ms
# Warmup Iteration   8: 1623.243 ops/ms
# Warmup Iteration   9: 1631.031 ops/ms
# Warmup Iteration  10: 1648.689 ops/ms
# Warmup Iteration  11: 1619.860 ops/ms
# Warmup Iteration  12: 1630.134 ops/ms
# Warmup Iteration  13: 1633.851 ops/ms
# Warmup Iteration  14: 1644.426 ops/ms
# Warmup Iteration  15: 1643.123 ops/ms
# Warmup Iteration  16: 1636.446 ops/ms
# Warmup Iteration  17: 1640.932 ops/ms
# Warmup Iteration  18: 1643.554 ops/ms
# Warmup Iteration  19: 1642.548 ops/ms
# Warmup Iteration  20: 1624.025 ops/ms
Iteration   1: 1650.775 ops/ms
Iteration   2: 1653.671 ops/ms
Iteration   3: 1646.998 ops/ms
Iteration   4: 1624.646 ops/ms
Iteration   5: 1643.710 ops/ms
Iteration   6: 1656.821 ops/ms
Iteration   7: 1619.465 ops/ms
Iteration   8: 1576.016 ops/ms
Iteration   9: 1596.642 ops/ms
Iteration  10: 1601.208 ops/ms
Iteration  11: 1603.129 ops/ms
Iteration  12: 1559.553 ops/ms
Iteration  13: 1626.322 ops/ms
Iteration  14: 1626.319 ops/ms
Iteration  15: 1611.265 ops/ms
Iteration  16: 1595.795 ops/ms
Iteration  17: 1583.263 ops/ms
Iteration  18: 1647.864 ops/ms
Iteration  19: 1642.748 ops/ms
Iteration  20: 1628.250 ops/ms

Result : 1619.723 ?(95%) 13.138 ?(99%) 17.959 ops/ms
  Statistics: (min, avg, max) = (1559.553, 1619.723, 1656.821), stdev = 28.073
  Confidence intervals: 95% [1606.585, 1632.861], 99% [1601.764, 1637.682]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3860.476 ops/ms
# Warmup Iteration   2: 4567.546 ops/ms
# Warmup Iteration   3: 4677.894 ops/ms
# Warmup Iteration   4: 4686.107 ops/ms
# Warmup Iteration   5: 4692.647 ops/ms
# Warmup Iteration   6: 4726.620 ops/ms
# Warmup Iteration   7: 4722.959 ops/ms
# Warmup Iteration   8: 4666.887 ops/ms
# Warmup Iteration   9: 4678.387 ops/ms
# Warmup Iteration  10: 4679.134 ops/ms
# Warmup Iteration  11: 4661.621 ops/ms
# Warmup Iteration  12: 4688.808 ops/ms
# Warmup Iteration  13: 4612.632 ops/ms
# Warmup Iteration  14: 4700.482 ops/ms
# Warmup Iteration  15: 4663.747 ops/ms
# Warmup Iteration  16: 4672.648 ops/ms
# Warmup Iteration  17: 4775.838 ops/ms
# Warmup Iteration  18: 4771.095 ops/ms
# Warmup Iteration  19: 4770.066 ops/ms
# Warmup Iteration  20: 4754.225 ops/ms
Iteration   1: 4713.173 ops/ms
Iteration   2: 4758.815 ops/ms
Iteration   3: 4800.502 ops/ms
Iteration   4: 4757.859 ops/ms
Iteration   5: 4713.124 ops/ms
Iteration   6: 4745.888 ops/ms
Iteration   7: 4749.363 ops/ms
Iteration   8: 4752.149 ops/ms
Iteration   9: 4749.154 ops/ms
Iteration  10: 4767.378 ops/ms
Iteration  11: 4748.273 ops/ms
Iteration  12: 4770.665 ops/ms
Iteration  13: 4778.649 ops/ms
Iteration  14: 4746.401 ops/ms
Iteration  15: 4767.469 ops/ms
Iteration  16: 4763.328 ops/ms
Iteration  17: 4735.100 ops/ms
Iteration  18: 4766.188 ops/ms
Iteration  19: 4767.052 ops/ms
Iteration  20: 4770.200 ops/ms

Result : 4756.036 ?(95%) 9.562 ?(99%) 13.071 ops/ms
  Statistics: (min, avg, max) = (4713.124, 4756.036, 4800.502), stdev = 20.431
  Confidence intervals: 95% [4746.474, 4765.599], 99% [4742.966, 4769.107]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3881.889 ops/ms
# Warmup Iteration   2: 4466.141 ops/ms
# Warmup Iteration   3: 4727.575 ops/ms
# Warmup Iteration   4: 4772.684 ops/ms
# Warmup Iteration   5: 4787.173 ops/ms
# Warmup Iteration   6: 4786.892 ops/ms
# Warmup Iteration   7: 4803.204 ops/ms
# Warmup Iteration   8: 4787.864 ops/ms
# Warmup Iteration   9: 4761.420 ops/ms
# Warmup Iteration  10: 4752.309 ops/ms
# Warmup Iteration  11: 4755.484 ops/ms
# Warmup Iteration  12: 4774.562 ops/ms
# Warmup Iteration  13: 4757.062 ops/ms
# Warmup Iteration  14: 4772.736 ops/ms
# Warmup Iteration  15: 4797.509 ops/ms
# Warmup Iteration  16: 4742.909 ops/ms
# Warmup Iteration  17: 4752.607 ops/ms
# Warmup Iteration  18: 4768.793 ops/ms
# Warmup Iteration  19: 4771.274 ops/ms
# Warmup Iteration  20: 4787.479 ops/ms
Iteration   1: 4785.961 ops/ms
Iteration   2: 4781.164 ops/ms
Iteration   3: 4768.565 ops/ms
Iteration   4: 4768.508 ops/ms
Iteration   5: 4766.225 ops/ms
Iteration   6: 4783.547 ops/ms
Iteration   7: 4769.799 ops/ms
Iteration   8: 4754.672 ops/ms
Iteration   9: 4736.038 ops/ms
Iteration  10: 4728.187 ops/ms
Iteration  11: 4767.956 ops/ms
Iteration  12: 4753.291 ops/ms
Iteration  13: 4770.118 ops/ms
Iteration  14: 4751.237 ops/ms
Iteration  15: 4761.710 ops/ms
Iteration  16: 4769.544 ops/ms
Iteration  17: 4771.576 ops/ms
Iteration  18: 4751.991 ops/ms
Iteration  19: 4769.572 ops/ms
Iteration  20: 4770.699 ops/ms

Result : 4764.018 ?(95%) 6.820 ?(99%) 9.322 ops/ms
  Statistics: (min, avg, max) = (4728.187, 4764.018, 4785.961), stdev = 14.572
  Confidence intervals: 95% [4757.198, 4770.838], 99% [4754.696, 4773.340]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3889.502 ops/ms
# Warmup Iteration   2: 4623.708 ops/ms
# Warmup Iteration   3: 4759.082 ops/ms
# Warmup Iteration   4: 4746.181 ops/ms
# Warmup Iteration   5: 4736.344 ops/ms
# Warmup Iteration   6: 4738.620 ops/ms
# Warmup Iteration   7: 4751.347 ops/ms
# Warmup Iteration   8: 4755.608 ops/ms
# Warmup Iteration   9: 4801.146 ops/ms
# Warmup Iteration  10: 4722.614 ops/ms
# Warmup Iteration  11: 4751.442 ops/ms
# Warmup Iteration  12: 4738.440 ops/ms
# Warmup Iteration  13: 4750.522 ops/ms
# Warmup Iteration  14: 4744.933 ops/ms
# Warmup Iteration  15: 4791.796 ops/ms
# Warmup Iteration  16: 4754.823 ops/ms
# Warmup Iteration  17: 4789.486 ops/ms
# Warmup Iteration  18: 4749.912 ops/ms
# Warmup Iteration  19: 4765.408 ops/ms
# Warmup Iteration  20: 4767.184 ops/ms
Iteration   1: 4739.378 ops/ms
Iteration   2: 4760.018 ops/ms
Iteration   3: 4751.214 ops/ms
Iteration   4: 4800.019 ops/ms
Iteration   5: 4768.243 ops/ms
Iteration   6: 4746.789 ops/ms
Iteration   7: 4739.301 ops/ms
Iteration   8: 4695.020 ops/ms
Iteration   9: 4740.088 ops/ms
Iteration  10: 4794.793 ops/ms
Iteration  11: 4790.077 ops/ms
Iteration  12: 4746.163 ops/ms
Iteration  13: 4788.467 ops/ms
Iteration  14: 4768.517 ops/ms
Iteration  15: 4737.053 ops/ms
Iteration  16: 4753.135 ops/ms
Iteration  17: 4794.886 ops/ms
Iteration  18: 4750.356 ops/ms
Iteration  19: 4753.313 ops/ms
Iteration  20: 4735.230 ops/ms

Result : 4757.603 ?(95%) 12.247 ?(99%) 16.741 ops/ms
  Statistics: (min, avg, max) = (4695.020, 4757.603, 4800.019), stdev = 26.168
  Confidence intervals: 95% [4745.356, 4769.850], 99% [4740.862, 4774.344]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3340.103 ops/ms
# Warmup Iteration   2: 4073.282 ops/ms
# Warmup Iteration   3: 4242.176 ops/ms
# Warmup Iteration   4: 4253.232 ops/ms
# Warmup Iteration   5: 4291.622 ops/ms
# Warmup Iteration   6: 4294.350 ops/ms
# Warmup Iteration   7: 4304.117 ops/ms
# Warmup Iteration   8: 4307.619 ops/ms
# Warmup Iteration   9: 4317.468 ops/ms
# Warmup Iteration  10: 4283.373 ops/ms
# Warmup Iteration  11: 4274.050 ops/ms
# Warmup Iteration  12: 4292.915 ops/ms
# Warmup Iteration  13: 4319.102 ops/ms
# Warmup Iteration  14: 4297.649 ops/ms
# Warmup Iteration  15: 4295.816 ops/ms
# Warmup Iteration  16: 4276.484 ops/ms
# Warmup Iteration  17: 4306.514 ops/ms
# Warmup Iteration  18: 4309.359 ops/ms
# Warmup Iteration  19: 4309.101 ops/ms
# Warmup Iteration  20: 4288.989 ops/ms
Iteration   1: 4306.211 ops/ms
Iteration   2: 4307.926 ops/ms
Iteration   3: 4308.138 ops/ms
Iteration   4: 4292.943 ops/ms
Iteration   5: 4307.148 ops/ms
Iteration   6: 4301.655 ops/ms
Iteration   7: 4314.973 ops/ms
Iteration   8: 4296.822 ops/ms
Iteration   9: 4306.861 ops/ms
Iteration  10: 4293.038 ops/ms
Iteration  11: 4304.157 ops/ms
Iteration  12: 4258.128 ops/ms
Iteration  13: 4322.834 ops/ms
Iteration  14: 4323.564 ops/ms
Iteration  15: 4310.577 ops/ms
Iteration  16: 4316.847 ops/ms
Iteration  17: 4335.236 ops/ms
Iteration  18: 4325.746 ops/ms
Iteration  19: 4331.953 ops/ms
Iteration  20: 4279.774 ops/ms

Result : 4307.227 ?(95%) 8.409 ?(99%) 11.495 ops/ms
  Statistics: (min, avg, max) = (4258.128, 4307.227, 4335.236), stdev = 17.968
  Confidence intervals: 95% [4298.818, 4315.636], 99% [4295.732, 4318.721]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields
# Warmup Iteration   1: 3878.380 ops/ms
# Warmup Iteration   2: 4608.620 ops/ms
# Warmup Iteration   3: 4760.275 ops/ms
# Warmup Iteration   4: 4753.369 ops/ms
# Warmup Iteration   5: 4782.344 ops/ms
# Warmup Iteration   6: 4806.037 ops/ms
# Warmup Iteration   7: 4850.571 ops/ms
# Warmup Iteration   8: 4762.056 ops/ms
# Warmup Iteration   9: 4814.241 ops/ms
# Warmup Iteration  10: 4772.185 ops/ms
# Warmup Iteration  11: 4791.822 ops/ms
# Warmup Iteration  12: 4788.743 ops/ms
# Warmup Iteration  13: 4769.634 ops/ms
# Warmup Iteration  14: 4797.769 ops/ms
# Warmup Iteration  15: 4799.871 ops/ms
# Warmup Iteration  16: 4796.619 ops/ms
# Warmup Iteration  17: 4812.630 ops/ms
# Warmup Iteration  18: 4756.176 ops/ms
# Warmup Iteration  19: 4755.926 ops/ms
# Warmup Iteration  20: 4713.245 ops/ms
Iteration   1: 4753.215 ops/ms
Iteration   2: 4752.784 ops/ms
Iteration   3: 4721.250 ops/ms
Iteration   4: 4745.497 ops/ms
Iteration   5: 4744.757 ops/ms
Iteration   6: 4765.144 ops/ms
Iteration   7: 4784.536 ops/ms
Iteration   8: 4782.148 ops/ms
Iteration   9: 4763.892 ops/ms
Iteration  10: 4780.531 ops/ms
Iteration  11: 4796.789 ops/ms
Iteration  12: 4779.992 ops/ms
Iteration  13: 4785.230 ops/ms
Iteration  14: 4777.495 ops/ms
Iteration  15: 4783.942 ops/ms
Iteration  16: 4782.229 ops/ms
Iteration  17: 4767.832 ops/ms
Iteration  18: 4774.690 ops/ms
Iteration  19: 4780.661 ops/ms
Iteration  20: 4777.442 ops/ms

Result : 4770.003 ?(95%) 8.568 ?(99%) 11.712 ops/ms
  Statistics: (min, avg, max) = (4721.250, 4770.003, 4796.789), stdev = 18.308
  Confidence intervals: 95% [4761.435, 4778.571], 99% [4758.291, 4781.715]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1541.811 ops/ms
# Warmup Iteration   2: 2141.289 ops/ms
# Warmup Iteration   3: 2144.349 ops/ms
# Warmup Iteration   4: 2140.080 ops/ms
# Warmup Iteration   5: 2136.988 ops/ms
# Warmup Iteration   6: 2145.928 ops/ms
# Warmup Iteration   7: 2152.923 ops/ms
# Warmup Iteration   8: 2136.913 ops/ms
# Warmup Iteration   9: 2145.720 ops/ms
# Warmup Iteration  10: 2139.635 ops/ms
# Warmup Iteration  11: 2148.490 ops/ms
# Warmup Iteration  12: 2147.459 ops/ms
# Warmup Iteration  13: 2144.333 ops/ms
# Warmup Iteration  14: 2151.785 ops/ms
# Warmup Iteration  15: 2141.107 ops/ms
# Warmup Iteration  16: 2145.734 ops/ms
# Warmup Iteration  17: 2087.760 ops/ms
# Warmup Iteration  18: 2076.045 ops/ms
# Warmup Iteration  19: 2060.934 ops/ms
# Warmup Iteration  20: 2022.083 ops/ms
Iteration   1: 2077.603 ops/ms
Iteration   2: 2063.835 ops/ms
Iteration   3: 2119.580 ops/ms
Iteration   4: 2036.027 ops/ms
Iteration   5: 2032.149 ops/ms
Iteration   6: 2101.962 ops/ms
Iteration   7: 2011.467 ops/ms
Iteration   8: 2053.067 ops/ms
Iteration   9: 2144.966 ops/ms
Iteration  10: 2133.114 ops/ms
Iteration  11: 2147.597 ops/ms
Iteration  12: 2134.510 ops/ms
Iteration  13: 2147.165 ops/ms
Iteration  14: 2133.560 ops/ms
Iteration  15: 2132.979 ops/ms
Iteration  16: 2145.895 ops/ms
Iteration  17: 2139.586 ops/ms
Iteration  18: 2131.297 ops/ms
Iteration  19: 2124.255 ops/ms
Iteration  20: 2146.772 ops/ms

Result : 2107.869 ?(95%) 20.968 ?(99%) 28.662 ops/ms
  Statistics: (min, avg, max) = (2011.467, 2107.869, 2147.597), stdev = 44.802
  Confidence intervals: 95% [2086.902, 2128.837], 99% [2079.208, 2136.531]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1251.923 ops/ms
# Warmup Iteration   2: 1809.757 ops/ms
# Warmup Iteration   3: 1837.494 ops/ms
# Warmup Iteration   4: 1850.233 ops/ms
# Warmup Iteration   5: 1847.522 ops/ms
# Warmup Iteration   6: 1831.990 ops/ms
# Warmup Iteration   7: 1864.845 ops/ms
# Warmup Iteration   8: 1864.856 ops/ms
# Warmup Iteration   9: 1854.732 ops/ms
# Warmup Iteration  10: 1862.924 ops/ms
# Warmup Iteration  11: 1862.294 ops/ms
# Warmup Iteration  12: 1873.545 ops/ms
# Warmup Iteration  13: 1871.902 ops/ms
# Warmup Iteration  14: 1842.795 ops/ms
# Warmup Iteration  15: 1873.827 ops/ms
# Warmup Iteration  16: 1872.118 ops/ms
# Warmup Iteration  17: 1922.287 ops/ms
# Warmup Iteration  18: 1922.026 ops/ms
# Warmup Iteration  19: 1918.922 ops/ms
# Warmup Iteration  20: 1928.029 ops/ms
Iteration   1: 1920.088 ops/ms
Iteration   2: 1912.583 ops/ms
Iteration   3: 1927.095 ops/ms
Iteration   4: 1928.407 ops/ms
Iteration   5: 1927.732 ops/ms
Iteration   6: 1918.996 ops/ms
Iteration   7: 1920.377 ops/ms
Iteration   8: 1924.400 ops/ms
Iteration   9: 1913.304 ops/ms
Iteration  10: 1926.651 ops/ms
Iteration  11: 1911.265 ops/ms
Iteration  12: 1925.740 ops/ms
Iteration  13: 1913.663 ops/ms
Iteration  14: 1926.619 ops/ms
Iteration  15: 1907.055 ops/ms
Iteration  16: 1925.638 ops/ms
Iteration  17: 1927.105 ops/ms
Iteration  18: 1927.214 ops/ms
Iteration  19: 1909.890 ops/ms
Iteration  20: 1930.218 ops/ms

Result : 1921.202 ?(95%) 3.426 ?(99%) 4.683 ops/ms
  Statistics: (min, avg, max) = (1907.055, 1921.202, 1930.218), stdev = 7.321
  Confidence intervals: 95% [1917.776, 1924.628], 99% [1916.519, 1925.885]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1503.755 ops/ms
# Warmup Iteration   2: 2091.791 ops/ms
# Warmup Iteration   3: 1910.614 ops/ms
# Warmup Iteration   4: 1890.818 ops/ms
# Warmup Iteration   5: 1961.852 ops/ms
# Warmup Iteration   6: 1964.759 ops/ms
# Warmup Iteration   7: 1916.988 ops/ms
# Warmup Iteration   8: 1914.912 ops/ms
# Warmup Iteration   9: 1917.423 ops/ms
# Warmup Iteration  10: 1913.885 ops/ms
# Warmup Iteration  11: 1913.484 ops/ms
# Warmup Iteration  12: 1917.330 ops/ms
# Warmup Iteration  13: 1924.648 ops/ms
# Warmup Iteration  14: 1912.407 ops/ms
# Warmup Iteration  15: 1902.104 ops/ms
# Warmup Iteration  16: 1921.422 ops/ms
# Warmup Iteration  17: 1931.235 ops/ms
# Warmup Iteration  18: 1917.535 ops/ms
# Warmup Iteration  19: 1927.593 ops/ms
# Warmup Iteration  20: 1934.061 ops/ms
Iteration   1: 1931.241 ops/ms
Iteration   2: 1937.949 ops/ms
Iteration   3: 1936.133 ops/ms
Iteration   4: 1935.445 ops/ms
Iteration   5: 1927.198 ops/ms
Iteration   6: 1928.582 ops/ms
Iteration   7: 1921.939 ops/ms
Iteration   8: 1926.758 ops/ms
Iteration   9: 1929.095 ops/ms
Iteration  10: 1935.026 ops/ms
Iteration  11: 1932.518 ops/ms
Iteration  12: 1920.328 ops/ms
Iteration  13: 1936.317 ops/ms
Iteration  14: 1937.090 ops/ms
Iteration  15: 1940.198 ops/ms
Iteration  16: 1929.205 ops/ms
Iteration  17: 1939.169 ops/ms
Iteration  18: 1928.164 ops/ms
Iteration  19: 1935.421 ops/ms
Iteration  20: 1919.685 ops/ms

Result : 1931.373 ?(95%) 2.888 ?(99%) 3.948 ops/ms
  Statistics: (min, avg, max) = (1919.685, 1931.373, 1940.198), stdev = 6.171
  Confidence intervals: 95% [1928.485, 1934.261], 99% [1927.425, 1935.321]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1385.841 ops/ms
# Warmup Iteration   2: 1872.816 ops/ms
# Warmup Iteration   3: 1755.700 ops/ms
# Warmup Iteration   4: 1743.449 ops/ms
# Warmup Iteration   5: 1730.083 ops/ms
# Warmup Iteration   6: 1727.372 ops/ms
# Warmup Iteration   7: 1769.160 ops/ms
# Warmup Iteration   8: 1764.136 ops/ms
# Warmup Iteration   9: 1766.413 ops/ms
# Warmup Iteration  10: 1774.084 ops/ms
# Warmup Iteration  11: 1772.550 ops/ms
# Warmup Iteration  12: 1770.439 ops/ms
# Warmup Iteration  13: 1771.742 ops/ms
# Warmup Iteration  14: 1762.591 ops/ms
# Warmup Iteration  15: 1767.382 ops/ms
# Warmup Iteration  16: 1777.434 ops/ms
# Warmup Iteration  17: 1782.571 ops/ms
# Warmup Iteration  18: 1787.717 ops/ms
# Warmup Iteration  19: 1792.220 ops/ms
# Warmup Iteration  20: 1779.537 ops/ms
Iteration   1: 1784.394 ops/ms
Iteration   2: 1784.072 ops/ms
Iteration   3: 1781.920 ops/ms
Iteration   4: 1785.179 ops/ms
Iteration   5: 1776.001 ops/ms
Iteration   6: 1784.313 ops/ms
Iteration   7: 1774.160 ops/ms
Iteration   8: 1783.904 ops/ms
Iteration   9: 1778.934 ops/ms
Iteration  10: 1778.708 ops/ms
Iteration  11: 1782.849 ops/ms
Iteration  12: 1779.250 ops/ms
Iteration  13: 1778.599 ops/ms
Iteration  14: 1784.693 ops/ms
Iteration  15: 1777.872 ops/ms
Iteration  16: 1776.658 ops/ms
Iteration  17: 1784.687 ops/ms
Iteration  18: 1784.220 ops/ms
Iteration  19: 1785.390 ops/ms
Iteration  20: 1785.178 ops/ms

Result : 1781.549 ?(95%) 1.695 ?(99%) 2.317 ops/ms
  Statistics: (min, avg, max) = (1774.160, 1781.549, 1785.390), stdev = 3.621
  Confidence intervals: 95% [1779.854, 1783.244], 99% [1779.233, 1783.866]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke
# Warmup Iteration   1: 1566.098 ops/ms
# Warmup Iteration   2: 2145.148 ops/ms
# Warmup Iteration   3: 2172.218 ops/ms
# Warmup Iteration   4: 2211.266 ops/ms
# Warmup Iteration   5: 2194.695 ops/ms
# Warmup Iteration   6: 2191.933 ops/ms
# Warmup Iteration   7: 2197.463 ops/ms
# Warmup Iteration   8: 2174.293 ops/ms
# Warmup Iteration   9: 2189.509 ops/ms
# Warmup Iteration  10: 2180.148 ops/ms
# Warmup Iteration  11: 2178.057 ops/ms
# Warmup Iteration  12: 2176.184 ops/ms
# Warmup Iteration  13: 2174.867 ops/ms
# Warmup Iteration  14: 2171.801 ops/ms
# Warmup Iteration  15: 2183.163 ops/ms
# Warmup Iteration  16: 2186.785 ops/ms
# Warmup Iteration  17: 2195.343 ops/ms
# Warmup Iteration  18: 2207.431 ops/ms
# Warmup Iteration  19: 2207.506 ops/ms
# Warmup Iteration  20: 2217.352 ops/ms
Iteration   1: 2214.481 ops/ms
Iteration   2: 2215.048 ops/ms
Iteration   3: 2217.694 ops/ms
Iteration   4: 2206.861 ops/ms
Iteration   5: 2216.770 ops/ms
Iteration   6: 2208.058 ops/ms
Iteration   7: 2212.173 ops/ms
Iteration   8: 2213.642 ops/ms
Iteration   9: 2208.599 ops/ms
Iteration  10: 2203.330 ops/ms
Iteration  11: 2108.818 ops/ms
Iteration  12: 2092.028 ops/ms
Iteration  13: 2100.214 ops/ms
Iteration  14: 2160.929 ops/ms
Iteration  15: 2198.839 ops/ms
Iteration  16: 2212.243 ops/ms
Iteration  17: 2209.930 ops/ms
Iteration  18: 2199.097 ops/ms
Iteration  19: 2173.611 ops/ms
Iteration  20: 2192.271 ops/ms

Result : 2188.232 ?(95%) 18.982 ?(99%) 25.947 ops/ms
  Statistics: (min, avg, max) = (2092.028, 2188.232, 2217.694), stdev = 40.558
  Confidence intervals: 95% [2169.250, 2207.213], 99% [2162.285, 2214.179]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1527.400 ops/ms
# Warmup Iteration   2: 2066.416 ops/ms
# Warmup Iteration   3: 2084.896 ops/ms
# Warmup Iteration   4: 2093.918 ops/ms
# Warmup Iteration   5: 2174.618 ops/ms
# Warmup Iteration   6: 2162.032 ops/ms
# Warmup Iteration   7: 2147.690 ops/ms
# Warmup Iteration   8: 2157.063 ops/ms
# Warmup Iteration   9: 2140.390 ops/ms
# Warmup Iteration  10: 2128.789 ops/ms
# Warmup Iteration  11: 2138.930 ops/ms
# Warmup Iteration  12: 2141.207 ops/ms
# Warmup Iteration  13: 2130.950 ops/ms
# Warmup Iteration  14: 2131.584 ops/ms
# Warmup Iteration  15: 2118.242 ops/ms
# Warmup Iteration  16: 2145.437 ops/ms
# Warmup Iteration  17: 2096.432 ops/ms
# Warmup Iteration  18: 2103.111 ops/ms
# Warmup Iteration  19: 2088.345 ops/ms
# Warmup Iteration  20: 2092.644 ops/ms
Iteration   1: 2092.645 ops/ms
Iteration   2: 2095.831 ops/ms
Iteration   3: 2100.531 ops/ms
Iteration   4: 2094.311 ops/ms
Iteration   5: 2101.616 ops/ms
Iteration   6: 2101.100 ops/ms
Iteration   7: 2101.882 ops/ms
Iteration   8: 2103.854 ops/ms
Iteration   9: 2088.305 ops/ms
Iteration  10: 2101.927 ops/ms
Iteration  11: 2092.232 ops/ms
Iteration  12: 2103.686 ops/ms
Iteration  13: 2103.018 ops/ms
Iteration  14: 2110.856 ops/ms
Iteration  15: 2096.246 ops/ms
Iteration  16: 2096.073 ops/ms
Iteration  17: 2096.251 ops/ms
Iteration  18: 2101.959 ops/ms
Iteration  19: 2076.724 ops/ms
Iteration  20: 2100.499 ops/ms

Result : 2097.977 ?(95%) 3.353 ?(99%) 4.584 ops/ms
  Statistics: (min, avg, max) = (2076.724, 2097.977, 2110.856), stdev = 7.165
  Confidence intervals: 95% [2094.624, 2101.330], 99% [2093.394, 2102.561]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1670.386 ops/ms
# Warmup Iteration   2: 2483.347 ops/ms
# Warmup Iteration   3: 2616.042 ops/ms
# Warmup Iteration   4: 2642.706 ops/ms
# Warmup Iteration   5: 2598.652 ops/ms
# Warmup Iteration   6: 2609.270 ops/ms
# Warmup Iteration   7: 2670.064 ops/ms
# Warmup Iteration   8: 2668.052 ops/ms
# Warmup Iteration   9: 2664.890 ops/ms
# Warmup Iteration  10: 2659.797 ops/ms
# Warmup Iteration  11: 2669.556 ops/ms
# Warmup Iteration  12: 2678.912 ops/ms
# Warmup Iteration  13: 2673.747 ops/ms
# Warmup Iteration  14: 2688.206 ops/ms
# Warmup Iteration  15: 2663.643 ops/ms
# Warmup Iteration  16: 2608.956 ops/ms
# Warmup Iteration  17: 2494.518 ops/ms
# Warmup Iteration  18: 2565.700 ops/ms
# Warmup Iteration  19: 2651.322 ops/ms
# Warmup Iteration  20: 2653.386 ops/ms
Iteration   1: 2676.163 ops/ms
Iteration   2: 2669.121 ops/ms
Iteration   3: 2670.576 ops/ms
Iteration   4: 2599.880 ops/ms
Iteration   5: 2580.247 ops/ms
Iteration   6: 2667.169 ops/ms
Iteration   7: 2661.129 ops/ms
Iteration   8: 2654.892 ops/ms
Iteration   9: 2680.262 ops/ms
Iteration  10: 2669.899 ops/ms
Iteration  11: 2680.700 ops/ms
Iteration  12: 2696.932 ops/ms
Iteration  13: 2674.076 ops/ms
Iteration  14: 2678.388 ops/ms
Iteration  15: 2653.635 ops/ms
Iteration  16: 2669.813 ops/ms
Iteration  17: 2692.686 ops/ms
Iteration  18: 2680.168 ops/ms
Iteration  19: 2672.653 ops/ms
Iteration  20: 2668.593 ops/ms

Result : 2664.849 ?(95%) 13.028 ?(99%) 17.808 ops/ms
  Statistics: (min, avg, max) = (2580.247, 2664.849, 2696.932), stdev = 27.837
  Confidence intervals: 95% [2651.821, 2677.877], 99% [2647.041, 2682.657]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1600.446 ops/ms
# Warmup Iteration   2: 2148.441 ops/ms
# Warmup Iteration   3: 2183.204 ops/ms
# Warmup Iteration   4: 2215.817 ops/ms
# Warmup Iteration   5: 2269.960 ops/ms
# Warmup Iteration   6: 2275.581 ops/ms
# Warmup Iteration   7: 2297.784 ops/ms
# Warmup Iteration   8: 2268.796 ops/ms
# Warmup Iteration   9: 2282.954 ops/ms
# Warmup Iteration  10: 2248.465 ops/ms
# Warmup Iteration  11: 2264.696 ops/ms
# Warmup Iteration  12: 2267.717 ops/ms
# Warmup Iteration  13: 2286.934 ops/ms
# Warmup Iteration  14: 2287.671 ops/ms
# Warmup Iteration  15: 2268.312 ops/ms
# Warmup Iteration  16: 2265.505 ops/ms
# Warmup Iteration  17: 2267.278 ops/ms
# Warmup Iteration  18: 2260.196 ops/ms
# Warmup Iteration  19: 2251.216 ops/ms
# Warmup Iteration  20: 2255.689 ops/ms
Iteration   1: 2253.023 ops/ms
Iteration   2: 2263.410 ops/ms
Iteration   3: 2269.094 ops/ms
Iteration   4: 2258.953 ops/ms
Iteration   5: 2264.973 ops/ms
Iteration   6: 2258.395 ops/ms
Iteration   7: 2262.285 ops/ms
Iteration   8: 2248.120 ops/ms
Iteration   9: 2254.707 ops/ms
Iteration  10: 2246.613 ops/ms
Iteration  11: 2256.717 ops/ms
Iteration  12: 2262.747 ops/ms
Iteration  13: 2239.820 ops/ms
Iteration  14: 2263.856 ops/ms
Iteration  15: 2283.488 ops/ms
Iteration  16: 2261.829 ops/ms
Iteration  17: 2241.769 ops/ms
Iteration  18: 2261.358 ops/ms
Iteration  19: 2254.619 ops/ms
Iteration  20: 2271.148 ops/ms

Result : 2258.846 ?(95%) 4.779 ?(99%) 6.533 ops/ms
  Statistics: (min, avg, max) = (2239.820, 2258.846, 2283.488), stdev = 10.212
  Confidence intervals: 95% [2254.067, 2263.625], 99% [2252.313, 2265.379]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1480.299 ops/ms
# Warmup Iteration   2: 2082.873 ops/ms
# Warmup Iteration   3: 2001.130 ops/ms
# Warmup Iteration   4: 2003.858 ops/ms
# Warmup Iteration   5: 2031.241 ops/ms
# Warmup Iteration   6: 2027.147 ops/ms
# Warmup Iteration   7: 1960.483 ops/ms
# Warmup Iteration   8: 1956.262 ops/ms
# Warmup Iteration   9: 1957.666 ops/ms
# Warmup Iteration  10: 1937.708 ops/ms
# Warmup Iteration  11: 1959.512 ops/ms
# Warmup Iteration  12: 1951.381 ops/ms
# Warmup Iteration  13: 1950.542 ops/ms
# Warmup Iteration  14: 1959.209 ops/ms
# Warmup Iteration  15: 1957.286 ops/ms
# Warmup Iteration  16: 1938.709 ops/ms
# Warmup Iteration  17: 2011.485 ops/ms
# Warmup Iteration  18: 2016.371 ops/ms
# Warmup Iteration  19: 2010.886 ops/ms
# Warmup Iteration  20: 2003.385 ops/ms
Iteration   1: 2011.413 ops/ms
Iteration   2: 2008.177 ops/ms
Iteration   3: 2010.183 ops/ms
Iteration   4: 2005.451 ops/ms
Iteration   5: 2000.901 ops/ms
Iteration   6: 2006.430 ops/ms
Iteration   7: 2010.982 ops/ms
Iteration   8: 2016.285 ops/ms
Iteration   9: 2017.119 ops/ms
Iteration  10: 2005.080 ops/ms
Iteration  11: 2014.103 ops/ms
Iteration  12: 2017.518 ops/ms
Iteration  13: 2015.827 ops/ms
Iteration  14: 2009.022 ops/ms
Iteration  15: 2015.831 ops/ms
Iteration  16: 2005.885 ops/ms
Iteration  17: 2011.827 ops/ms
Iteration  18: 2004.202 ops/ms
Iteration  19: 2015.891 ops/ms
Iteration  20: 2017.570 ops/ms

Result : 2010.985 ?(95%) 2.414 ?(99%) 3.300 ops/ms
  Statistics: (min, avg, max) = (2000.901, 2010.985, 2017.570), stdev = 5.159
  Confidence intervals: 95% [2008.570, 2013.399], 99% [2007.684, 2014.285]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact
# Warmup Iteration   1: 1671.503 ops/ms
# Warmup Iteration   2: 2166.420 ops/ms
# Warmup Iteration   3: 2162.390 ops/ms
# Warmup Iteration   4: 2170.123 ops/ms
# Warmup Iteration   5: 2159.564 ops/ms
# Warmup Iteration   6: 2180.396 ops/ms
# Warmup Iteration   7: 2193.559 ops/ms
# Warmup Iteration   8: 2188.091 ops/ms
# Warmup Iteration   9: 2197.791 ops/ms
# Warmup Iteration  10: 2184.255 ops/ms
# Warmup Iteration  11: 2193.250 ops/ms
# Warmup Iteration  12: 2181.039 ops/ms
# Warmup Iteration  13: 2196.959 ops/ms
# Warmup Iteration  14: 2186.843 ops/ms
# Warmup Iteration  15: 2183.871 ops/ms
# Warmup Iteration  16: 2210.561 ops/ms
# Warmup Iteration  17: 2248.018 ops/ms
# Warmup Iteration  18: 2249.404 ops/ms
# Warmup Iteration  19: 2248.705 ops/ms
# Warmup Iteration  20: 2248.999 ops/ms
Iteration   1: 2242.158 ops/ms
Iteration   2: 2242.594 ops/ms
Iteration   3: 2247.828 ops/ms
Iteration   4: 2250.713 ops/ms
Iteration   5: 2249.883 ops/ms
Iteration   6: 2249.953 ops/ms
Iteration   7: 2243.189 ops/ms
Iteration   8: 2242.326 ops/ms
Iteration   9: 2252.390 ops/ms
Iteration  10: 2246.824 ops/ms
Iteration  11: 2240.000 ops/ms
Iteration  12: 2250.585 ops/ms
Iteration  13: 2239.128 ops/ms
Iteration  14: 2252.420 ops/ms
Iteration  15: 2240.240 ops/ms
Iteration  16: 2251.121 ops/ms
Iteration  17: 2261.170 ops/ms
Iteration  18: 2250.316 ops/ms
Iteration  19: 2244.284 ops/ms
Iteration  20: 2242.026 ops/ms

Result : 2246.957 ?(95%) 2.629 ?(99%) 3.594 ops/ms
  Statistics: (min, avg, max) = (2239.128, 2246.957, 2261.170), stdev = 5.617
  Confidence intervals: 95% [2244.328, 2249.586], 99% [2243.364, 2250.551]


# Fork: 1 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 566.097 ops/ms
# Warmup Iteration   2: 1060.717 ops/ms
# Warmup Iteration   3: 1273.334 ops/ms
# Warmup Iteration   4: 1275.582 ops/ms
# Warmup Iteration   5: 1255.569 ops/ms
# Warmup Iteration   6: 1258.913 ops/ms
# Warmup Iteration   7: 1078.831 ops/ms
# Warmup Iteration   8: 1243.086 ops/ms
# Warmup Iteration   9: 1271.873 ops/ms
# Warmup Iteration  10: 1272.773 ops/ms
# Warmup Iteration  11: 1262.518 ops/ms
# Warmup Iteration  12: 1263.710 ops/ms
# Warmup Iteration  13: 1273.131 ops/ms
# Warmup Iteration  14: 1261.396 ops/ms
# Warmup Iteration  15: 1259.369 ops/ms
# Warmup Iteration  16: 1266.675 ops/ms
# Warmup Iteration  17: 1307.140 ops/ms
# Warmup Iteration  18: 1301.448 ops/ms
# Warmup Iteration  19: 1296.300 ops/ms
# Warmup Iteration  20: 1301.287 ops/ms
Iteration   1: 1300.209 ops/ms
Iteration   2: 1305.976 ops/ms
Iteration   3: 1291.094 ops/ms
Iteration   4: 1298.701 ops/ms
Iteration   5: 1305.862 ops/ms
Iteration   6: 1301.917 ops/ms
Iteration   7: 1302.879 ops/ms
Iteration   8: 1300.626 ops/ms
Iteration   9: 1290.828 ops/ms
Iteration  10: 1306.131 ops/ms
Iteration  11: 1303.626 ops/ms
Iteration  12: 1300.136 ops/ms
Iteration  13: 1305.307 ops/ms
Iteration  14: 1302.521 ops/ms
Iteration  15: 1296.388 ops/ms
Iteration  16: 1305.334 ops/ms
Iteration  17: 1304.401 ops/ms
Iteration  18: 1301.164 ops/ms
Iteration  19: 1300.072 ops/ms
Iteration  20: 1302.552 ops/ms

Result : 1301.286 ?(95%) 2.061 ?(99%) 2.818 ops/ms
  Statistics: (min, avg, max) = (1290.828, 1301.286, 1306.131), stdev = 4.404
  Confidence intervals: 95% [1299.225, 1303.347], 99% [1298.469, 1304.104]


# Fork: 2 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 548.669 ops/ms
# Warmup Iteration   2: 921.797 ops/ms
# Warmup Iteration   3: 1142.679 ops/ms
# Warmup Iteration   4: 1136.014 ops/ms
# Warmup Iteration   5: 1138.761 ops/ms
# Warmup Iteration   6: 1131.842 ops/ms
# Warmup Iteration   7: 1010.695 ops/ms
# Warmup Iteration   8: 1088.636 ops/ms
# Warmup Iteration   9: 1123.850 ops/ms
# Warmup Iteration  10: 1135.615 ops/ms
# Warmup Iteration  11: 1137.251 ops/ms
# Warmup Iteration  12: 1134.414 ops/ms
# Warmup Iteration  13: 1139.700 ops/ms
# Warmup Iteration  14: 1128.517 ops/ms
# Warmup Iteration  15: 1135.867 ops/ms
# Warmup Iteration  16: 1127.946 ops/ms
# Warmup Iteration  17: 1144.560 ops/ms
# Warmup Iteration  18: 1146.746 ops/ms
# Warmup Iteration  19: 1142.519 ops/ms
# Warmup Iteration  20: 1145.592 ops/ms
Iteration   1: 1137.223 ops/ms
Iteration   2: 1136.666 ops/ms
Iteration   3: 1138.138 ops/ms
Iteration   4: 1138.136 ops/ms
Iteration   5: 1138.318 ops/ms
Iteration   6: 1143.203 ops/ms
Iteration   7: 1137.723 ops/ms
Iteration   8: 1135.463 ops/ms
Iteration   9: 1138.073 ops/ms
Iteration  10: 1140.667 ops/ms
Iteration  11: 1134.380 ops/ms
Iteration  12: 1138.855 ops/ms
Iteration  13: 1146.471 ops/ms
Iteration  14: 1140.588 ops/ms
Iteration  15: 1143.254 ops/ms
Iteration  16: 1143.992 ops/ms
Iteration  17: 1146.982 ops/ms
Iteration  18: 1146.988 ops/ms
Iteration  19: 1146.635 ops/ms
Iteration  20: 1135.660 ops/ms

Result : 1140.371 ?(95%) 1.945 ?(99%) 2.658 ops/ms
  Statistics: (min, avg, max) = (1134.380, 1140.371, 1146.988), stdev = 4.156
  Confidence intervals: 95% [1138.426, 1142.315], 99% [1137.712, 1143.029]


# Fork: 3 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 576.114 ops/ms
# Warmup Iteration   2: 1068.719 ops/ms
# Warmup Iteration   3: 1256.430 ops/ms
# Warmup Iteration   4: 1237.475 ops/ms
# Warmup Iteration   5: 1205.859 ops/ms
# Warmup Iteration   6: 1204.471 ops/ms
# Warmup Iteration   7: 1073.120 ops/ms
# Warmup Iteration   8: 1247.364 ops/ms
# Warmup Iteration   9: 1272.538 ops/ms
# Warmup Iteration  10: 1258.016 ops/ms
# Warmup Iteration  11: 1261.311 ops/ms
# Warmup Iteration  12: 1262.815 ops/ms
# Warmup Iteration  13: 1258.494 ops/ms
# Warmup Iteration  14: 1264.438 ops/ms
# Warmup Iteration  15: 1262.675 ops/ms
# Warmup Iteration  16: 1270.547 ops/ms
# Warmup Iteration  17: 1226.786 ops/ms
# Warmup Iteration  18: 1228.467 ops/ms
# Warmup Iteration  19: 1217.050 ops/ms
# Warmup Iteration  20: 1238.798 ops/ms
Iteration   1: 1233.966 ops/ms
Iteration   2: 1227.379 ops/ms
Iteration   3: 1236.247 ops/ms
Iteration   4: 1232.073 ops/ms
Iteration   5: 1237.250 ops/ms
Iteration   6: 1236.050 ops/ms
Iteration   7: 1231.713 ops/ms
Iteration   8: 1236.839 ops/ms
Iteration   9: 1226.163 ops/ms
Iteration  10: 1226.695 ops/ms
Iteration  11: 1231.331 ops/ms
Iteration  12: 1228.067 ops/ms
Iteration  13: 1223.868 ops/ms
Iteration  14: 1225.993 ops/ms
Iteration  15: 1226.890 ops/ms
Iteration  16: 1234.859 ops/ms
Iteration  17: 1233.918 ops/ms
Iteration  18: 1235.550 ops/ms
Iteration  19: 1224.593 ops/ms
Iteration  20: 1230.764 ops/ms

Result : 1231.010 ?(95%) 2.089 ?(99%) 2.855 ops/ms
  Statistics: (min, avg, max) = (1223.868, 1231.010, 1237.250), stdev = 4.463
  Confidence intervals: 95% [1228.922, 1233.099], 99% [1228.155, 1233.865]


# Fork: 4 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 565.775 ops/ms
# Warmup Iteration   2: 1061.071 ops/ms
# Warmup Iteration   3: 1289.734 ops/ms
# Warmup Iteration   4: 1281.354 ops/ms
# Warmup Iteration   5: 1300.083 ops/ms
# Warmup Iteration   6: 1294.681 ops/ms
# Warmup Iteration   7: 1090.957 ops/ms
# Warmup Iteration   8: 1310.027 ops/ms
# Warmup Iteration   9: 1312.736 ops/ms
# Warmup Iteration  10: 1304.769 ops/ms
# Warmup Iteration  11: 1316.952 ops/ms
# Warmup Iteration  12: 1307.859 ops/ms
# Warmup Iteration  13: 1309.279 ops/ms
# Warmup Iteration  14: 1314.490 ops/ms
# Warmup Iteration  15: 1311.248 ops/ms
# Warmup Iteration  16: 1309.626 ops/ms
# Warmup Iteration  17: 1283.144 ops/ms
# Warmup Iteration  18: 1284.700 ops/ms
# Warmup Iteration  19: 1297.829 ops/ms
# Warmup Iteration  20: 1283.992 ops/ms
Iteration   1: 1296.417 ops/ms
Iteration   2: 1296.294 ops/ms
Iteration   3: 1287.624 ops/ms
Iteration   4: 1298.610 ops/ms
Iteration   5: 1299.645 ops/ms
Iteration   6: 1289.404 ops/ms
Iteration   7: 1293.823 ops/ms
Iteration   8: 1292.574 ops/ms
Iteration   9: 1293.010 ops/ms
Iteration  10: 1288.285 ops/ms
Iteration  11: 1292.187 ops/ms
Iteration  12: 1298.874 ops/ms
Iteration  13: 1289.485 ops/ms
Iteration  14: 1293.925 ops/ms
Iteration  15: 1292.084 ops/ms
Iteration  16: 1288.443 ops/ms
Iteration  17: 1298.790 ops/ms
Iteration  18: 1281.851 ops/ms
Iteration  19: 1286.274 ops/ms
Iteration  20: 1288.814 ops/ms

Result : 1292.321 ?(95%) 2.263 ?(99%) 3.094 ops/ms
  Statistics: (min, avg, max) = (1281.851, 1292.321, 1299.645), stdev = 4.836
  Confidence intervals: 95% [1290.057, 1294.584], 99% [1289.227, 1295.415]


# Fork: 5 of 5
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Running: com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments
# Warmup Iteration   1: 553.054 ops/ms
# Warmup Iteration   2: 991.090 ops/ms
# Warmup Iteration   3: 1217.730 ops/ms
# Warmup Iteration   4: 1222.066 ops/ms
# Warmup Iteration   5: 1227.240 ops/ms
# Warmup Iteration   6: 1220.199 ops/ms
# Warmup Iteration   7: 1044.413 ops/ms
# Warmup Iteration   8: 1162.621 ops/ms
# Warmup Iteration   9: 1208.116 ops/ms
# Warmup Iteration  10: 1216.423 ops/ms
# Warmup Iteration  11: 1209.970 ops/ms
# Warmup Iteration  12: 1216.879 ops/ms
# Warmup Iteration  13: 1212.922 ops/ms
# Warmup Iteration  14: 1206.479 ops/ms
# Warmup Iteration  15: 1207.983 ops/ms
# Warmup Iteration  16: 1216.339 ops/ms
# Warmup Iteration  17: 1219.490 ops/ms
# Warmup Iteration  18: 1218.098 ops/ms
# Warmup Iteration  19: 1221.457 ops/ms
# Warmup Iteration  20: 1217.481 ops/ms
Iteration   1: 1215.502 ops/ms
Iteration   2: 1217.821 ops/ms
Iteration   3: 1210.528 ops/ms
Iteration   4: 1219.593 ops/ms
Iteration   5: 1223.347 ops/ms
Iteration   6: 1221.151 ops/ms
Iteration   7: 1213.480 ops/ms
Iteration   8: 1218.749 ops/ms
Iteration   9: 1218.853 ops/ms
Iteration  10: 1215.651 ops/ms
Iteration  11: 1210.767 ops/ms
Iteration  12: 1217.310 ops/ms
Iteration  13: 1219.010 ops/ms
Iteration  14: 1219.227 ops/ms
Iteration  15: 1208.688 ops/ms
Iteration  16: 1222.709 ops/ms
Iteration  17: 1219.371 ops/ms
Iteration  18: 1211.963 ops/ms
Iteration  19: 1216.157 ops/ms
Iteration  20: 1218.651 ops/ms

Result : 1216.926 ?(95%) 1.902 ?(99%) 2.599 ops/ms
  Statistics: (min, avg, max) = (1208.688, 1216.926, 1223.347), stdev = 4.063
  Confidence intervals: 95% [1215.025, 1218.828], 99% [1214.327, 1219.526]


"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByClone", aggregate over forked runs:

Result : 100847.468 ?(95%) 737.206 ?(99%) 975.757 ops/ms
  Statistics: (min, avg, max) = (84768.822, 100847.468, 104194.525), stdev = 3715.756
  Confidence intervals: 95% [100110.262, 101584.674], 99% [99871.711, 101823.226]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 50.962 ?(95%) 0.136 ?(99%) 0.180 ops/ms
  Statistics: (min, avg, max) = (47.191, 50.962, 51.699), stdev = 0.684
  Confidence intervals: 95% [50.826, 51.098], 99% [50.782, 51.142]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 52.655 ?(95%) 0.077 ?(99%) 0.102 ops/ms
  Statistics: (min, avg, max) = (51.778, 52.655, 53.420), stdev = 0.387
  Confidence intervals: 95% [52.578, 52.732], 99% [52.553, 52.757]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 83.257 ?(95%) 0.220 ?(99%) 0.291 ops/ms
  Statistics: (min, avg, max) = (80.847, 83.257, 86.053), stdev = 1.107
  Confidence intervals: 95% [83.037, 83.476], 99% [82.966, 83.548]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyConstructor", aggregate over forked runs:

Result : 55376.984 ?(95%) 97.473 ?(99%) 129.014 ops/ms
  Statistics: (min, avg, max) = (54120.957, 55376.984, 56390.047), stdev = 491.293
  Confidence intervals: 95% [55279.511, 55474.456], 99% [55247.970, 55505.997]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 1275.614 ?(95%) 10.402 ?(99%) 13.768 ops/ms
  Statistics: (min, avg, max) = (920.938, 1275.614, 1330.481), stdev = 52.431
  Confidence intervals: 95% [1265.212, 1286.017], 99% [1261.846, 1289.383]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 1740.500 ?(95%) 7.812 ?(99%) 10.340 ops/ms
  Statistics: (min, avg, max) = (1655.546, 1740.500, 1783.694), stdev = 39.376
  Confidence intervals: 95% [1732.688, 1748.313], 99% [1730.160, 1750.841]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 2466.242 ?(95%) 61.874 ?(99%) 81.896 ops/ms
  Statistics: (min, avg, max) = (2145.325, 2466.242, 3028.894), stdev = 311.865
  Confidence intervals: 95% [2404.368, 2528.116], 99% [2384.346, 2548.138]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2458.133 ?(95%) 56.806 ?(99%) 75.188 ops/ms
  Statistics: (min, avg, max) = (2045.015, 2458.133, 2821.178), stdev = 286.323
  Confidence intervals: 95% [2401.327, 2514.940], 99% [2382.945, 2533.322]

"com.vyazelenko.blog.copyobject.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 1160.284 ?(95%) 19.149 ?(99%) 25.346 ops/ms
  Statistics: (min, avg, max) = (1013.896, 1160.284, 1306.080), stdev = 96.518
  Confidence intervals: 95% [1141.135, 1179.433], 99% [1134.939, 1185.630]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByClone", aggregate over forked runs:

Result : 92653.512 ?(95%) 269.512 ?(99%) 356.724 ops/ms
  Statistics: (min, avg, max) = (87346.749, 92653.512, 94503.304), stdev = 1358.429
  Confidence intervals: 95% [92384.000, 92923.025], 99% [92296.789, 93010.236]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByCustomSerialization", aggregate over forked runs:

Result : 41.246 ?(95%) 0.150 ?(99%) 0.198 ops/ms
  Statistics: (min, avg, max) = (39.495, 41.246, 42.081), stdev = 0.755
  Confidence intervals: 95% [41.096, 41.396], 99% [41.047, 41.444]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByDefaultSerialization", aggregate over forked runs:

Result : 18.094 ?(95%) 0.087 ?(99%) 0.116 ops/ms
  Statistics: (min, avg, max) = (17.406, 18.094, 18.914), stdev = 0.440
  Confidence intervals: 95% [18.006, 18.181], 99% [17.978, 18.209]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyByExternalizable", aggregate over forked runs:

Result : 82.913 ?(95%) 0.227 ?(99%) 0.300 ops/ms
  Statistics: (min, avg, max) = (80.360, 82.913, 84.661), stdev = 1.144
  Confidence intervals: 95% [82.686, 83.140], 99% [82.613, 83.213]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyConstructor", aggregate over forked runs:

Result : 53801.287 ?(95%) 90.581 ?(99%) 119.892 ops/ms
  Statistics: (min, avg, max) = (52552.500, 53801.287, 54542.408), stdev = 456.558
  Confidence intervals: 95% [53710.706, 53891.868], 99% [53681.395, 53921.179]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime", aggregate over forked runs:

Result : 1633.429 ?(95%) 4.801 ?(99%) 6.355 ops/ms
  Statistics: (min, avg, max) = (1559.553, 1633.429, 1672.575), stdev = 24.200
  Confidence intervals: 95% [1628.627, 1638.230], 99% [1627.074, 1639.784]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields", aggregate over forked runs:

Result : 4670.977 ?(95%) 36.484 ?(99%) 48.290 ops/ms
  Statistics: (min, avg, max) = (4258.128, 4670.977, 4800.502), stdev = 183.892
  Confidence intervals: 95% [4634.493, 4707.462], 99% [4622.687, 4719.267]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke", aggregate over forked runs:

Result : 1986.045 ?(95%) 29.347 ?(99%) 38.843 ops/ms
  Statistics: (min, avg, max) = (1774.160, 1986.045, 2217.694), stdev = 147.916
  Confidence intervals: 95% [1956.698, 2015.392], 99% [1947.202, 2024.888]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact", aggregate over forked runs:

Result : 2255.923 ?(95%) 44.871 ?(99%) 59.390 ops/ms
  Statistics: (min, avg, max) = (2000.901, 2255.923, 2696.932), stdev = 226.163
  Confidence intervals: 95% [2211.052, 2300.794], 99% [2196.533, 2315.313]

"com.vyazelenko.blog.copyobject.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments", aggregate over forked runs:

Result : 1236.383 ?(95%) 11.647 ?(99%) 15.416 ops/ms
  Statistics: (min, avg, max) = (1134.380, 1236.383, 1306.131), stdev = 58.705
  Confidence intervals: 95% [1224.736, 1248.030], 99% [1220.967, 1251.799]

Benchmark                                                                              Mode Thr    Cnt  Sec         Mean   Mean error    Units
c.v.b.c.primitives.PrimitiveBenchmark.copyByClone                                     thrpt   1    100    1   100847.468      975.757   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByCustomSerialization                       thrpt   1    100    1       50.962        0.180   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByDefaultSerialization                      thrpt   1    100    1       52.655        0.102   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyByExternalizable                            thrpt   1    100    1       83.257        0.291   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyConstructor                                 thrpt   1    100    1    55376.984      129.014   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldGetFieldsEveryTime              thrpt   1    100    1     1275.614       13.768   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyFieldByFieldUseCacheFields                  thrpt   1    100    1     1740.500       10.340   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvoke                 thrpt   1    100    1     2466.242       81.896   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeExact            thrpt   1    100    1     2458.133       75.188   ops/ms
c.v.b.c.primitives.PrimitiveBenchmark.copyViaMethodHandlesUsingInvokeWithArguments    thrpt   1    100    1     1160.284       25.346   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByClone                                        thrpt   1    100    1    92653.512      356.724   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByCustomSerialization                          thrpt   1    100    1       41.246        0.198   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByDefaultSerialization                         thrpt   1    100    1       18.094        0.116   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyByExternalizable                               thrpt   1    100    1       82.913        0.300   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyConstructor                                    thrpt   1    100    1    53801.287      119.892   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldGetFieldsEveryTime                 thrpt   1    100    1     1633.429        6.355   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyFieldByFieldUseCacheFields                     thrpt   1    100    1     4670.977       48.290   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvoke                    thrpt   1    100    1     1986.045       38.843   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeExact               thrpt   1    100    1     2255.923       59.390   ops/ms
c.v.b.c.wrappers.WrappersBenchmark.copyViaMethodHandlesUsingInvokeWithArguments       thrpt   1    100    1     1236.383       15.416   ops/ms
